<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="902.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="885" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="885" > </text>
<g id="frames">
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,098,539,562 samples, 1.38%)</title><rect x="705.6" y="693" width="16.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="708.56" y="703.5" ></text>
</g>
<g >
<title>_int_free (22,113,277 samples, 0.03%)</title><rect x="254.1" y="693" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="257.14" y="703.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="645" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,057,421 samples, 0.01%)</title><rect x="576.3" y="613" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="579.31" y="623.5" ></text>
</g>
<g >
<title>std::uppercase (425,934,382 samples, 0.53%)</title><rect x="961.4" y="645" width="6.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="964.39" y="655.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_noprof (28,265,752 samples, 0.04%)</title><rect x="15.4" y="197" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="18.43" y="207.5" ></text>
</g>
<g >
<title>std::operator|= (69,592,214 samples, 0.09%)</title><rect x="203.7" y="629" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="206.69" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,068,277 samples, 0.02%)</title><rect x="613.6" y="613" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="616.61" y="623.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (12,682,715 samples, 0.02%)</title><rect x="145.7" y="677" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="148.72" y="687.5" ></text>
</g>
<g >
<title>std::ios_base::setf (57,972,181 samples, 0.07%)</title><rect x="109.9" y="645" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="112.93" y="655.5" ></text>
</g>
<g >
<title>update_curr (8,070,003 samples, 0.01%)</title><rect x="14.3" y="293" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="17.31" y="303.5" ></text>
</g>
<g >
<title>lock_timer_base (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="549" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1020.44" y="559.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="597" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.42" y="607.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (28,265,752 samples, 0.04%)</title><rect x="15.4" y="181" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="18.43" y="191.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (93,014,343 samples, 0.12%)</title><rect x="14.1" y="613" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.05" y="623.5" ></text>
</g>
<g >
<title>std::uppercase (112,752,655 samples, 0.14%)</title><rect x="284.3" y="661" width="1.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="287.35" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22,108,483 samples, 0.03%)</title><rect x="92.8" y="613" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="95.77" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (12,499,515 samples, 0.02%)</title><rect x="1003.1" y="645" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1006.08" y="655.5" ></text>
</g>
<g >
<title>__update_load_avg_se (10,639,512 samples, 0.01%)</title><rect x="728.4" y="517" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="731.35" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,880,509 samples, 0.01%)</title><rect x="692.4" y="613" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="695.39" y="623.5" ></text>
</g>
<g >
<title>_start (79,633,786,465 samples, 99.74%)</title><rect x="13.0" y="821" width="1177.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="16.03" y="831.5" >_start</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (1,327,477,323 samples, 1.66%)</title><rect x="769.6" y="645" width="19.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="772.58" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9,175,991 samples, 0.01%)</title><rect x="970.2" y="613" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="973.17" y="623.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (13,756,522 samples, 0.02%)</title><rect x="665.3" y="677" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="668.30" y="687.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (28,265,752 samples, 0.04%)</title><rect x="15.4" y="421" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="18.43" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (30,923,753 samples, 0.04%)</title><rect x="805.0" y="645" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="808.04" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (39,249,473 samples, 0.05%)</title><rect x="14.6" y="421" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="17.57" y="431.5" ></text>
</g>
<g >
<title>std::hex (20,103,313 samples, 0.03%)</title><rect x="657.9" y="677" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="660.93" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (347,960,960 samples, 0.44%)</title><rect x="1087.9" y="725" width="5.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1090.91" y="735.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,998,180 samples, 0.01%)</title><rect x="17.5" y="597" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="20.50" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (11,061,161 samples, 0.01%)</title><rect x="1002.4" y="645" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1005.36" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (12,069,300 samples, 0.02%)</title><rect x="1001.1" y="661" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1004.15" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="645" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="655.5" ></text>
</g>
<g >
<title>_int_free (297,402,105 samples, 0.37%)</title><rect x="1019.8" y="709" width="4.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1022.79" y="719.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="613" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.42" y="623.5" ></text>
</g>
<g >
<title>drm_ioctl_kernel (9,153,767 samples, 0.01%)</title><rect x="13.9" y="373" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="16.91" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (11,059,957 samples, 0.01%)</title><rect x="109.3" y="661" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="112.27" y="671.5" ></text>
</g>
<g >
<title>std::locale::operator= (58,231,640 samples, 0.07%)</title><rect x="138.0" y="645" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="141.02" y="655.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="725" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (12,070,205 samples, 0.02%)</title><rect x="98.6" y="677" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="101.59" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (83,380,746 samples, 0.10%)</title><rect x="248.9" y="645" width="1.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="251.92" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (10,787,901 samples, 0.01%)</title><rect x="461.5" y="645" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="464.48" y="655.5" ></text>
</g>
<g >
<title>[unknown] (14,066,274 samples, 0.02%)</title><rect x="10.6" y="789" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.57" y="799.5" ></text>
</g>
<g >
<title>__do_sys_clone3 (38,313,800 samples, 0.05%)</title><rect x="17.6" y="325" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="20.64" y="335.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="565" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="575.5" ></text>
</g>
<g >
<title>sched_balance_trigger (11,050,961 samples, 0.01%)</title><rect x="1133.0" y="565" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1135.97" y="575.5" ></text>
</g>
<g >
<title>Logger::log (25,087,021 samples, 0.03%)</title><rect x="570.1" y="693" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="573.13" y="703.5" ></text>
</g>
<g >
<title>operator new (11,057,296 samples, 0.01%)</title><rect x="1002.9" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1005.91" y="623.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (7,555,648 samples, 0.01%)</title><rect x="13.3" y="597" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="16.31" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (39,249,473 samples, 0.05%)</title><rect x="14.6" y="309" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="17.57" y="319.5" ></text>
</g>
<g >
<title>std::locale::locale (64,224,104 samples, 0.08%)</title><rect x="924.3" y="661" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="927.29" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (13,078,188 samples, 0.02%)</title><rect x="1007.1" y="613" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1010.13" y="623.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (42,101,776 samples, 0.05%)</title><rect x="13.4" y="661" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="16.42" y="671.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (10,936,554 samples, 0.01%)</title><rect x="730.9" y="693" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="733.91" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (11,057,692 samples, 0.01%)</title><rect x="309.7" y="661" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="312.73" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (57,198,632 samples, 0.07%)</title><rect x="690.7" y="629" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="693.71" y="639.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (13,834,864 samples, 0.02%)</title><rect x="1010.9" y="613" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1013.94" y="623.5" ></text>
</g>
<g >
<title>std::ios_base::setf (201,331,844 samples, 0.25%)</title><rect x="163.3" y="645" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="166.26" y="655.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (22,900,467 samples, 0.03%)</title><rect x="266.0" y="613" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="269.01" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (32,126,495 samples, 0.04%)</title><rect x="451.6" y="677" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="454.63" y="687.5" ></text>
</g>
<g >
<title>malloc (225,721,986 samples, 0.28%)</title><rect x="1067.9" y="661" width="3.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1070.95" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (3,487,012,545 samples, 4.37%)</title><rect x="594.8" y="677" width="51.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="597.82" y="687.5" >std::..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="677" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1135.97" y="687.5" ></text>
</g>
<g >
<title>timekeeping_update (9,175,991 samples, 0.01%)</title><rect x="970.2" y="501" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="973.17" y="511.5" ></text>
</g>
<g >
<title>sock_recvmsg (39,249,473 samples, 0.05%)</title><rect x="14.6" y="389" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="17.57" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,068,277 samples, 0.02%)</title><rect x="613.6" y="581" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="616.61" y="591.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (14,080,512 samples, 0.02%)</title><rect x="107.4" y="677" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="110.43" y="687.5" ></text>
</g>
<g >
<title>std::_Setfill&lt;char&gt; std::setfill&lt;char&gt; (10,045,569 samples, 0.01%)</title><rect x="834.4" y="677" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="837.41" y="687.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (24,082,838 samples, 0.03%)</title><rect x="148.4" y="661" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="151.38" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (11,057,065 samples, 0.01%)</title><rect x="272.0" y="677" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="275.03" y="687.5" ></text>
</g>
<g >
<title>SDLRenderer::initialize (344,341,486 samples, 0.43%)</title><rect x="13.3" y="757" width="5.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="16.29" y="767.5" ></text>
</g>
<g >
<title>std::locale::~locale (111,369,680 samples, 0.14%)</title><rect x="900.0" y="629" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="903.00" y="639.5" ></text>
</g>
<g >
<title>__i915_gem_object_get_pages (9,153,767 samples, 0.01%)</title><rect x="13.9" y="229" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="16.91" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,383,665,875 samples, 4.24%)</title><rect x="1024.5" y="725" width="50.0" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1027.53" y="735.5" >std::..</text>
</g>
<g >
<title>PPU::isBGEnabled (43,383,078 samples, 0.05%)</title><rect x="1012.4" y="693" width="0.6" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1015.38" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (20,758,549 samples, 0.03%)</title><rect x="346.0" y="677" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="349.03" y="687.5" ></text>
</g>
<g >
<title>std::operator|= (22,868,781 samples, 0.03%)</title><rect x="967.4" y="629" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="970.35" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,059,819 samples, 0.02%)</title><rect x="10.0" y="773" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.03" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned char&gt; (3,938,925,555 samples, 4.93%)</title><rect x="111.3" y="693" width="58.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="114.29" y="703.5" >std::_..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (212,742,314 samples, 0.27%)</title><rect x="42.3" y="629" width="3.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="45.34" y="639.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (12,059,409 samples, 0.02%)</title><rect x="1010.0" y="629" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1012.96" y="639.5" ></text>
</g>
<g >
<title>____i915_gem_object_get_pages (9,153,767 samples, 0.01%)</title><rect x="13.9" y="213" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="16.91" y="223.5" ></text>
</g>
<g >
<title>timekeeping_advance (9,175,991 samples, 0.01%)</title><rect x="970.2" y="517" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="973.17" y="527.5" ></text>
</g>
<g >
<title>psi_group_change (11,287,461 samples, 0.01%)</title><rect x="687.4" y="549" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="690.39" y="559.5" ></text>
</g>
<g >
<title>i915_gem_do_execbuffer (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="389" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1018.41" y="399.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (85,892,099 samples, 0.11%)</title><rect x="1014.8" y="581" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1017.84" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (10,623,376 samples, 0.01%)</title><rect x="230.7" y="693" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="233.67" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (243,554,346 samples, 0.31%)</title><rect x="113.2" y="677" width="3.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="116.23" y="687.5" ></text>
</g>
<g >
<title>std::operator~ (19,724,966 samples, 0.02%)</title><rect x="202.9" y="645" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="205.90" y="655.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="709" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="719.5" ></text>
</g>
<g >
<title>PPU::drawBackground (616,954,297 samples, 0.77%)</title><rect x="1003.3" y="693" width="9.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1006.26" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (24,138,503 samples, 0.03%)</title><rect x="231.7" y="693" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="234.75" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,068,277 samples, 0.02%)</title><rect x="613.6" y="565" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="616.61" y="575.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="581" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="591.5" ></text>
</g>
<g >
<title>free@plt (27,273,189 samples, 0.03%)</title><rect x="355.5" y="709" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="358.49" y="719.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (84,259,408 samples, 0.11%)</title><rect x="247.2" y="645" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="250.17" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12,499,515 samples, 0.02%)</title><rect x="1003.1" y="629" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1006.08" y="639.5" ></text>
</g>
<g >
<title>pthread_once@plt (39,319,248 samples, 0.05%)</title><rect x="905.3" y="629" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="908.32" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,066,274 samples, 0.02%)</title><rect x="10.6" y="741" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.57" y="751.5" ></text>
</g>
<g >
<title>std::hex (204,192,031 samples, 0.26%)</title><rect x="281.3" y="661" width="3.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="284.33" y="671.5" ></text>
</g>
<g >
<title>Memory::fetch8 (63,413,196 samples, 0.08%)</title><rect x="1000.8" y="693" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1003.79" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,048,757 samples, 0.01%)</title><rect x="385.0" y="661" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="388.03" y="671.5" ></text>
</g>
<g >
<title>_dl_open (85,769,467 samples, 0.11%)</title><rect x="15.8" y="581" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="18.85" y="591.5" ></text>
</g>
<g >
<title>std::locale::locale (364,599,785 samples, 0.46%)</title><rect x="883.7" y="613" width="5.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="886.71" y="623.5" ></text>
</g>
<g >
<title>do_shared_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="309" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="16.43" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (160,415,593 samples, 0.20%)</title><rect x="447.9" y="661" width="2.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="450.93" y="671.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (12,131,475 samples, 0.02%)</title><rect x="1181.3" y="741" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1184.31" y="751.5" ></text>
</g>
<g >
<title>std::operator&amp;= (23,791,246 samples, 0.03%)</title><rect x="110.2" y="629" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="113.24" y="639.5" ></text>
</g>
<g >
<title>std::locale::operator= (13,077,032 samples, 0.02%)</title><rect x="90.0" y="613" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="92.99" y="623.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (13,078,579 samples, 0.02%)</title><rect x="1015.0" y="517" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1018.02" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (45,334,427 samples, 0.06%)</title><rect x="72.3" y="645" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="75.27" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (316,280,652 samples, 0.40%)</title><rect x="472.2" y="677" width="4.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="475.16" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,322,734 samples, 0.05%)</title><rect x="17.6" y="453" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="463.5" ></text>
</g>
<g >
<title>unsigned int std::__detail::__to_chars_len&lt;unsigned int&gt; (1,004,467,082 samples, 1.26%)</title><rect x="1118.5" y="709" width="14.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1121.45" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (10,026,467 samples, 0.01%)</title><rect x="70.5" y="645" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="73.48" y="655.5" ></text>
</g>
<g >
<title>dl_open_worker (28,265,752 samples, 0.04%)</title><rect x="15.4" y="485" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="18.43" y="495.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="613" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (23,127,272 samples, 0.03%)</title><rect x="1002.7" y="661" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1005.73" y="671.5" ></text>
</g>
<g >
<title>kfree (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="229" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1019.77" y="239.5" ></text>
</g>
<g >
<title>strlen@plt (12,060,452 samples, 0.02%)</title><rect x="102.7" y="661" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="105.72" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (93,394,698 samples, 0.12%)</title><rect x="654.0" y="677" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="656.99" y="687.5" ></text>
</g>
<g >
<title>operator new (14,084,465 samples, 0.02%)</title><rect x="713.5" y="661" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="716.51" y="671.5" ></text>
</g>
<g >
<title>std::operator| (13,077,025 samples, 0.02%)</title><rect x="391.7" y="629" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="394.72" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (39,351,323 samples, 0.05%)</title><rect x="590.0" y="661" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="593.04" y="671.5" ></text>
</g>
<g >
<title>std::setw (58,811,615 samples, 0.07%)</title><rect x="704.3" y="677" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="707.32" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (517,727,708 samples, 0.65%)</title><rect x="532.4" y="629" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="535.44" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (23,082,645 samples, 0.03%)</title><rect x="140.1" y="645" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="143.07" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (31,574,009 samples, 0.04%)</title><rect x="252.8" y="661" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="255.84" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,830,286 samples, 0.01%)</title><rect x="51.4" y="597" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="54.44" y="607.5" ></text>
</g>
<g >
<title>std::locale::~locale (14,066,274 samples, 0.02%)</title><rect x="10.6" y="757" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.57" y="767.5" ></text>
</g>
<g >
<title>shmem_sg_alloc_table (9,153,767 samples, 0.01%)</title><rect x="13.9" y="181" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="16.91" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (156,193,038 samples, 0.20%)</title><rect x="802.7" y="629" width="2.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="805.73" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (74,318,322 samples, 0.09%)</title><rect x="547.1" y="645" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="550.08" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (11,064,424 samples, 0.01%)</title><rect x="71.7" y="629" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="74.74" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (215,709,780 samples, 0.27%)</title><rect x="87.0" y="629" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="90.00" y="639.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (93,014,343 samples, 0.12%)</title><rect x="14.1" y="645" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.05" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (233,818,435 samples, 0.29%)</title><rect x="63.2" y="613" width="3.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="66.16" y="623.5" ></text>
</g>
<g >
<title>std::locale::locale (60,841,492 samples, 0.08%)</title><rect x="375.9" y="677" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="378.89" y="687.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (10,050,570 samples, 0.01%)</title><rect x="91.4" y="645" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="94.42" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (152,265,671 samples, 0.19%)</title><rect x="918.9" y="661" width="2.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="921.90" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp;= (78,452,080 samples, 0.10%)</title><rect x="691.6" y="629" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="694.56" y="639.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (8,996,461 samples, 0.01%)</title><rect x="168.9" y="677" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="171.87" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="517" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="527.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (32,109,712 samples, 0.04%)</title><rect x="375.4" y="677" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="378.42" y="687.5" ></text>
</g>
<g >
<title>std::operator|= (46,193,012 samples, 0.06%)</title><rect x="322.2" y="629" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="325.20" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (17,941,835 samples, 0.02%)</title><rect x="15.2" y="549" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.16" y="559.5" ></text>
</g>
<g >
<title>perf_event_init_context (38,313,800 samples, 0.05%)</title><rect x="17.6" y="261" width="0.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="20.64" y="271.5" ></text>
</g>
<g >
<title>kernel_clone (38,313,800 samples, 0.05%)</title><rect x="17.6" y="309" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="20.64" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (11,057,433 samples, 0.01%)</title><rect x="67.6" y="613" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="70.57" y="623.5" ></text>
</g>
<g >
<title>dlopen@GLIBC_2.2.5 (85,769,467 samples, 0.11%)</title><rect x="15.8" y="661" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="18.85" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (9,046,037 samples, 0.01%)</title><rect x="109.1" y="661" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="112.14" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (34,114,138 samples, 0.04%)</title><rect x="387.0" y="645" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="389.98" y="655.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (34,203,882 samples, 0.04%)</title><rect x="1000.3" y="709" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1003.28" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (13,532,450 samples, 0.02%)</title><rect x="346.3" y="677" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="349.33" y="687.5" ></text>
</g>
<g >
<title>pthread_once@plt (13,074,752 samples, 0.02%)</title><rect x="134.7" y="613" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="137.72" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (1,578,192,372 samples, 1.98%)</title><rect x="117.5" y="677" width="23.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="120.45" y="687.5" >s..</text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (12,062,097 samples, 0.02%)</title><rect x="84.5" y="629" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="87.52" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (38,225,094 samples, 0.05%)</title><rect x="104.7" y="645" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="107.65" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (38,222,248 samples, 0.05%)</title><rect x="173.0" y="677" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="176.00" y="687.5" ></text>
</g>
<g >
<title>operator delete (11,060,708 samples, 0.01%)</title><rect x="355.9" y="709" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="358.90" y="719.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,998,180 samples, 0.01%)</title><rect x="17.5" y="581" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="20.50" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (49,256,408 samples, 0.06%)</title><rect x="250.2" y="645" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="253.15" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (220,882,058 samples, 0.28%)</title><rect x="243.2" y="645" width="3.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="246.17" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (20,979,344 samples, 0.03%)</title><rect x="464.6" y="677" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="467.64" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (10,053,864 samples, 0.01%)</title><rect x="246.1" y="581" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="249.12" y="591.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (401,373,717 samples, 0.50%)</title><rect x="193.9" y="677" width="5.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="196.90" y="687.5" ></text>
</g>
<g >
<title>std::ios_base::setf (138,532,709 samples, 0.17%)</title><rect x="320.8" y="645" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="323.84" y="655.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,068,277 samples, 0.02%)</title><rect x="613.6" y="629" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="616.61" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (9,211,064,076 samples, 11.54%)</title><rect x="834.6" y="677" width="136.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="837.56" y="687.5" >std::__cxx11::bas..</text>
</g>
<g >
<title>std::setw (68,551,897 samples, 0.09%)</title><rect x="969.3" y="661" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="972.29" y="671.5" ></text>
</g>
<g >
<title>std::operator~ (58,300,587 samples, 0.07%)</title><rect x="697.3" y="645" width="0.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="700.28" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22,132,066 samples, 0.03%)</title><rect x="907.0" y="645" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="910.04" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (9,020,511 samples, 0.01%)</title><rect x="1012.9" y="613" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1015.89" y="623.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (10,044,536 samples, 0.01%)</title><rect x="59.0" y="677" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="61.96" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61,691,031 samples, 0.08%)</title><rect x="397.9" y="677" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="400.93" y="687.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (11,482,912 samples, 0.01%)</title><rect x="94.9" y="645" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="97.85" y="655.5" ></text>
</g>
<g >
<title>std::_Setfill&lt;char&gt; std::setfill&lt;char&gt; (22,342,993 samples, 0.03%)</title><rect x="100.3" y="693" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="103.28" y="703.5" ></text>
</g>
<g >
<title>std::operator&amp;= (12,063,189 samples, 0.02%)</title><rect x="322.9" y="645" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="325.88" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="437" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1019.77" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (12,069,300 samples, 0.02%)</title><rect x="1001.1" y="645" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1004.15" y="655.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (195,150,150 samples, 0.24%)</title><rect x="1090.2" y="709" width="2.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1093.16" y="719.5" ></text>
</g>
<g >
<title>node_retire (11,744,896 samples, 0.01%)</title><rect x="258.0" y="549" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="260.99" y="559.5" ></text>
</g>
<g >
<title>__strlen_avx2 (53,200,747 samples, 0.07%)</title><rect x="171.1" y="661" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="174.07" y="671.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (25,129,984 samples, 0.03%)</title><rect x="89.6" y="613" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="92.62" y="623.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (761,519,207 samples, 0.95%)</title><rect x="150.2" y="677" width="11.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="153.19" y="687.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="613" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.12" y="623.5" ></text>
</g>
<g >
<title>signal_irq_work (11,744,896 samples, 0.01%)</title><rect x="258.0" y="565" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="260.99" y="575.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (12,499,515 samples, 0.02%)</title><rect x="1003.1" y="661" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1006.08" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (90,288,473 samples, 0.11%)</title><rect x="990.2" y="677" width="1.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="993.23" y="687.5" ></text>
</g>
<g >
<title>Logger::log (3,979,562,916 samples, 4.98%)</title><rect x="426.1" y="693" width="58.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="429.12" y="703.5" >Logger..</text>
</g>
<g >
<title>std::ios_base::~ios_base (212,259,298 samples, 0.27%)</title><rect x="921.1" y="661" width="3.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="924.15" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::setf (32,129,969 samples, 0.04%)</title><rect x="698.1" y="661" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="701.14" y="671.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="645" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1090.76" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (91,995,135 samples, 0.12%)</title><rect x="142.5" y="677" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="145.48" y="687.5" ></text>
</g>
<g >
<title>sysvec_irq_work (11,744,896 samples, 0.01%)</title><rect x="258.0" y="645" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="260.99" y="655.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (23,130,459 samples, 0.03%)</title><rect x="252.1" y="661" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="255.11" y="671.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (43,021,605 samples, 0.05%)</title><rect x="271.2" y="677" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="274.18" y="687.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (27,358,536 samples, 0.03%)</title><rect x="273.2" y="677" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="276.25" y="687.5" ></text>
</g>
<g >
<title>__mod_timer (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="565" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1020.44" y="575.5" ></text>
</g>
<g >
<title>_IO_getline_info (7,555,648 samples, 0.01%)</title><rect x="13.3" y="533" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="16.31" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,078,498 samples, 0.02%)</title><rect x="101.5" y="661" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="104.47" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (41,916,497 samples, 0.05%)</title><rect x="645.0" y="645" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="648.00" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (40,773,694 samples, 0.05%)</title><rect x="354.0" y="677" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="357.01" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (32,024,636 samples, 0.04%)</title><rect x="801.4" y="581" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="804.43" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_handler (9,175,991 samples, 0.01%)</title><rect x="970.2" y="565" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="973.17" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (37,349,193 samples, 0.05%)</title><rect x="259.2" y="677" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="262.24" y="687.5" ></text>
</g>
<g >
<title>std::uppercase (24,998,494 samples, 0.03%)</title><rect x="705.2" y="677" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="708.19" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="533" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (13,077,426 samples, 0.02%)</title><rect x="336.2" y="693" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="339.22" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (40,953,951 samples, 0.05%)</title><rect x="529.0" y="661" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="531.97" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (20,109,619 samples, 0.03%)</title><rect x="1016.6" y="645" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.61" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10,430,289 samples, 0.01%)</title><rect x="243.0" y="645" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="246.01" y="655.5" ></text>
</g>
<g >
<title>pthread_once@plt (12,966,122 samples, 0.02%)</title><rect x="646.2" y="645" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="649.17" y="655.5" ></text>
</g>
<g >
<title>task_tick_fair (11,054,569 samples, 0.01%)</title><rect x="1133.1" y="565" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1136.14" y="575.5" ></text>
</g>
<g >
<title>PPU::areSpritesEnabled (12,499,515 samples, 0.02%)</title><rect x="1003.1" y="693" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1006.08" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::setf (533,251,971 samples, 0.67%)</title><rect x="688.4" y="645" width="7.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="691.44" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1,378,939,808 samples, 1.73%)</title><rect x="1040.8" y="709" width="20.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1043.84" y="719.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (39,249,473 samples, 0.05%)</title><rect x="14.6" y="501" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="17.57" y="511.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (92,426,972 samples, 0.12%)</title><rect x="109.9" y="677" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.93" y="687.5" ></text>
</g>
<g >
<title>std::locale::locale (8,991,961 samples, 0.01%)</title><rect x="107.3" y="661" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="110.30" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (50,283,504 samples, 0.06%)</title><rect x="191.5" y="677" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="194.52" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (12,065,328 samples, 0.02%)</title><rect x="81.4" y="629" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="84.44" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (42,194,296 samples, 0.05%)</title><rect x="353.4" y="677" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="356.39" y="687.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (22,611,804 samples, 0.03%)</title><rect x="268.8" y="645" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="271.77" y="655.5" ></text>
</g>
<g >
<title>strlen@plt (24,221,753 samples, 0.03%)</title><rect x="591.0" y="661" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="593.95" y="671.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (9,094,954 samples, 0.01%)</title><rect x="15.2" y="469" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.16" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (35,931,695 samples, 0.05%)</title><rect x="240.7" y="581" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="243.72" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (62,582,486 samples, 0.08%)</title><rect x="158.7" y="629" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="161.71" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (13,424,134 samples, 0.02%)</title><rect x="403.2" y="709" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="406.24" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1,289,939,400 samples, 1.62%)</title><rect x="613.8" y="645" width="19.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="616.79" y="655.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (26,192,687 samples, 0.03%)</title><rect x="45.9" y="629" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="48.86" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,572,782 samples, 0.01%)</title><rect x="653.5" y="645" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="656.49" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (1,009,708,042 samples, 1.26%)</title><rect x="361.9" y="693" width="14.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="364.87" y="703.5" ></text>
</g>
<g >
<title>std::locale::operator= (84,477,446 samples, 0.11%)</title><rect x="134.9" y="629" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="137.91" y="639.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (24,129,247 samples, 0.03%)</title><rect x="968.9" y="661" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="971.93" y="671.5" ></text>
</g>
<g >
<title>std::operator|= (47,579,594 samples, 0.06%)</title><rect x="165.5" y="629" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="168.54" y="639.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,057,421 samples, 0.01%)</title><rect x="576.3" y="645" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="579.31" y="655.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (58,954,603 samples, 0.07%)</title><rect x="904.5" y="629" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="907.45" y="639.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (11,062,890 samples, 0.01%)</title><rect x="205.1" y="677" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="208.11" y="687.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi (32,474,425 samples, 0.04%)</title><rect x="13.4" y="197" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="16.43" y="207.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,322,734 samples, 0.05%)</title><rect x="17.6" y="501" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (22,774,189 samples, 0.03%)</title><rect x="350.0" y="677" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="353.03" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (5,563,948,347 samples, 6.97%)</title><rect x="1094.8" y="725" width="82.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1097.82" y="735.5" >std::__cx..</text>
</g>
<g >
<title>malloc (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="613" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.15" y="623.5" ></text>
</g>
<g >
<title>std::locale::~locale (32,171,767 samples, 0.04%)</title><rect x="374.9" y="661" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="377.94" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (115,343,950 samples, 0.14%)</title><rect x="140.8" y="677" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="143.78" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (45,570,342 samples, 0.06%)</title><rect x="780.7" y="581" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="783.74" y="591.5" ></text>
</g>
<g >
<title>CPU::getZero (11,594,401 samples, 0.01%)</title><rect x="39.1" y="693" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="42.07" y="703.5" ></text>
</g>
<g >
<title>std::locale::operator= (10,984,647 samples, 0.01%)</title><rect x="1010.6" y="565" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1013.62" y="575.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,057,515 samples, 0.01%)</title><rect x="731.2" y="677" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="734.22" y="687.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0 (38,313,800 samples, 0.05%)</title><rect x="17.6" y="245" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="20.64" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (52,407,183 samples, 0.07%)</title><rect x="80.0" y="597" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.99" y="607.5" ></text>
</g>
<g >
<title>operator new (41,835,424 samples, 0.05%)</title><rect x="1092.4" y="693" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1095.43" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,076,852 samples, 0.02%)</title><rect x="586.7" y="645" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="589.71" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="565" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,920,552 samples, 0.01%)</title><rect x="216.1" y="613" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="219.13" y="623.5" ></text>
</g>
<g >
<title>Logger::log (4,109,678,786 samples, 5.15%)</title><rect x="505.3" y="677" width="60.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="508.28" y="687.5" >Logger..</text>
</g>
<g >
<title>unix_stream_read_generic (39,249,473 samples, 0.05%)</title><rect x="14.6" y="357" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="17.57" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (36,210,855 samples, 0.05%)</title><rect x="994.6" y="677" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="997.64" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (50,264,946 samples, 0.06%)</title><rect x="71.2" y="645" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="74.16" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::setf (10,054,243 samples, 0.01%)</title><rect x="94.4" y="629" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.38" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (66,714,624 samples, 0.08%)</title><rect x="568.6" y="677" width="1.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="571.63" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26,136,624 samples, 0.03%)</title><rect x="317.4" y="645" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="320.36" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (70,424,824 samples, 0.09%)</title><rect x="535.2" y="613" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="538.22" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_handler (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="437" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1017.70" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (12,017,978 samples, 0.02%)</title><rect x="383.8" y="677" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="386.82" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,680,993 samples, 0.01%)</title><rect x="93.1" y="597" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="96.10" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (48,735,667 samples, 0.06%)</title><rect x="1064.5" y="693" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1067.55" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (34,184,108 samples, 0.04%)</title><rect x="121.5" y="661" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="124.54" y="671.5" ></text>
</g>
<g >
<title>do_user_addr_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="645" width="1.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="14.07" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (159,186,025 samples, 0.20%)</title><rect x="647.3" y="661" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="650.28" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (104,277,521 samples, 0.13%)</title><rect x="380.3" y="693" width="1.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="383.34" y="703.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (85,892,099 samples, 0.11%)</title><rect x="1014.8" y="613" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1017.84" y="623.5" ></text>
</g>
<g >
<title>operator new (18,972,333 samples, 0.02%)</title><rect x="1065.3" y="693" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1068.27" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10,690,482 samples, 0.01%)</title><rect x="525.7" y="437" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="528.67" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,053,049 samples, 0.01%)</title><rect x="568.5" y="677" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="571.48" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (229,053,661 samples, 0.29%)</title><rect x="287.3" y="677" width="3.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="290.29" y="687.5" ></text>
</g>
<g >
<title>malloc@plt (13,899,007 samples, 0.02%)</title><rect x="216.3" y="645" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="219.31" y="655.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="517" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1020.44" y="527.5" ></text>
</g>
<g >
<title>__strlen_avx2 (39,223,964 samples, 0.05%)</title><rect x="327.4" y="677" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="330.40" y="687.5" ></text>
</g>
<g >
<title>std::_Setfill&lt;char&gt; std::setfill&lt;char&gt; (9,036,393 samples, 0.01%)</title><rect x="83.4" y="645" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="86.45" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::setf (67,752,744 samples, 0.08%)</title><rect x="284.7" y="645" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="287.67" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (3,777,864,651 samples, 4.73%)</title><rect x="850.1" y="661" width="55.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="853.07" y="671.5" >std::..</text>
</g>
<g >
<title>std::ios_base::~ios_base (14,070,097 samples, 0.02%)</title><rect x="98.2" y="661" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="101.19" y="671.5" ></text>
</g>
<g >
<title>Log::log (41,201,283 samples, 0.05%)</title><rect x="754.3" y="693" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="757.28" y="703.5" ></text>
</g>
<g >
<title>Memory::fetch8 (1,552,880,760 samples, 1.95%)</title><rect x="75.8" y="693" width="23.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="78.82" y="703.5" >M..</text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (8,988,995 samples, 0.01%)</title><rect x="339.6" y="693" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="342.61" y="703.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,077,830 samples, 0.02%)</title><rect x="137.5" y="597" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="140.49" y="607.5" ></text>
</g>
<g >
<title>__libc_start_call_main (79,633,786,465 samples, 99.74%)</title><rect x="13.0" y="789" width="1177.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="16.03" y="799.5" >__libc_start_call_main</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,572,782 samples, 0.01%)</title><rect x="653.5" y="629" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="656.49" y="639.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="629" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.64" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (23,247,943 samples, 0.03%)</title><rect x="309.2" y="677" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="312.23" y="687.5" ></text>
</g>
<g >
<title>Memory::fetch8 (221,236,833 samples, 0.28%)</title><rect x="1007.9" y="661" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1010.88" y="671.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (478,691,705 samples, 0.60%)</title><rect x="941.5" y="629" width="7.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="944.50" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event (11,060,742 samples, 0.01%)</title><rect x="673.5" y="581" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="676.49" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (110,467,460 samples, 0.14%)</title><rect x="998.6" y="693" width="1.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1001.65" y="703.5" ></text>
</g>
<g >
<title>std::operator| (53,895,778 samples, 0.07%)</title><rect x="695.4" y="613" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="698.36" y="623.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="661" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.64" y="671.5" ></text>
</g>
<g >
<title>__strlen_avx2 (60,632,713 samples, 0.08%)</title><rect x="358.0" y="677" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="361.02" y="687.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (10,042,071 samples, 0.01%)</title><rect x="994.5" y="613" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="997.49" y="623.5" ></text>
</g>
<g >
<title>dl_main (132,273,896 samples, 0.17%)</title><rect x="11.1" y="773" width="1.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.07" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (91,167,592 samples, 0.11%)</title><rect x="446.2" y="645" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="449.18" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (9,089,866 samples, 0.01%)</title><rect x="806.0" y="645" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="808.96" y="655.5" ></text>
</g>
<g >
<title>asm_common_interrupt (11,060,742 samples, 0.01%)</title><rect x="673.5" y="645" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="676.49" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (25,062,032 samples, 0.03%)</title><rect x="409.7" y="645" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="412.69" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="485" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="495.5" ></text>
</g>
<g >
<title>std::hex (167,962,559 samples, 0.21%)</title><rect x="200.7" y="661" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="203.71" y="671.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (43,383,078 samples, 0.05%)</title><rect x="1012.4" y="661" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1015.38" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (10,040,279 samples, 0.01%)</title><rect x="1002.0" y="613" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1005.02" y="623.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,042,071 samples, 0.01%)</title><rect x="994.5" y="645" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="997.49" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::setf (300,407,100 samples, 0.38%)</title><rect x="962.9" y="629" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="965.91" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (38,916,491 samples, 0.05%)</title><rect x="220.3" y="661" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="223.29" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (27,252,682 samples, 0.03%)</title><rect x="789.2" y="645" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="792.20" y="655.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (22,553,072 samples, 0.03%)</title><rect x="261.5" y="661" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="264.53" y="671.5" ></text>
</g>
<g >
<title>timekeeping_adjust.constprop.0 (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="565" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1090.76" y="575.5" ></text>
</g>
<g >
<title>std::operator&amp; (12,771,645 samples, 0.02%)</title><rect x="283.0" y="613" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="286.02" y="623.5" ></text>
</g>
<g >
<title>operator new (306,034,737 samples, 0.38%)</title><rect x="982.3" y="629" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="985.26" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (294,488,812 samples, 0.37%)</title><rect x="821.7" y="629" width="4.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="824.70" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="565" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (13,746,559 samples, 0.02%)</title><rect x="725.9" y="693" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="728.90" y="703.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (277,201,842 samples, 0.35%)</title><rect x="544.1" y="661" width="4.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="547.08" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (22,818,638 samples, 0.03%)</title><rect x="241.8" y="581" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="244.79" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (78,985,804 samples, 0.10%)</title><rect x="412.7" y="677" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="415.68" y="687.5" ></text>
</g>
<g >
<title>_XlcResolveLocaleName (7,555,648 samples, 0.01%)</title><rect x="13.3" y="581" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="16.31" y="591.5" ></text>
</g>
<g >
<title>__strlen_avx2 (59,912,132 samples, 0.08%)</title><rect x="396.0" y="693" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="398.98" y="703.5" ></text>
</g>
<g >
<title>_int_free (23,918,406 samples, 0.03%)</title><rect x="829.9" y="677" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="832.95" y="687.5" ></text>
</g>
<g >
<title>i915_vma_pin_ww (9,153,767 samples, 0.01%)</title><rect x="13.9" y="261" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="16.91" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (34,583,992 samples, 0.04%)</title><rect x="1010.3" y="613" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1013.27" y="623.5" ></text>
</g>
<g >
<title>CPU::fetch (7,067,679,517 samples, 8.85%)</title><rect x="235.3" y="709" width="104.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="238.28" y="719.5" >CPU::fetch</text>
</g>
<g >
<title>asm_exc_page_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="677" width="1.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.07" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (21,658,561 samples, 0.03%)</title><rect x="1093.7" y="725" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1096.69" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (700,179,666 samples, 0.88%)</title><rect x="515.5" y="629" width="10.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="518.48" y="639.5" ></text>
</g>
<g >
<title>std::hex (159,643,846 samples, 0.20%)</title><rect x="320.8" y="661" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="323.84" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10,161,293 samples, 0.01%)</title><rect x="1076.1" y="725" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1079.09" y="735.5" ></text>
</g>
<g >
<title>std::operator&amp; (13,099,425 samples, 0.02%)</title><rect x="391.5" y="629" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="394.52" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (21,259,075 samples, 0.03%)</title><rect x="239.6" y="597" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="242.56" y="607.5" ></text>
</g>
<g >
<title>void std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (46,085,687 samples, 0.06%)</title><rect x="1176.4" y="693" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1179.37" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (219,959,652 samples, 0.28%)</title><rect x="562.8" y="645" width="3.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="565.77" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,153,767 samples, 0.01%)</title><rect x="13.9" y="453" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.91" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_handler (11,057,515 samples, 0.01%)</title><rect x="731.2" y="629" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="734.22" y="639.5" ></text>
</g>
<g >
<title>__sys_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="373" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1019.77" y="383.5" ></text>
</g>
<g >
<title>__schedule (8,996,448 samples, 0.01%)</title><rect x="605.7" y="565" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="608.69" y="575.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="501" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="511.5" ></text>
</g>
<g >
<title>native_read_msr (11,572,782 samples, 0.01%)</title><rect x="653.5" y="533" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="656.49" y="543.5" ></text>
</g>
<g >
<title>call_init.part.0 (9,236,470 samples, 0.01%)</title><rect x="10.9" y="789" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="13.94" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (207,677,986 samples, 0.26%)</title><rect x="329.5" y="661" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="332.53" y="671.5" ></text>
</g>
<g >
<title>shmem_alloc_and_add_folio (9,153,767 samples, 0.01%)</title><rect x="13.9" y="133" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="16.91" y="143.5" ></text>
</g>
<g >
<title>Log::log (4,857,860,869 samples, 6.08%)</title><rect x="757.9" y="677" width="71.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="760.95" y="687.5" >Log::log</text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,070,003 samples, 0.01%)</title><rect x="14.3" y="501" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="17.31" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (14,085,853 samples, 0.02%)</title><rect x="1001.5" y="645" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1004.52" y="655.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (92,115,469 samples, 0.12%)</title><rect x="136.3" y="645" width="1.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="139.32" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (42,167,522 samples, 0.05%)</title><rect x="258.2" y="661" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="261.16" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (35,123,281 samples, 0.04%)</title><rect x="467.3" y="661" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="470.29" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (271,140,184 samples, 0.34%)</title><rect x="909.1" y="661" width="4.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="912.13" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="517" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (12,069,646 samples, 0.02%)</title><rect x="65.5" y="581" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="68.49" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (24,084,160 samples, 0.03%)</title><rect x="364.1" y="677" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="367.14" y="687.5" ></text>
</g>
<g >
<title>_dl_catch_error (85,769,467 samples, 0.11%)</title><rect x="15.8" y="629" width="1.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="18.85" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (21,641,354 samples, 0.03%)</title><rect x="103.1" y="677" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="106.07" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (75,366,012 samples, 0.09%)</title><rect x="857.1" y="645" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="860.12" y="655.5" ></text>
</g>
<g >
<title>std::operator|= (11,570,540 samples, 0.01%)</title><rect x="202.7" y="645" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="205.73" y="655.5" ></text>
</g>
<g >
<title>std::uppercase (111,395,062 samples, 0.14%)</title><rect x="167.1" y="661" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="170.07" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (10,077,046 samples, 0.01%)</title><rect x="81.9" y="613" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="84.95" y="623.5" ></text>
</g>
<g >
<title>update_process_times (11,057,421 samples, 0.01%)</title><rect x="576.3" y="581" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="579.31" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (50,961,030 samples, 0.06%)</title><rect x="313.9" y="661" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="316.89" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (253,902,502 samples, 0.32%)</title><rect x="396.9" y="693" width="3.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="399.87" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (13,966,902 samples, 0.02%)</title><rect x="411.5" y="661" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="414.48" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (36,621,196 samples, 0.05%)</title><rect x="269.3" y="661" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="272.30" y="671.5" ></text>
</g>
<g >
<title>irqentry_exit (9,577,859 samples, 0.01%)</title><rect x="103.3" y="629" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="106.25" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="581" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="591.5" ></text>
</g>
<g >
<title>drm_ioctl (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="437" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1018.41" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="389" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1019.77" y="399.5" ></text>
</g>
<g >
<title>inherit_event.isra.0 (38,313,800 samples, 0.05%)</title><rect x="17.6" y="229" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="20.64" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (25,070,122 samples, 0.03%)</title><rect x="45.5" y="629" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="48.49" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (12,064,465 samples, 0.02%)</title><rect x="66.4" y="581" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="69.44" y="591.5" ></text>
</g>
<g >
<title>__strlen_avx2 (146,221,255 samples, 0.18%)</title><rect x="706.8" y="677" width="2.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="709.79" y="687.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (32,474,425 samples, 0.04%)</title><rect x="13.4" y="293" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="16.43" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="725" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1020.44" y="735.5" ></text>
</g>
<g >
<title>std::locale::locale (240,596,881 samples, 0.30%)</title><rect x="131.4" y="629" width="3.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="134.35" y="639.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (101,503,458 samples, 0.13%)</title><rect x="995.3" y="677" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="998.32" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (17,941,835 samples, 0.02%)</title><rect x="15.2" y="581" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.16" y="591.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2,616,827,893 samples, 3.28%)</title><rect x="603.0" y="661" width="38.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="605.98" y="671.5" >std..</text>
</g>
<g >
<title>operator new (12,070,692 samples, 0.02%)</title><rect x="97.1" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="100.11" y="623.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20,001,961 samples, 0.03%)</title><rect x="401.0" y="693" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="403.97" y="703.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (236,334,268 samples, 0.30%)</title><rect x="914.4" y="661" width="3.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="917.43" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::setf (87,419,179 samples, 0.11%)</title><rect x="392.9" y="661" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="395.87" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (56,237,445 samples, 0.07%)</title><rect x="50.6" y="597" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="53.61" y="607.5" ></text>
</g>
<g >
<title>SDLRenderer::handleEvents (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="741" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1184.15" y="751.5" ></text>
</g>
<g >
<title>alloc_pages_mpol_noprof (9,153,767 samples, 0.01%)</title><rect x="13.9" y="85" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="16.91" y="95.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (102,189,584 samples, 0.13%)</title><rect x="618.5" y="629" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="621.51" y="639.5" ></text>
</g>
<g >
<title>__libc_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="453" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1019.77" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (26,154,659 samples, 0.03%)</title><rect x="440.2" y="629" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="443.23" y="639.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::__resize_and_overwrite&lt;std::__cxx11::to_string (10,050,323 samples, 0.01%)</title><rect x="1011.4" y="645" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1014.36" y="655.5" ></text>
</g>
<g >
<title>Memory::fetch8 (91,424,620 samples, 0.11%)</title><rect x="1001.7" y="693" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1004.73" y="703.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="437" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="447.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (41,003,384 samples, 0.05%)</title><rect x="703.5" y="677" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="706.54" y="687.5" ></text>
</g>
<g >
<title>std::locale::operator= (8,849,651 samples, 0.01%)</title><rect x="304.5" y="645" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="307.50" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (46,271,250 samples, 0.06%)</title><rect x="293.3" y="661" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="296.32" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (85,892,099 samples, 0.11%)</title><rect x="1014.8" y="549" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1017.84" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,077,830 samples, 0.02%)</title><rect x="137.5" y="613" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="140.49" y="623.5" ></text>
</g>
<g >
<title>operator new (284,970,495 samples, 0.36%)</title><rect x="716.2" y="645" width="4.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="719.22" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,322,734 samples, 0.05%)</title><rect x="17.6" y="517" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12,065,996 samples, 0.02%)</title><rect x="1013.2" y="645" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1016.18" y="655.5" ></text>
</g>
<g >
<title>std::operator&amp;= (19,379,494 samples, 0.02%)</title><rect x="164.9" y="629" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="167.92" y="639.5" ></text>
</g>
<g >
<title>malloc (14,085,853 samples, 0.02%)</title><rect x="1001.5" y="597" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1004.52" y="607.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,070,003 samples, 0.01%)</title><rect x="14.3" y="453" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="17.31" y="463.5" ></text>
</g>
<g >
<title>CPU::LD (13,075,364 samples, 0.02%)</title><rect x="34.1" y="709" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="37.12" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,071,151 samples, 0.02%)</title><rect x="183.2" y="597" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="186.18" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (45,969,091 samples, 0.06%)</title><rect x="116.0" y="661" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="118.99" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="581" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="591.5" ></text>
</g>
<g >
<title>_XlcUtf8Loader (7,555,648 samples, 0.01%)</title><rect x="13.3" y="645" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="16.31" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (46,252,913 samples, 0.06%)</title><rect x="290.7" y="677" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="293.68" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (141,966,103 samples, 0.18%)</title><rect x="56.3" y="661" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="59.30" y="671.5" ></text>
</g>
<g >
<title>std::operator| (12,550,482 samples, 0.02%)</title><rect x="394.0" y="629" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="396.97" y="639.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (39,757,757 samples, 0.05%)</title><rect x="14.6" y="549" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="17.57" y="559.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9,577,859 samples, 0.01%)</title><rect x="103.3" y="613" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="106.25" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (26,153,064 samples, 0.03%)</title><rect x="47.0" y="629" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="49.95" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (14,084,646 samples, 0.02%)</title><rect x="192.6" y="661" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="195.62" y="671.5" ></text>
</g>
<g >
<title>x64_sys_call (38,313,800 samples, 0.05%)</title><rect x="17.6" y="357" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="20.64" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (22,126,097 samples, 0.03%)</title><rect x="291.4" y="677" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="294.36" y="687.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,077,830 samples, 0.02%)</title><rect x="137.5" y="629" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="140.49" y="639.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (15,770,904,059 samples, 19.75%)</title><rect x="498.1" y="709" width="233.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="501.13" y="719.5" >Memory::fetchIOs</text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (25,630,676 samples, 0.03%)</title><rect x="339.2" y="693" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="342.23" y="703.5" ></text>
</g>
<g >
<title>_int_free (36,713,826 samples, 0.05%)</title><rect x="570.5" y="693" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="573.50" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (22,923,790 samples, 0.03%)</title><rect x="82.1" y="629" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="85.09" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (124,861,325 samples, 0.16%)</title><rect x="146.9" y="677" width="1.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="149.89" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned char&gt; (2,062,458,592 samples, 2.58%)</title><rect x="255.9" y="693" width="30.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="258.89" y="703.5" >st..</text>
</g>
<g >
<title>strlen@plt (11,026,345 samples, 0.01%)</title><rect x="116.7" y="661" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="119.67" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp;= (32,902,627 samples, 0.04%)</title><rect x="696.3" y="645" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="699.32" y="655.5" ></text>
</g>
<g >
<title>std::locale::locale (9,041,329 samples, 0.01%)</title><rect x="185.5" y="645" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="188.54" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (13,090,131 samples, 0.02%)</title><rect x="1002.2" y="629" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1005.17" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (19,242,249 samples, 0.02%)</title><rect x="349.6" y="645" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="352.56" y="655.5" ></text>
</g>
<g >
<title>std::operator| (9,440,379 samples, 0.01%)</title><rect x="285.5" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="288.53" y="623.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (11,287,461 samples, 0.01%)</title><rect x="687.4" y="661" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="690.39" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="629" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.91" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,924,595 samples, 0.01%)</title><rect x="14.4" y="565" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="17.44" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61,106,617 samples, 0.08%)</title><rect x="218.8" y="661" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="221.78" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (34,158,056 samples, 0.04%)</title><rect x="1016.1" y="645" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1019.11" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="453" width="0.7" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="1018.41" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (153,128,465 samples, 0.19%)</title><rect x="474.6" y="661" width="2.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="477.57" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (43,103,433 samples, 0.05%)</title><rect x="1093.0" y="725" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1096.05" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,559,510 samples, 0.01%)</title><rect x="82.4" y="645" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="85.43" y="655.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="549" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1017.70" y="559.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (34,840,918 samples, 0.04%)</title><rect x="785.7" y="613" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="788.66" y="623.5" ></text>
</g>
<g >
<title>std::locale::locale (80,281,954 samples, 0.10%)</title><rect x="638.9" y="645" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="641.91" y="655.5" ></text>
</g>
<g >
<title>std::operator| (13,055,707 samples, 0.02%)</title><rect x="94.2" y="597" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.18" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (12,132,856 samples, 0.02%)</title><rect x="680.0" y="645" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="683.03" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (25,146,205 samples, 0.03%)</title><rect x="451.3" y="677" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="454.25" y="687.5" ></text>
</g>
<g >
<title>Logger::log (976,157,425 samples, 1.22%)</title><rect x="237.3" y="661" width="14.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="240.34" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (193,383,517 samples, 0.24%)</title><rect x="48.8" y="629" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.76" y="639.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (9,577,859 samples, 0.01%)</title><rect x="103.3" y="581" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="106.25" y="591.5" ></text>
</g>
<g >
<title>clear_page_erms (9,153,767 samples, 0.01%)</title><rect x="13.9" y="37" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="16.91" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (114,203,390 samples, 0.14%)</title><rect x="1181.5" y="741" width="1.7" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1184.49" y="751.5" ></text>
</g>
<g >
<title>std::operator&amp;= (10,320,112 samples, 0.01%)</title><rect x="110.8" y="645" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="113.78" y="655.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (1,511,495,297 samples, 1.89%)</title><rect x="926.6" y="661" width="22.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="929.63" y="671.5" >s..</text>
</g>
<g >
<title>do_lookup_x (9,771,959 samples, 0.01%)</title><rect x="12.9" y="725" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="15.88" y="735.5" ></text>
</g>
<g >
<title>intel_cdclk_get_cdclk (10,033,295 samples, 0.01%)</title><rect x="1015.8" y="245" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1018.81" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (13,735,996 samples, 0.02%)</title><rect x="308.8" y="677" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="311.85" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9,720,302 samples, 0.01%)</title><rect x="253.2" y="581" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="256.17" y="591.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (23,599,345 samples, 0.03%)</title><rect x="1010.3" y="581" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1013.27" y="591.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (46,124,653 samples, 0.06%)</title><rect x="967.7" y="661" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="970.69" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::setf (149,875,742 samples, 0.19%)</title><rect x="323.5" y="645" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="326.54" y="655.5" ></text>
</g>
<g >
<title>__split_vma (28,265,752 samples, 0.04%)</title><rect x="15.4" y="229" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="18.43" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (36,206,943 samples, 0.05%)</title><rect x="826.0" y="661" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="829.05" y="671.5" ></text>
</g>
<g >
<title>glXCreateContext (38,797,397 samples, 0.05%)</title><rect x="17.6" y="677" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="20.64" y="687.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (16,404,900,656 samples, 20.55%)</title><rect x="754.9" y="693" width="242.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="757.89" y="703.5" >Memory::fetchIOs</text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (11,054,219 samples, 0.01%)</title><rect x="186.3" y="645" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="189.34" y="655.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (8,996,448 samples, 0.01%)</title><rect x="605.7" y="645" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="608.69" y="655.5" ></text>
</g>
<g >
<title>__strlen_avx2 (12,069,191 samples, 0.02%)</title><rect x="83.9" y="629" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="86.88" y="639.5" ></text>
</g>
<g >
<title>Log::log (33,181,525 samples, 0.04%)</title><rect x="1001.9" y="661" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1004.87" y="671.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="405" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="415.5" ></text>
</g>
<g >
<title>call_timer_fn (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="613" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1020.44" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (13,727,100 samples, 0.02%)</title><rect x="543.9" y="661" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="546.88" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (35,718,098 samples, 0.04%)</title><rect x="333.8" y="693" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="336.82" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="629" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1135.97" y="639.5" ></text>
</g>
<g >
<title>common_interrupt (11,060,742 samples, 0.01%)</title><rect x="673.5" y="629" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="676.49" y="639.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="645" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.12" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (12,069,659 samples, 0.02%)</title><rect x="789.0" y="629" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="792.02" y="639.5" ></text>
</g>
<g >
<title>handle_pte_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="597" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.07" y="607.5" ></text>
</g>
<g >
<title>shmem_alloc_folio (9,153,767 samples, 0.01%)</title><rect x="13.9" y="117" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="16.91" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (80,258,033 samples, 0.10%)</title><rect x="352.2" y="677" width="1.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="355.20" y="687.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (75,649,865 samples, 0.09%)</title><rect x="886.7" y="597" width="1.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="889.72" y="607.5" ></text>
</g>
<g >
<title>malloc (8,493,373 samples, 0.01%)</title><rect x="13.2" y="629" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="16.17" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (46,921,541 samples, 0.06%)</title><rect x="348.9" y="629" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="351.87" y="639.5" ></text>
</g>
<g >
<title>__strlen_avx2 (12,069,976 samples, 0.02%)</title><rect x="1002.7" y="645" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1005.73" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,984,647 samples, 0.01%)</title><rect x="1010.6" y="581" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1013.62" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (8,869,033 samples, 0.01%)</title><rect x="172.5" y="661" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="175.53" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (192,559,445 samples, 0.24%)</title><rect x="786.2" y="629" width="2.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="789.18" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,830,286 samples, 0.01%)</title><rect x="51.4" y="533" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="54.44" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (21,079,620 samples, 0.03%)</title><rect x="91.1" y="645" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="94.11" y="655.5" ></text>
</g>
<g >
<title>pthread_once@plt (19,865,709 samples, 0.02%)</title><rect x="266.3" y="613" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="269.34" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (24,339,330 samples, 0.03%)</title><rect x="58.4" y="677" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="61.39" y="687.5" ></text>
</g>
<g >
<title>std::uppercase (115,889,284 samples, 0.15%)</title><rect x="203.2" y="661" width="1.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="206.19" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (13,700,768 samples, 0.02%)</title><rect x="336.4" y="693" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="339.41" y="703.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,070,003 samples, 0.01%)</title><rect x="14.3" y="469" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="17.31" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (274,056,337 samples, 0.34%)</title><rect x="42.2" y="645" width="4.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="45.20" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="373" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.43" y="383.5" ></text>
</g>
<g >
<title>i915_vma_get_pages (9,153,767 samples, 0.01%)</title><rect x="13.9" y="245" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="16.91" y="255.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="597" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="607.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (1,266,260,420 samples, 1.59%)</title><rect x="949.0" y="661" width="18.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="951.97" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (14,084,821 samples, 0.02%)</title><rect x="543.7" y="661" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="546.67" y="671.5" ></text>
</g>
<g >
<title>std::uppercase (332,769,768 samples, 0.42%)</title><rect x="698.6" y="661" width="4.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="701.62" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="469" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.29" y="479.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="501" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="511.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (861,417,558 samples, 1.08%)</title><rect x="936.2" y="645" width="12.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="939.24" y="655.5" ></text>
</g>
<g >
<title>common_interrupt (9,720,302 samples, 0.01%)</title><rect x="253.2" y="629" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="256.17" y="639.5" ></text>
</g>
<g >
<title>CPU::cycle (25,167,923,028 samples, 31.52%)</title><rect x="33.2" y="725" width="372.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="36.18" y="735.5" >CPU::cycle</text>
</g>
<g >
<title>update_process_times (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="421" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1017.70" y="431.5" ></text>
</g>
<g >
<title>PPU::checkLYCInterrupt (63,413,196 samples, 0.08%)</title><rect x="1000.8" y="709" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1003.79" y="719.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (199,768,276 samples, 0.25%)</title><rect x="104.3" y="661" width="3.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="107.34" y="671.5" ></text>
</g>
<g >
<title>std::locale::locale (63,297,641 samples, 0.08%)</title><rect x="897.8" y="629" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="900.82" y="639.5" ></text>
</g>
<g >
<title>std::operator|= (13,125,662 samples, 0.02%)</title><rect x="110.6" y="629" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="113.59" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12,069,264 samples, 0.02%)</title><rect x="1089.3" y="709" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1092.26" y="719.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (17,393,462 samples, 0.02%)</title><rect x="17.2" y="613" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="20.25" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (54,094,064 samples, 0.07%)</title><rect x="418.4" y="677" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="421.38" y="687.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="357" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="367.5" ></text>
</g>
<g >
<title>memcpy@plt (13,074,367 samples, 0.02%)</title><rect x="210.7" y="677" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="213.72" y="687.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (48,214,977 samples, 0.06%)</title><rect x="267.1" y="645" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="270.11" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (68,578,948 samples, 0.09%)</title><rect x="1010.1" y="629" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1013.13" y="639.5" ></text>
</g>
<g >
<title>std::operator| (10,051,811 samples, 0.01%)</title><rect x="967.2" y="597" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="970.20" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (87,301,096 samples, 0.11%)</title><rect x="796.4" y="597" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="799.36" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (80,798,146 samples, 0.10%)</title><rect x="306.1" y="677" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="309.13" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (790,554,118 samples, 0.99%)</title><rect x="975.1" y="661" width="11.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="978.10" y="671.5" ></text>
</g>
<g >
<title>____sys_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="341" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.77" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,572,782 samples, 0.01%)</title><rect x="653.5" y="661" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="656.49" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (14,071,992 samples, 0.02%)</title><rect x="350.4" y="677" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="353.36" y="687.5" ></text>
</g>
<g >
<title>all (79,838,712,723 samples, 100%)</title><rect x="10.0" y="853" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (14,085,340 samples, 0.02%)</title><rect x="827.7" y="661" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="830.67" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,994,653 samples, 0.01%)</title><rect x="991.6" y="677" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="994.56" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (105,355,603 samples, 0.13%)</title><rect x="95.7" y="645" width="1.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="98.73" y="655.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (96,293,691 samples, 0.12%)</title><rect x="254.5" y="693" width="1.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="257.46" y="703.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="549" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="559.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (1,365,687,080 samples, 1.71%)</title><rect x="665.5" y="677" width="20.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="668.50" y="687.5" ></text>
</g>
<g >
<title>std::operator&amp; (22,073,563 samples, 0.03%)</title><rect x="956.6" y="597" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="959.57" y="607.5" ></text>
</g>
<g >
<title>i915_gem_execbuffer2_ioctl (9,153,767 samples, 0.01%)</title><rect x="13.9" y="357" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="16.91" y="367.5" ></text>
</g>
<g >
<title>std::locale::~locale (22,111,156 samples, 0.03%)</title><rect x="653.7" y="661" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="656.66" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="501" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="511.5" ></text>
</g>
<g >
<title>schedule (11,287,461 samples, 0.01%)</title><rect x="687.4" y="597" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="690.39" y="607.5" ></text>
</g>
<g >
<title>exc_page_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="661" width="1.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="14.07" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (18,818,229 samples, 0.02%)</title><rect x="231.3" y="693" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="234.27" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (33,138,681 samples, 0.04%)</title><rect x="411.7" y="677" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="414.69" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="661" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1090.76" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (11,057,089 samples, 0.01%)</title><rect x="246.4" y="645" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="249.43" y="655.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (28,265,752 samples, 0.04%)</title><rect x="15.4" y="453" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="18.43" y="463.5" ></text>
</g>
<g >
<title>_dl_relocate_object (85,769,467 samples, 0.11%)</title><rect x="15.8" y="501" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="18.85" y="511.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (297,444,628 samples, 0.37%)</title><rect x="368.8" y="661" width="4.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="371.82" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (12,067,208 samples, 0.02%)</title><rect x="411.3" y="629" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="414.31" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (67,558,754 samples, 0.08%)</title><rect x="989.2" y="677" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="992.23" y="687.5" ></text>
</g>
<g >
<title>run_timer_softirq (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="645" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1020.44" y="655.5" ></text>
</g>
<g >
<title>strlen@plt (12,785,116 samples, 0.02%)</title><rect x="172.8" y="661" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="175.81" y="671.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (10,690,482 samples, 0.01%)</title><rect x="525.7" y="485" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="528.67" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (22,098,465 samples, 0.03%)</title><rect x="567.9" y="677" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="570.94" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (10,004,713 samples, 0.01%)</title><rect x="78.8" y="581" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.80" y="591.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (176,750,389 samples, 0.22%)</title><rect x="264.5" y="645" width="2.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="267.50" y="655.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (24,895,138 samples, 0.03%)</title><rect x="404.6" y="709" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="407.60" y="719.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (122,501,937 samples, 0.15%)</title><rect x="11.1" y="757" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="14.07" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (39,054,403 samples, 0.05%)</title><rect x="51.6" y="645" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="54.61" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (12,066,669 samples, 0.02%)</title><rect x="349.8" y="661" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="352.85" y="671.5" ></text>
</g>
<g >
<title>Log::log (12,112,628 samples, 0.02%)</title><rect x="1001.0" y="661" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1003.97" y="671.5" ></text>
</g>
<g >
<title>Log::log (1,031,488,899 samples, 1.29%)</title><rect x="339.7" y="709" width="15.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="342.74" y="719.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (33,064,369 samples, 0.04%)</title><rect x="82.6" y="661" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="85.59" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (94,883,435 samples, 0.12%)</title><rect x="1014.7" y="629" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1017.70" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (192,589,893 samples, 0.24%)</title><rect x="945.7" y="613" width="2.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="948.73" y="623.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (28,641,212 samples, 0.04%)</title><rect x="15.4" y="613" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="18.43" y="623.5" ></text>
</g>
<g >
<title>std::ios_base::setf (78,661,905 samples, 0.10%)</title><rect x="203.6" y="645" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="206.56" y="655.5" ></text>
</g>
<g >
<title>malloc (143,253,826 samples, 0.18%)</title><rect x="330.5" y="629" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="333.48" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (344,341,486 samples, 0.43%)</title><rect x="13.3" y="741" width="5.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.29" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (13,078,591 samples, 0.02%)</title><rect x="422.8" y="709" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="425.79" y="719.5" ></text>
</g>
<g >
<title>___sys_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="357" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1019.77" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (87,517,198 samples, 0.11%)</title><rect x="913.1" y="661" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="916.14" y="671.5" ></text>
</g>
<g >
<title>drm_ioctl_kernel (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="421" width="0.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1018.41" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (140,058,338 samples, 0.18%)</title><rect x="232.1" y="693" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="235.10" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (60,385,613 samples, 0.08%)</title><rect x="732.2" y="709" width="0.9" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="735.25" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (14,071,192 samples, 0.02%)</title><rect x="336.8" y="693" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="339.81" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (145,683,747 samples, 0.18%)</title><rect x="670.6" y="661" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="673.58" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (83,411,645 samples, 0.10%)</title><rect x="78.4" y="597" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="81.41" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (181,751,985 samples, 0.23%)</title><rect x="243.6" y="629" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="246.58" y="639.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (53,033,255 samples, 0.07%)</title><rect x="234.4" y="693" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="237.37" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (54,784,553 samples, 0.07%)</title><rect x="413.0" y="661" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="416.03" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (41,482,669 samples, 0.05%)</title><rect x="72.9" y="645" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="75.94" y="655.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="629" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="639.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (11,050,961 samples, 0.01%)</title><rect x="1133.0" y="549" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1135.97" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (8,869,899 samples, 0.01%)</title><rect x="17.1" y="405" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="20.12" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (79,633,786,465 samples, 99.74%)</title><rect x="13.0" y="805" width="1177.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="16.03" y="815.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>tick_nohz_handler (11,057,421 samples, 0.01%)</title><rect x="576.3" y="597" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="579.31" y="607.5" ></text>
</g>
<g >
<title>std::operator| (22,668,913 samples, 0.03%)</title><rect x="692.7" y="629" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="695.72" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (81,330,857 samples, 0.10%)</title><rect x="186.9" y="661" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="189.89" y="671.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (13,078,521 samples, 0.02%)</title><rect x="152.8" y="661" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="155.79" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (173,200,421 samples, 0.22%)</title><rect x="239.6" y="613" width="2.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="242.56" y="623.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (9,175,991 samples, 0.01%)</title><rect x="970.2" y="549" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="973.17" y="559.5" ></text>
</g>
<g >
<title>std::operator~ (37,214,237 samples, 0.05%)</title><rect x="959.4" y="613" width="0.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="962.45" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (131,740,828 samples, 0.17%)</title><rect x="417.2" y="693" width="2.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="420.23" y="703.5" ></text>
</g>
<g >
<title>update_wall_time (9,175,991 samples, 0.01%)</title><rect x="970.2" y="533" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="973.17" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (223,174,553 samples, 0.28%)</title><rect x="346.7" y="677" width="3.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="349.73" y="687.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (25,087,914 samples, 0.03%)</title><rect x="355.1" y="709" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="358.12" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (24,139,795 samples, 0.03%)</title><rect x="400.6" y="693" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="403.62" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (734,960,165 samples, 0.92%)</title><rect x="709.6" y="677" width="10.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="712.57" y="687.5" ></text>
</g>
<g >
<title>Memory::fetch8 (23,124,200 samples, 0.03%)</title><rect x="1013.0" y="677" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1016.02" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="661" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned char&gt; (11,053,820 samples, 0.01%)</title><rect x="356.1" y="709" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="359.06" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (65,465,230 samples, 0.08%)</title><rect x="525.8" y="629" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="528.83" y="639.5" ></text>
</g>
<g >
<title>__GI___ioctl (60,288,393 samples, 0.08%)</title><rect x="1015.2" y="517" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1018.21" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (14,007,612 samples, 0.02%)</title><rect x="67.7" y="629" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="70.73" y="639.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (72,136,510 samples, 0.09%)</title><rect x="52.7" y="661" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="55.66" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,265,752 samples, 0.04%)</title><rect x="15.4" y="373" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.43" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (13,157,924 samples, 0.02%)</title><rect x="277.0" y="661" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="279.99" y="671.5" ></text>
</g>
<g >
<title>Logger::log (33,181,525 samples, 0.04%)</title><rect x="1001.9" y="645" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1004.87" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,057,515 samples, 0.01%)</title><rect x="731.2" y="661" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="734.22" y="671.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,057,515 samples, 0.01%)</title><rect x="731.2" y="645" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="734.22" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (31,075,219 samples, 0.04%)</title><rect x="1047.6" y="693" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1050.63" y="703.5" ></text>
</g>
<g >
<title>std::locale::locale (258,905,886 samples, 0.32%)</title><rect x="179.5" y="629" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="182.53" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (9,032,891 samples, 0.01%)</title><rect x="413.7" y="629" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="416.71" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (30,477,274 samples, 0.04%)</title><rect x="450.3" y="661" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="453.30" y="671.5" ></text>
</g>
<g >
<title>update_process_times (11,057,515 samples, 0.01%)</title><rect x="731.2" y="613" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="734.22" y="623.5" ></text>
</g>
<g >
<title>std::hex (37,588,621 samples, 0.05%)</title><rect x="93.8" y="629" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="96.82" y="639.5" ></text>
</g>
<g >
<title>Log::log (43,383,078 samples, 0.05%)</title><rect x="1012.4" y="645" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1015.38" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (30,152,029 samples, 0.04%)</title><rect x="353.6" y="661" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="356.57" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,070,003 samples, 0.01%)</title><rect x="14.3" y="421" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="17.31" y="431.5" ></text>
</g>
<g >
<title>timekeeping_advance (10,690,482 samples, 0.01%)</title><rect x="525.7" y="453" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="528.67" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (24,950,247 samples, 0.03%)</title><rect x="818.3" y="629" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="821.34" y="639.5" ></text>
</g>
<g >
<title>malloc@plt (10,773,411 samples, 0.01%)</title><rect x="1056.3" y="677" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1059.35" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="581" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (9,043,135 samples, 0.01%)</title><rect x="235.2" y="677" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="238.15" y="687.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (9,094,954 samples, 0.01%)</title><rect x="15.2" y="421" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.16" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (13,074,454 samples, 0.02%)</title><rect x="336.6" y="693" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="339.62" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (13,072,581 samples, 0.02%)</title><rect x="248.7" y="629" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="251.73" y="639.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (11,060,742 samples, 0.01%)</title><rect x="673.5" y="469" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="676.49" y="479.5" ></text>
</g>
<g >
<title>_nv043727rm (7,555,648 samples, 0.01%)</title><rect x="13.3" y="517" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="16.31" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,153,767 samples, 0.01%)</title><rect x="13.9" y="437" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.91" y="447.5" ></text>
</g>
<g >
<title>Memory::fetch8 (17,442,207,982 samples, 21.85%)</title><rect x="742.5" y="709" width="257.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="745.49" y="719.5" >Memory::fetch8</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="661" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1135.97" y="671.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (12,068,277 samples, 0.02%)</title><rect x="613.6" y="533" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="616.61" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (13,076,704 samples, 0.02%)</title><rect x="781.4" y="597" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="784.41" y="607.5" ></text>
</g>
<g >
<title>glXCreateContext (8,878,733 samples, 0.01%)</title><rect x="17.1" y="661" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="20.12" y="671.5" ></text>
</g>
<g >
<title>update_wall_time (12,068,277 samples, 0.02%)</title><rect x="613.6" y="517" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="616.61" y="527.5" ></text>
</g>
<g >
<title>std::setw (13,376,265 samples, 0.02%)</title><rect x="98.4" y="661" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="101.40" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,044,439 samples, 0.01%)</title><rect x="256.9" y="661" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="259.87" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (11,061,161 samples, 0.01%)</title><rect x="1002.4" y="629" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1005.36" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37,136,644 samples, 0.05%)</title><rect x="113.8" y="661" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="116.82" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (13,078,188 samples, 0.02%)</title><rect x="1007.1" y="597" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1010.13" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (50,263,709 samples, 0.06%)</title><rect x="269.1" y="677" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="272.10" y="687.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (10,690,482 samples, 0.01%)</title><rect x="525.7" y="421" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="528.67" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (12,068,387 samples, 0.02%)</title><rect x="974.9" y="661" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="977.92" y="671.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (8,965,624 samples, 0.01%)</title><rect x="75.2" y="661" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="78.15" y="671.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (76,013,527 samples, 0.10%)</title><rect x="92.1" y="645" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="95.13" y="655.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="693" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="703.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (17,393,462 samples, 0.02%)</title><rect x="17.2" y="629" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="20.25" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (58,444,691 samples, 0.07%)</title><rect x="269.8" y="677" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="272.84" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,880,509 samples, 0.01%)</title><rect x="692.4" y="565" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="695.39" y="575.5" ></text>
</g>
<g >
<title>shmem_get_pages (9,153,767 samples, 0.01%)</title><rect x="13.9" y="197" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="16.91" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (26,125,672 samples, 0.03%)</title><rect x="351.8" y="677" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="354.82" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (143,947,963 samples, 0.18%)</title><rect x="809.0" y="645" width="2.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="812.01" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (12,084,778 samples, 0.02%)</title><rect x="251.6" y="629" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="254.59" y="639.5" ></text>
</g>
<g >
<title>timekeeping_advance (12,068,277 samples, 0.02%)</title><rect x="613.6" y="501" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="616.61" y="511.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (47,013,816 samples, 0.06%)</title><rect x="308.0" y="677" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="311.02" y="687.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,076,852 samples, 0.02%)</title><rect x="586.7" y="661" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="589.71" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (75,072,508 samples, 0.09%)</title><rect x="14.1" y="581" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.05" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (375,802,419 samples, 0.47%)</title><rect x="41.8" y="661" width="5.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.78" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (48,806,804 samples, 0.06%)</title><rect x="566.0" y="677" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="569.02" y="687.5" ></text>
</g>
<g >
<title>malloc (31,787,967 samples, 0.04%)</title><rect x="1092.6" y="677" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1095.58" y="687.5" ></text>
</g>
<g >
<title>unsigned int std::__detail::__to_chars_len&lt;unsigned int&gt; (70,925,005 samples, 0.09%)</title><rect x="1178.1" y="725" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1181.11" y="735.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="629" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (226,413,266 samples, 0.28%)</title><rect x="294.6" y="645" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="297.63" y="655.5" ></text>
</g>
<g >
<title>std::operator|= (22,043,471 samples, 0.03%)</title><rect x="94.5" y="597" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="97.53" y="607.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (102,394,756 samples, 0.13%)</title><rect x="373.2" y="661" width="1.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="376.22" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (149,328,981 samples, 0.19%)</title><rect x="49.4" y="613" width="2.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="52.41" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (24,062,788 samples, 0.03%)</title><rect x="69.6" y="581" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="72.62" y="591.5" ></text>
</g>
<g >
<title>std::locale::locale (47,455,421 samples, 0.06%)</title><rect x="305.4" y="661" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="308.42" y="671.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (13,999,860 samples, 0.02%)</title><rect x="1002.5" y="629" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1005.53" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (8,806,611 samples, 0.01%)</title><rect x="345.5" y="613" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="348.54" y="623.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (107,840,490 samples, 0.14%)</title><rect x="93.3" y="645" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.26" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (34,186,313 samples, 0.04%)</title><rect x="248.4" y="645" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="251.42" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (41,248,533 samples, 0.05%)</title><rect x="849.5" y="661" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="852.46" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_handler (11,572,782 samples, 0.01%)</title><rect x="653.5" y="581" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="656.49" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1,580,919,983 samples, 1.98%)</title><rect x="1151.9" y="693" width="23.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1154.90" y="703.5" >s..</text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (52,936,106 samples, 0.07%)</title><rect x="923.5" y="645" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="926.50" y="655.5" ></text>
</g>
<g >
<title>Log::operator&lt;&lt; (75,563,376 samples, 0.09%)</title><rect x="1006.8" y="661" width="1.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1009.76" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (11,059,771 samples, 0.01%)</title><rect x="47.9" y="661" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="50.87" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="613" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.03" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (101,925,581 samples, 0.13%)</title><rect x="558.4" y="645" width="1.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="561.42" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (43,934,219 samples, 0.06%)</title><rect x="978.0" y="645" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="981.00" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (11,045,024 samples, 0.01%)</title><rect x="422.3" y="709" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="425.34" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="485" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1018.41" y="495.5" ></text>
</g>
<g >
<title>std::uppercase (26,395,857 samples, 0.03%)</title><rect x="970.3" y="661" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="973.30" y="671.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (24,875,802 samples, 0.03%)</title><rect x="140.4" y="645" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="143.41" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (496,325,543 samples, 0.62%)</title><rect x="818.7" y="645" width="7.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="821.71" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (11,058,777 samples, 0.01%)</title><rect x="139.2" y="661" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="142.22" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,639,512 samples, 0.01%)</title><rect x="728.4" y="645" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="731.35" y="655.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (26,143,218 samples, 0.03%)</title><rect x="388.8" y="661" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="391.77" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (46,259,445 samples, 0.06%)</title><rect x="679.3" y="645" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="682.34" y="655.5" ></text>
</g>
<g >
<title>x64_sys_call (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="469" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1018.41" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (47,247,266 samples, 0.06%)</title><rect x="364.5" y="677" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="367.49" y="687.5" ></text>
</g>
<g >
<title>_dl_init (9,236,470 samples, 0.01%)</title><rect x="10.9" y="805" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.94" y="815.5" ></text>
</g>
<g >
<title>rb_insert_color (38,313,800 samples, 0.05%)</title><rect x="17.6" y="197" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="20.64" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (39,249,473 samples, 0.05%)</title><rect x="14.6" y="453" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.57" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (81,374,489 samples, 0.10%)</title><rect x="566.7" y="677" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="569.74" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (13,345,965 samples, 0.02%)</title><rect x="414.3" y="693" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="417.33" y="703.5" ></text>
</g>
<g >
<title>std::operator|= (37,277,525 samples, 0.05%)</title><rect x="393.6" y="645" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="396.61" y="655.5" ></text>
</g>
<g >
<title>_dl_start_user (141,510,366 samples, 0.18%)</title><rect x="10.9" y="821" width="2.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.94" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (26,150,578 samples, 0.03%)</title><rect x="416.4" y="677" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="419.37" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (137,621,752 samples, 0.17%)</title><rect x="188.1" y="677" width="2.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="191.09" y="687.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="533" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1019.77" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (20,144,956 samples, 0.03%)</title><rect x="1076.2" y="725" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1079.24" y="735.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (14,085,441 samples, 0.02%)</title><rect x="107.6" y="677" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="110.64" y="687.5" ></text>
</g>
<g >
<title>gen8_de_irq_handler (11,060,742 samples, 0.01%)</title><rect x="673.5" y="533" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="676.49" y="543.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::__resize_and_overwrite&lt;std::__cxx11::to_string (2,960,219,900 samples, 3.71%)</title><rect x="1133.3" y="709" width="43.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1136.30" y="719.5" >void..</text>
</g>
<g >
<title>std::operator&amp;= (20,983,925 samples, 0.03%)</title><rect x="321.9" y="629" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="324.89" y="639.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (26,150,667 samples, 0.03%)</title><rect x="1179.2" y="725" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1182.16" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (12,499,515 samples, 0.02%)</title><rect x="1003.1" y="613" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1006.08" y="623.5" ></text>
</g>
<g >
<title>__strlen_avx2 (44,288,675 samples, 0.06%)</title><rect x="288.1" y="661" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="291.13" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (151,748,087 samples, 0.19%)</title><rect x="262.3" y="645" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="265.25" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (30,890,241 samples, 0.04%)</title><rect x="258.8" y="677" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="261.78" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (13,078,579 samples, 0.02%)</title><rect x="1015.0" y="437" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1018.02" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,920,552 samples, 0.01%)</title><rect x="216.1" y="581" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="219.13" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (970,456,885 samples, 1.22%)</title><rect x="790.7" y="645" width="14.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="793.70" y="655.5" ></text>
</g>
<g >
<title>malloc (12,070,692 samples, 0.02%)</title><rect x="97.1" y="597" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="100.11" y="607.5" ></text>
</g>
<g >
<title>std::hex (285,096,721 samples, 0.36%)</title><rect x="162.5" y="661" width="4.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="165.55" y="671.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (14,006,540 samples, 0.02%)</title><rect x="276.8" y="661" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="279.78" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (33,488,424 samples, 0.04%)</title><rect x="390.7" y="645" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="393.67" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="613" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.07" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (10,772,178 samples, 0.01%)</title><rect x="81.6" y="613" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="84.62" y="623.5" ></text>
</g>
<g >
<title>generic_update_time (32,474,425 samples, 0.04%)</title><rect x="13.4" y="261" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="16.43" y="271.5" ></text>
</g>
<g >
<title>Log::log (345,955,928 samples, 0.43%)</title><rect x="77.5" y="661" width="5.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="80.48" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (784,928,979 samples, 0.98%)</title><rect x="452.1" y="677" width="11.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="455.10" y="687.5" ></text>
</g>
<g >
<title>_i915_vma_move_to_active (13,080,954 samples, 0.02%)</title><rect x="1015.4" y="357" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1018.41" y="367.5" ></text>
</g>
<g >
<title>sched_tick (8,070,003 samples, 0.01%)</title><rect x="14.3" y="325" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="17.31" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,070,003 samples, 0.01%)</title><rect x="14.3" y="437" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="17.31" y="447.5" ></text>
</g>
<g >
<title>__strlen_avx2 (19,003,519 samples, 0.02%)</title><rect x="101.7" y="661" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="104.66" y="671.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (9,268,626 samples, 0.01%)</title><rect x="13.0" y="597" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="16.03" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (21,121,419 samples, 0.03%)</title><rect x="1116.6" y="709" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1119.59" y="719.5" ></text>
</g>
<g >
<title>__intel_wakeref_get_first (34,133,572 samples, 0.04%)</title><rect x="1015.6" y="357" width="0.5" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1018.60" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (473,597,129 samples, 0.59%)</title><rect x="210.9" y="677" width="7.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="213.91" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (21,042,918 samples, 0.03%)</title><rect x="56.0" y="661" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="58.98" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22,121,620 samples, 0.03%)</title><rect x="170.7" y="661" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="173.74" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (9,004,399 samples, 0.01%)</title><rect x="337.0" y="693" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="340.02" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (186,968,391 samples, 0.23%)</title><rect x="347.1" y="661" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="350.08" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (11,724,394 samples, 0.01%)</title><rect x="349.4" y="613" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="352.39" y="623.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (13,078,579 samples, 0.02%)</title><rect x="1015.0" y="453" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1018.02" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,777,050 samples, 0.01%)</title><rect x="786.0" y="597" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="789.03" y="607.5" ></text>
</g>
<g >
<title>std::locale::~locale (9,676,737 samples, 0.01%)</title><rect x="268.3" y="645" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="271.32" y="655.5" ></text>
</g>
<g >
<title>file_update_time (32,474,425 samples, 0.04%)</title><rect x="13.4" y="277" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="16.43" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (132,603,343 samples, 0.17%)</title><rect x="550.1" y="661" width="1.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="553.06" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (34,086,717 samples, 0.04%)</title><rect x="641.7" y="661" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="644.66" y="671.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (156,713,560 samples, 0.20%)</title><rect x="465.5" y="677" width="2.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="468.50" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (13,899,927 samples, 0.02%)</title><rect x="399.0" y="677" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="402.00" y="687.5" ></text>
</g>
<g >
<title>_dl_start (132,273,896 samples, 0.17%)</title><rect x="11.1" y="805" width="1.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.07" y="815.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (24,137,761 samples, 0.03%)</title><rect x="934.6" y="645" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="937.60" y="655.5" ></text>
</g>
<g >
<title>_dl_catch_exception (85,769,467 samples, 0.11%)</title><rect x="15.8" y="613" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.85" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (291,129,800 samples, 0.36%)</title><rect x="48.0" y="661" width="4.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="51.04" y="671.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (396,769,283 samples, 0.50%)</title><rect x="320.1" y="677" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="323.06" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (385,681,327 samples, 0.48%)</title><rect x="714.7" y="661" width="5.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="717.73" y="671.5" ></text>
</g>
<g >
<title>x64_sys_call (28,265,752 samples, 0.04%)</title><rect x="15.4" y="357" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="18.43" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (156,200,100 samples, 0.20%)</title><rect x="972.6" y="661" width="2.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="975.61" y="671.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (196,837,992 samples, 0.25%)</title><rect x="806.1" y="645" width="2.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="809.10" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (9,107,646 samples, 0.01%)</title><rect x="401.3" y="709" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="404.27" y="719.5" ></text>
</g>
<g >
<title>std::operator|= (24,134,679 samples, 0.03%)</title><rect x="110.9" y="629" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="113.93" y="639.5" ></text>
</g>
<g >
<title>Log::log (4,568,618,824 samples, 5.72%)</title><rect x="502.6" y="693" width="67.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="505.61" y="703.5" >Log::log</text>
</g>
<g >
<title>std::__cxx11::to_string (76,072,362 samples, 0.10%)</title><rect x="1188.9" y="741" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.88" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (81,353,427 samples, 0.10%)</title><rect x="421.1" y="677" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="424.14" y="687.5" ></text>
</g>
<g >
<title>_int_free (9,268,626 samples, 0.01%)</title><rect x="13.0" y="581" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.03" y="591.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (13,077,577 samples, 0.02%)</title><rect x="234.2" y="693" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="237.17" y="703.5" ></text>
</g>
<g >
<title>_int_free (81,184,610 samples, 0.10%)</title><rect x="99.1" y="677" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="102.08" y="687.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="597" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.12" y="607.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (33,934,017 samples, 0.04%)</title><rect x="345.2" y="629" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="348.16" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (32,375,877 samples, 0.04%)</title><rect x="416.8" y="693" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="419.75" y="703.5" ></text>
</g>
<g >
<title>Memory::fetch8 (33,992,375 samples, 0.04%)</title><rect x="253.6" y="693" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="256.63" y="703.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (22,100,441 samples, 0.03%)</title><rect x="590.6" y="661" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="593.62" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (12,982,166 samples, 0.02%)</title><rect x="43.7" y="613" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.70" y="623.5" ></text>
</g>
<g >
<title>Log::operator&lt;&lt; (4,451,381,130 samples, 5.58%)</title><rect x="423.0" y="725" width="65.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="425.99" y="735.5" >Log::op..</text>
</g>
<g >
<title>std::operator|= (31,309,507 samples, 0.04%)</title><rect x="168.3" y="629" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="171.26" y="639.5" ></text>
</g>
<g >
<title>folio_alloc_mpol_noprof (9,153,767 samples, 0.01%)</title><rect x="13.9" y="101" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="16.91" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (11,056,354 samples, 0.01%)</title><rect x="70.3" y="629" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="73.31" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (48,276,590 samples, 0.06%)</title><rect x="96.6" y="629" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="99.57" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,265,752 samples, 0.04%)</title><rect x="15.4" y="389" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.43" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (45,333,503 samples, 0.06%)</title><rect x="940.3" y="629" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="943.28" y="639.5" ></text>
</g>
<g >
<title>std::locale::~locale (80,172,793 samples, 0.10%)</title><rect x="372.0" y="645" width="1.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="375.04" y="655.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (428,009,582 samples, 0.54%)</title><rect x="273.7" y="677" width="6.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="276.65" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="549" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="559.5" ></text>
</g>
<g >
<title>__common_interrupt (9,720,302 samples, 0.01%)</title><rect x="253.2" y="613" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="256.17" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (768,913,790 samples, 0.96%)</title><rect x="773.7" y="613" width="11.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="776.73" y="623.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (162,981,003 samples, 0.20%)</title><rect x="726.1" y="693" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="729.10" y="703.5" ></text>
</g>
<g >
<title>xcb_poll_for_special_event (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="485" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1019.77" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (314,647,357 samples, 0.39%)</title><rect x="220.9" y="661" width="4.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="223.86" y="671.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (83,456,659 samples, 0.10%)</title><rect x="190.3" y="677" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="193.29" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="677" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (74,929,305 samples, 0.09%)</title><rect x="1071.3" y="709" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1074.28" y="719.5" ></text>
</g>
<g >
<title>asm_common_interrupt (9,720,302 samples, 0.01%)</title><rect x="253.2" y="645" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="256.17" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (13,060,840 samples, 0.02%)</title><rect x="79.6" y="597" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="82.64" y="607.5" ></text>
</g>
<g >
<title>_dl_catch_error (28,265,752 samples, 0.04%)</title><rect x="15.4" y="565" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="18.43" y="575.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (49,552,707 samples, 0.06%)</title><rect x="369.4" y="645" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="372.39" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (38,901,896 samples, 0.05%)</title><rect x="80.2" y="581" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="83.19" y="591.5" ></text>
</g>
<g >
<title>strlen@plt (10,036,077 samples, 0.01%)</title><rect x="97.7" y="645" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="100.67" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9,777,050 samples, 0.01%)</title><rect x="786.0" y="565" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="789.03" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (13,144,909 samples, 0.02%)</title><rect x="351.6" y="661" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="354.62" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (13,230,365 samples, 0.02%)</title><rect x="1007.5" y="613" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1010.48" y="623.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (116,799,623 samples, 0.15%)</title><rect x="992.9" y="677" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="995.91" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (117,690,118 samples, 0.15%)</title><rect x="1034.2" y="709" width="1.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1037.16" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (27,161,773 samples, 0.03%)</title><rect x="1001.3" y="661" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1004.32" y="671.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (132,273,896 samples, 0.17%)</title><rect x="11.1" y="789" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="14.07" y="799.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,058,337 samples, 0.02%)</title><rect x="10.4" y="773" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.35" y="783.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (11,287,461 samples, 0.01%)</title><rect x="687.4" y="613" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="690.39" y="623.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (48,225,108 samples, 0.06%)</title><rect x="350.6" y="677" width="0.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="353.57" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (58,710,355 samples, 0.07%)</title><rect x="241.3" y="597" width="0.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="244.25" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (233,097,089 samples, 0.29%)</title><rect x="357.4" y="693" width="3.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="360.43" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_handler (8,880,509 samples, 0.01%)</title><rect x="692.4" y="533" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="695.39" y="543.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (12,058,337 samples, 0.02%)</title><rect x="10.4" y="789" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.35" y="799.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (11,060,600 samples, 0.01%)</title><rect x="225.9" y="677" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="228.91" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23,049,924 samples, 0.03%)</title><rect x="141.1" y="661" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="144.14" y="671.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="629" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="16.42" y="639.5" ></text>
</g>
<g >
<title>task_tick_fair (8,998,180 samples, 0.01%)</title><rect x="17.5" y="469" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="20.50" y="479.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (85,769,467 samples, 0.11%)</title><rect x="15.8" y="517" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="18.85" y="527.5" ></text>
</g>
<g >
<title>std::operator|= (32,200,665 samples, 0.04%)</title><rect x="696.8" y="645" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="699.80" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (502,896,952 samples, 0.63%)</title><rect x="454.1" y="645" width="7.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="457.05" y="655.5" ></text>
</g>
<g >
<title>std::operator| (9,069,691 samples, 0.01%)</title><rect x="203.6" y="629" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="206.56" y="639.5" ></text>
</g>
<g >
<title>malloc (23,127,311 samples, 0.03%)</title><rect x="222.9" y="645" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="225.86" y="655.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (7,555,648 samples, 0.01%)</title><rect x="13.3" y="613" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="16.31" y="623.5" ></text>
</g>
<g >
<title>consume_skb (39,249,473 samples, 0.05%)</title><rect x="14.6" y="341" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.57" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (302,840,580 samples, 0.38%)</title><rect x="157.0" y="645" width="4.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="159.97" y="655.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (22,224,117 samples, 0.03%)</title><rect x="721.3" y="677" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="724.30" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (24,125,181 samples, 0.03%)</title><rect x="54.3" y="645" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="57.28" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (18,061,537 samples, 0.02%)</title><rect x="231.0" y="693" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="234.01" y="703.5" ></text>
</g>
<g >
<title>Log::log (63,629,537 samples, 0.08%)</title><rect x="1006.9" y="645" width="1.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1009.94" y="655.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (45,819,840 samples, 0.06%)</title><rect x="332.8" y="677" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="335.79" y="687.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="613" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.64" y="623.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (51,343,701 samples, 0.06%)</title><rect x="1001.0" y="677" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1003.97" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (55,955,212 samples, 0.07%)</title><rect x="992.1" y="677" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="995.09" y="687.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (13,078,549 samples, 0.02%)</title><rect x="98.0" y="661" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="100.99" y="671.5" ></text>
</g>
<g >
<title>malloc@plt (9,994,397 samples, 0.01%)</title><rect x="982.1" y="629" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="985.11" y="639.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (409,923,005 samples, 0.51%)</title><rect x="632.9" y="645" width="6.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="635.85" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (85,892,099 samples, 0.11%)</title><rect x="1014.8" y="565" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1017.84" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="661" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.73" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (8,493,373 samples, 0.01%)</title><rect x="13.2" y="693" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.17" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,830,286 samples, 0.01%)</title><rect x="51.4" y="581" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.44" y="591.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="629" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.03" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (34,277,489 samples, 0.04%)</title><rect x="173.6" y="677" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="176.56" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (33,650,299 samples, 0.04%)</title><rect x="244.7" y="597" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="247.75" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (108,210,633 samples, 0.14%)</title><rect x="527.0" y="645" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="530.00" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (14,084,490 samples, 0.02%)</title><rect x="213.6" y="661" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="216.58" y="671.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (9,416,170 samples, 0.01%)</title><rect x="319.9" y="645" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="322.92" y="655.5" ></text>
</g>
<g >
<title>__strlen_avx2 (170,948,540 samples, 0.21%)</title><rect x="584.2" y="661" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="587.18" y="671.5" ></text>
</g>
<g >
<title>operator new (156,383,905 samples, 0.20%)</title><rect x="223.2" y="645" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="226.20" y="655.5" ></text>
</g>
<g >
<title>Memory::fetch8 (16,603,848,891 samples, 20.80%)</title><rect x="488.8" y="725" width="245.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="491.78" y="735.5" >Memory::fetch8</text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (236,295,224 samples, 0.30%)</title><rect x="781.6" y="597" width="3.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="784.60" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (11,059,940 samples, 0.01%)</title><rect x="318.7" y="629" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="321.69" y="639.5" ></text>
</g>
<g >
<title>_XFreeDisplayStructure (8,493,373 samples, 0.01%)</title><rect x="13.2" y="661" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.17" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (20,109,619 samples, 0.03%)</title><rect x="1016.6" y="629" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.61" y="639.5" ></text>
</g>
<g >
<title>kfree_skbmem (39,249,473 samples, 0.05%)</title><rect x="14.6" y="325" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="17.57" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (67,225,267 samples, 0.08%)</title><rect x="542.3" y="661" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="545.33" y="671.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (11,058,088 samples, 0.01%)</title><rect x="301.2" y="613" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="304.20" y="623.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,070,003 samples, 0.01%)</title><rect x="14.3" y="549" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.31" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (347,331,759 samples, 0.44%)</title><rect x="776.3" y="597" width="5.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="779.28" y="607.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="693" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1020.44" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,057,421 samples, 0.01%)</title><rect x="576.3" y="661" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="579.31" y="671.5" ></text>
</g>
<g >
<title>std::locale::locale (14,064,226 samples, 0.02%)</title><rect x="108.4" y="677" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="111.38" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (37,048,153 samples, 0.05%)</title><rect x="460.9" y="613" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="463.94" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (53,072,711 samples, 0.07%)</title><rect x="360.9" y="693" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="363.87" y="703.5" ></text>
</g>
<g >
<title>memcpy@plt (11,007,301 samples, 0.01%)</title><rect x="114.9" y="661" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="117.86" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (888,500,325 samples, 1.11%)</title><rect x="1048.1" y="693" width="13.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1051.09" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,070,003 samples, 0.01%)</title><rect x="14.3" y="373" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="17.31" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (10,772,178 samples, 0.01%)</title><rect x="81.6" y="629" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="84.62" y="639.5" ></text>
</g>
<g >
<title>update_load_avg (10,639,512 samples, 0.01%)</title><rect x="728.4" y="533" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="731.35" y="543.5" ></text>
</g>
<g >
<title>memcpy@plt (13,064,404 samples, 0.02%)</title><rect x="1040.6" y="709" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1043.65" y="719.5" ></text>
</g>
<g >
<title>common_interrupt (9,577,859 samples, 0.01%)</title><rect x="103.3" y="645" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="106.25" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (62,878,438 samples, 0.08%)</title><rect x="1072.4" y="709" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1075.39" y="719.5" ></text>
</g>
<g >
<title>std::setw (25,153,836 samples, 0.03%)</title><rect x="394.2" y="693" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="397.16" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_handler (8,998,180 samples, 0.01%)</title><rect x="17.5" y="517" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="20.50" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (10,441,618 samples, 0.01%)</title><rect x="1009.7" y="581" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1012.65" y="591.5" ></text>
</g>
<g >
<title>std::locale::locale (12,069,285 samples, 0.02%)</title><rect x="107.1" y="645" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="110.12" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::setf (539,348,755 samples, 0.68%)</title><rect x="952.0" y="629" width="8.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="955.03" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (22,923,790 samples, 0.03%)</title><rect x="82.1" y="613" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="85.09" y="623.5" ></text>
</g>
<g >
<title>memcpy@plt (21,103,077 samples, 0.03%)</title><rect x="219.7" y="661" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="222.68" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (9,645,721 samples, 0.01%)</title><rect x="422.6" y="709" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="425.65" y="719.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (26,391,642 samples, 0.03%)</title><rect x="17.2" y="645" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="20.25" y="655.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11,295,230 samples, 0.01%)</title><rect x="1047.1" y="693" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1050.12" y="703.5" ></text>
</g>
<g >
<title>std::operator|= (82,897,645 samples, 0.10%)</title><rect x="966.1" y="613" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="969.13" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (210,970,157 samples, 0.26%)</title><rect x="408.4" y="661" width="3.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="411.37" y="671.5" ></text>
</g>
<g >
<title>__strlen_avx2 (152,840,392 samples, 0.19%)</title><rect x="842.0" y="645" width="2.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="845.00" y="655.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (94,200,200 samples, 0.12%)</title><rect x="337.2" y="693" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="340.15" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,880,509 samples, 0.01%)</title><rect x="692.4" y="597" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="695.39" y="607.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (36,205,455 samples, 0.05%)</title><rect x="70.6" y="645" width="0.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="73.62" y="655.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (163,914,083 samples, 0.21%)</title><rect x="366.4" y="661" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="369.40" y="671.5" ></text>
</g>
<g >
<title>std::locale::~locale (12,139,302 samples, 0.02%)</title><rect x="270.5" y="661" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="273.53" y="671.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (13,078,689 samples, 0.02%)</title><rect x="405.0" y="709" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="407.97" y="719.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (279,107,753 samples, 0.35%)</title><rect x="893.7" y="629" width="4.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="896.69" y="639.5" ></text>
</g>
<g >
<title>rb_erase (9,777,050 samples, 0.01%)</title><rect x="786.0" y="501" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="789.03" y="511.5" ></text>
</g>
<g >
<title>update_process_times (11,830,286 samples, 0.01%)</title><rect x="51.4" y="501" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.44" y="511.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (56,684,671 samples, 0.07%)</title><rect x="922.7" y="645" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="925.67" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (37,052,424 samples, 0.05%)</title><rect x="828.8" y="661" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="831.83" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (94,883,435 samples, 0.12%)</title><rect x="1014.7" y="661" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1017.70" y="671.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,213,152 samples, 0.01%)</title><rect x="168.7" y="677" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="171.72" y="687.5" ></text>
</g>
<g >
<title>timekeeping_advance (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="581" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1090.76" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (13,524,297 samples, 0.02%)</title><rect x="156.8" y="645" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="159.77" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,830,286 samples, 0.01%)</title><rect x="51.4" y="549" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="54.44" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,020,511 samples, 0.01%)</title><rect x="1012.9" y="597" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1015.89" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (47,251,683 samples, 0.06%)</title><rect x="78.9" y="581" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="81.95" y="591.5" ></text>
</g>
<g >
<title>_dl_catch_exception (28,265,752 samples, 0.04%)</title><rect x="15.4" y="469" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.43" y="479.5" ></text>
</g>
<g >
<title>operator new (239,758,815 samples, 0.30%)</title><rect x="1067.7" y="677" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1070.74" y="687.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="453" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.42" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (69,052,126 samples, 0.09%)</title><rect x="245.2" y="597" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="248.25" y="607.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (13,999,860 samples, 0.02%)</title><rect x="1002.5" y="645" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1005.53" y="655.5" ></text>
</g>
<g >
<title>operator new (94,665,999 samples, 0.12%)</title><rect x="216.5" y="645" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="219.51" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,076,852 samples, 0.02%)</title><rect x="586.7" y="629" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="589.71" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,057,515 samples, 0.01%)</title><rect x="731.2" y="709" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="734.22" y="719.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (21,083,422 samples, 0.03%)</title><rect x="730.6" y="693" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="733.60" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (11,038,941 samples, 0.01%)</title><rect x="345.9" y="645" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="348.86" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (111,778,290 samples, 0.14%)</title><rect x="558.3" y="661" width="1.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="561.27" y="671.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (212,147,083 samples, 0.27%)</title><rect x="385.6" y="661" width="3.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="388.64" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,639,512 samples, 0.01%)</title><rect x="728.4" y="629" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="731.35" y="639.5" ></text>
</g>
<g >
<title>handle_pte_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="341" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="16.43" y="351.5" ></text>
</g>
<g >
<title>active_retire (11,744,896 samples, 0.01%)</title><rect x="258.0" y="533" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="260.99" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="709" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1090.76" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (11,057,296 samples, 0.01%)</title><rect x="1002.9" y="645" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1005.91" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (289,582,771 samples, 0.36%)</title><rect x="341.7" y="677" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="344.75" y="687.5" ></text>
</g>
<g >
<title>std::hex (716,487,435 samples, 0.90%)</title><rect x="950.8" y="645" width="10.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="953.80" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (105,533,427 samples, 0.13%)</title><rect x="278.4" y="645" width="1.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="281.42" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,076,852 samples, 0.02%)</title><rect x="586.7" y="597" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="589.71" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (21,773,470 samples, 0.03%)</title><rect x="569.6" y="677" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="572.61" y="687.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (8,869,899 samples, 0.01%)</title><rect x="17.1" y="389" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="20.12" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,020,168 samples, 0.01%)</title><rect x="401.4" y="709" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="404.40" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (66,822,612 samples, 0.08%)</title><rect x="145.9" y="677" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="148.91" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,690,482 samples, 0.01%)</title><rect x="525.7" y="565" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="528.67" y="575.5" ></text>
</g>
<g >
<title>operator new (10,717,356 samples, 0.01%)</title><rect x="398.8" y="677" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="401.85" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (91,259,183 samples, 0.11%)</title><rect x="54.6" y="661" width="1.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="57.64" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (980,886,185 samples, 1.23%)</title><rect x="862.3" y="629" width="14.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="865.35" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="677" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.03" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (11,061,205 samples, 0.01%)</title><rect x="348.7" y="629" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="351.71" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (56,024,143 samples, 0.07%)</title><rect x="728.5" y="693" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="731.51" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::setf (20,902,387 samples, 0.03%)</title><rect x="166.8" y="661" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="169.76" y="671.5" ></text>
</g>
<g >
<title>__GI___clone3 (10,877,638 samples, 0.01%)</title><rect x="10.8" y="821" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.78" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (279,197,753 samples, 0.35%)</title><rect x="213.8" y="661" width="4.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="216.78" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (77,610,460 samples, 0.10%)</title><rect x="88.5" y="613" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="91.47" y="623.5" ></text>
</g>
<g >
<title>i915_ggtt_pin (9,153,767 samples, 0.01%)</title><rect x="13.9" y="293" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="16.91" y="303.5" ></text>
</g>
<g >
<title>__intel_context_do_pin_ww (9,153,767 samples, 0.01%)</title><rect x="13.9" y="309" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.91" y="319.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (20,109,619 samples, 0.03%)</title><rect x="1016.6" y="581" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.61" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (17,761,999 samples, 0.02%)</title><rect x="13.0" y="741" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.03" y="751.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (101,822,816 samples, 0.13%)</title><rect x="98.8" y="693" width="1.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="101.77" y="703.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="597" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="607.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (13,154,162 samples, 0.02%)</title><rect x="205.3" y="677" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="208.27" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="517" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.29" y="527.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="501" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1019.77" y="511.5" ></text>
</g>
<g >
<title>std::ios_base::setf (111,395,062 samples, 0.14%)</title><rect x="167.1" y="645" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="170.07" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="533" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="543.5" ></text>
</g>
<g >
<title>std::locale::locale (34,293,118 samples, 0.04%)</title><rect x="89.1" y="597" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="92.11" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (267,680,516 samples, 0.34%)</title><rect x="519.1" y="613" width="3.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="522.06" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (12,066,669 samples, 0.02%)</title><rect x="349.8" y="645" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="352.85" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (13,038,046 samples, 0.02%)</title><rect x="415.2" y="677" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="418.24" y="687.5" ></text>
</g>
<g >
<title>strlen@plt (23,966,262 samples, 0.03%)</title><rect x="333.5" y="677" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="336.47" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (65,236,592 samples, 0.08%)</title><rect x="449.3" y="645" width="1.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="452.34" y="655.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (27,124,028 samples, 0.03%)</title><rect x="447.5" y="645" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="450.53" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (162,915,419 samples, 0.20%)</title><rect x="68.1" y="645" width="2.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="71.07" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::setf (104,913,964 samples, 0.13%)</title><rect x="390.5" y="661" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="393.52" y="671.5" ></text>
</g>
<g >
<title>PPU::fetchBackgroundTileData (593,874,042 samples, 0.74%)</title><rect x="1003.3" y="677" width="8.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1006.26" y="687.5" ></text>
</g>
<g >
<title>std::locale::~locale (34,157,345 samples, 0.04%)</title><rect x="729.3" y="693" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="732.34" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (23,777,936 samples, 0.03%)</title><rect x="179.2" y="629" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="182.18" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (75,189,965 samples, 0.09%)</title><rect x="66.6" y="629" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="69.62" y="639.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (28,265,752 samples, 0.04%)</title><rect x="15.4" y="245" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="18.43" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (11,061,161 samples, 0.01%)</title><rect x="1002.4" y="613" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1005.36" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (73,884,932 samples, 0.09%)</title><rect x="46.2" y="645" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="49.25" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (33,168,748 samples, 0.04%)</title><rect x="307.3" y="677" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="310.32" y="687.5" ></text>
</g>
<g >
<title>intel_rc6_unpark (10,048,620 samples, 0.01%)</title><rect x="1016.0" y="341" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1018.96" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (120,281,680 samples, 0.15%)</title><rect x="816.9" y="645" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="819.93" y="655.5" ></text>
</g>
<g >
<title>intel_power_well_get (24,084,952 samples, 0.03%)</title><rect x="1015.6" y="293" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1018.60" y="303.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::__resize_and_overwrite&lt;std::__cxx11::to_string (26,709,362 samples, 0.03%)</title><rect x="1179.5" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1182.55" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (109,709,726 samples, 0.14%)</title><rect x="376.8" y="693" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="379.79" y="703.5" ></text>
</g>
<g >
<title>i915_gem_do_execbuffer (9,153,767 samples, 0.01%)</title><rect x="13.9" y="341" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="16.91" y="351.5" ></text>
</g>
<g >
<title>std::locale::locale (76,954,146 samples, 0.10%)</title><rect x="265.5" y="629" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="268.50" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (14,067,559 samples, 0.02%)</title><rect x="352.0" y="661" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="355.00" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,042,071 samples, 0.01%)</title><rect x="994.5" y="661" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="997.49" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (12,062,417 samples, 0.02%)</title><rect x="261.4" y="661" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="264.36" y="671.5" ></text>
</g>
<g >
<title>std::operator|= (13,077,025 samples, 0.02%)</title><rect x="391.7" y="645" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="394.72" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (43,238,999 samples, 0.05%)</title><rect x="721.8" y="693" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="724.79" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (149,508,965 samples, 0.19%)</title><rect x="582.0" y="661" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="584.97" y="671.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (89,134,544 samples, 0.11%)</title><rect x="415.4" y="693" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="418.44" y="703.5" ></text>
</g>
<g >
<title>do_mmap (28,265,752 samples, 0.04%)</title><rect x="15.4" y="293" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="18.43" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (83,273,414 samples, 0.10%)</title><rect x="359.1" y="677" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="362.09" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (12,062,573 samples, 0.02%)</title><rect x="354.8" y="693" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="357.81" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_handler (10,639,512 samples, 0.01%)</title><rect x="728.4" y="597" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="731.35" y="607.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (47,091,022 samples, 0.06%)</title><rect x="403.6" y="709" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="406.59" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (43,315,490 samples, 0.05%)</title><rect x="846.8" y="645" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="849.77" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (46,939,488 samples, 0.06%)</title><rect x="276.1" y="661" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="279.09" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (12,068,649 samples, 0.02%)</title><rect x="41.6" y="661" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="44.61" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (104,896,741 samples, 0.13%)</title><rect x="1074.5" y="725" width="1.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1077.54" y="735.5" ></text>
</g>
<g >
<title>skb_free_head (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="245" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1019.77" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (31,592,788 samples, 0.04%)</title><rect x="805.5" y="645" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="808.50" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (26,043,991 samples, 0.03%)</title><rect x="97.3" y="645" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="100.29" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (381,670,343 samples, 0.48%)</title><rect x="479.3" y="677" width="5.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="482.30" y="687.5" ></text>
</g>
<g >
<title>sysvec_irq_work (11,287,461 samples, 0.01%)</title><rect x="687.4" y="645" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="690.39" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (9,043,135 samples, 0.01%)</title><rect x="235.2" y="693" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="238.15" y="703.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="709" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.03" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (33,814,591 samples, 0.04%)</title><rect x="918.2" y="661" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="921.24" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="709" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.73" y="719.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="485" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (21,118,963 samples, 0.03%)</title><rect x="998.2" y="693" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1001.17" y="703.5" ></text>
</g>
<g >
<title>sched_tick (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="613" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.73" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (36,061,969 samples, 0.05%)</title><rect x="326.9" y="677" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="329.87" y="687.5" ></text>
</g>
<g >
<title>Logger::log (981,139,158 samples, 1.23%)</title><rect x="60.0" y="661" width="14.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="63.02" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="693" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.03" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::setf (24,134,679 samples, 0.03%)</title><rect x="110.9" y="645" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="113.93" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (21,083,322 samples, 0.03%)</title><rect x="414.0" y="693" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="417.02" y="703.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,582,972 samples, 0.01%)</title><rect x="1016.9" y="645" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1019.91" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (66,348,786 samples, 0.08%)</title><rect x="539.1" y="597" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="542.11" y="607.5" ></text>
</g>
<g >
<title>irqentry_exit (10,042,071 samples, 0.01%)</title><rect x="994.5" y="629" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="997.49" y="639.5" ></text>
</g>
<g >
<title>std::operator|= (12,122,644 samples, 0.02%)</title><rect x="204.7" y="645" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="207.72" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="677" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1090.76" y="687.5" ></text>
</g>
<g >
<title>std::locale::~locale (23,125,244 samples, 0.03%)</title><rect x="138.9" y="645" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="141.88" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (14,075,227 samples, 0.02%)</title><rect x="75.3" y="661" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="78.29" y="671.5" ></text>
</g>
<g >
<title>Logger::log (1,273,364,509 samples, 1.59%)</title><rect x="39.6" y="677" width="18.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="42.57" y="687.5" ></text>
</g>
<g >
<title>std::array&lt;std::array&lt;unsigned char, 160ul&gt;, 144ul&gt;::operator[] (12,348,028 samples, 0.02%)</title><rect x="1017.1" y="693" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1020.06" y="703.5" ></text>
</g>
<g >
<title>malloc (259,406,393 samples, 0.32%)</title><rect x="1057.4" y="661" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1060.39" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="693" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1135.97" y="703.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (61,224,705 samples, 0.08%)</title><rect x="414.5" y="693" width="0.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="417.53" y="703.5" ></text>
</g>
<g >
<title>std::hex (21,222,192 samples, 0.03%)</title><rect x="917.9" y="661" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="920.92" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (233,632,257 samples, 0.29%)</title><rect x="124.2" y="645" width="3.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="127.24" y="655.5" ></text>
</g>
<g >
<title>task_tick_fair (8,070,003 samples, 0.01%)</title><rect x="14.3" y="309" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="17.31" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (42,587,064 samples, 0.05%)</title><rect x="74.5" y="661" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="77.52" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="549" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (64,170,949 samples, 0.08%)</title><rect x="827.9" y="661" width="0.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="830.88" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="629" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.12" y="639.5" ></text>
</g>
<g >
<title>PPU::step (10,048,724 samples, 0.01%)</title><rect x="1181.0" y="741" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1184.00" y="751.5" ></text>
</g>
<g >
<title>_XOpenLC (7,555,648 samples, 0.01%)</title><rect x="13.3" y="661" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="16.31" y="671.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (80,397,539 samples, 0.10%)</title><rect x="144.4" y="677" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="147.37" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (22,713,142 samples, 0.03%)</title><rect x="70.0" y="613" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="72.98" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="389" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="16.43" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (23,740,223 samples, 0.03%)</title><rect x="790.3" y="645" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="793.35" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (224,202,315 samples, 0.28%)</title><rect x="342.4" y="645" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="345.35" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (95,245,951 samples, 0.12%)</title><rect x="64.3" y="597" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="67.26" y="607.5" ></text>
</g>
<g >
<title>std::locale::locale (22,374,218 samples, 0.03%)</title><rect x="272.7" y="677" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="275.71" y="687.5" ></text>
</g>
<g >
<title>std::uppercase (12,074,335 samples, 0.02%)</title><rect x="394.5" y="693" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="397.53" y="703.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (444,178,210 samples, 0.56%)</title><rect x="382.6" y="693" width="6.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="385.59" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (87,107,317 samples, 0.11%)</title><rect x="387.5" y="645" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="390.48" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (13,078,579 samples, 0.02%)</title><rect x="1015.0" y="469" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1018.02" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (13,061,830 samples, 0.02%)</title><rect x="80.9" y="629" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="83.94" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (34,301,016 samples, 0.04%)</title><rect x="1065.6" y="693" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1068.55" y="703.5" ></text>
</g>
<g >
<title>dlopen@GLIBC_2.2.5 (28,265,752 samples, 0.04%)</title><rect x="15.4" y="597" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="18.43" y="607.5" ></text>
</g>
<g >
<title>Logger::log (12,112,628 samples, 0.02%)</title><rect x="1001.0" y="645" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1003.97" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (12,070,795 samples, 0.02%)</title><rect x="226.6" y="693" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="229.57" y="703.5" ></text>
</g>
<g >
<title>minishell (79,271,682,980 samples, 99.29%)</title><rect x="18.4" y="757" width="1171.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="21.38" y="767.5" >minishell</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (60,385,503 samples, 0.08%)</title><rect x="518.2" y="613" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="521.16" y="623.5" ></text>
</g>
<g >
<title>std::operator|= (56,632,973 samples, 0.07%)</title><rect x="283.4" y="629" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="286.37" y="639.5" ></text>
</g>
<g >
<title>_XStoreEventCookie (8,493,373 samples, 0.01%)</title><rect x="13.2" y="645" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="16.17" y="655.5" ></text>
</g>
<g >
<title>__GI___clone3 (38,322,734 samples, 0.05%)</title><rect x="17.6" y="405" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.64" y="415.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (14,084,749 samples, 0.02%)</title><rect x="568.3" y="677" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="571.27" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="613" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="623.5" ></text>
</g>
<g >
<title>PPU::getCurrentLY (12,069,773 samples, 0.02%)</title><rect x="734.3" y="725" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="737.31" y="735.5" ></text>
</g>
<g >
<title>_IO_getc (17,393,462 samples, 0.02%)</title><rect x="17.2" y="597" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="20.25" y="607.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (24,156,968 samples, 0.03%)</title><rect x="104.0" y="661" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="106.99" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (38,218,170 samples, 0.05%)</title><rect x="101.9" y="661" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="104.94" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (38,313,800 samples, 0.05%)</title><rect x="17.6" y="373" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.64" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (47,075,016 samples, 0.06%)</title><rect x="808.3" y="629" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="811.31" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (190,446,213 samples, 0.24%)</title><rect x="587.2" y="661" width="2.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="590.23" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (11,058,600 samples, 0.01%)</title><rect x="116.8" y="677" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="119.83" y="687.5" ></text>
</g>
<g >
<title>update_load_avg (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="581" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.73" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (166,931,030 samples, 0.21%)</title><rect x="476.8" y="677" width="2.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="479.83" y="687.5" ></text>
</g>
<g >
<title>std::operator&amp;= (58,247,290 samples, 0.07%)</title><rect x="282.4" y="629" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="285.35" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (2,603,855,323 samples, 3.26%)</title><rect x="356.2" y="709" width="38.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="359.22" y="719.5" >std..</text>
</g>
<g >
<title>program (79,837,018,062 samples, 100.00%)</title><rect x="10.0" y="837" width="1180.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="13.03" y="847.5" >program</text>
</g>
<g >
<title>std::operator&amp; (12,069,485 samples, 0.02%)</title><rect x="201.7" y="629" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="204.73" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (11,055,306 samples, 0.01%)</title><rect x="594.7" y="677" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="597.66" y="687.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (329,970,825 samples, 0.41%)</title><rect x="315.2" y="661" width="4.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="318.18" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (17,929,088 samples, 0.02%)</title><rect x="848.3" y="661" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="851.26" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (57,278,360 samples, 0.07%)</title><rect x="122.0" y="661" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="125.05" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (40,650,085 samples, 0.05%)</title><rect x="954.5" y="613" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="957.48" y="623.5" ></text>
</g>
<g >
<title>Logger::log (32,328,108 samples, 0.04%)</title><rect x="1012.5" y="629" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1015.54" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (12,292,087 samples, 0.02%)</title><rect x="991.7" y="677" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="994.71" y="687.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (11,057,421 samples, 0.01%)</title><rect x="576.3" y="565" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="579.31" y="575.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (9,098,977 samples, 0.01%)</title><rect x="734.2" y="725" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="737.18" y="735.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="517" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1017.70" y="527.5" ></text>
</g>
<g >
<title>sched_tick (10,639,512 samples, 0.01%)</title><rect x="728.4" y="565" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="731.35" y="575.5" ></text>
</g>
<g >
<title>_int_free (23,009,696 samples, 0.03%)</title><rect x="82.7" y="645" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="85.74" y="655.5" ></text>
</g>
<g >
<title>update_cfs_group (11,054,569 samples, 0.01%)</title><rect x="1133.1" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1136.14" y="559.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (44,472,871 samples, 0.06%)</title><rect x="485.9" y="693" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="488.90" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (501,492,160 samples, 0.63%)</title><rect x="218.1" y="677" width="7.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="221.10" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (10,441,618 samples, 0.01%)</title><rect x="1009.7" y="565" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1012.65" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (11,059,381 samples, 0.01%)</title><rect x="246.3" y="613" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="249.27" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (60,187,502 samples, 0.08%)</title><rect x="250.9" y="645" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="253.88" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (862,996,537 samples, 1.08%)</title><rect x="529.6" y="661" width="12.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="532.58" y="671.5" ></text>
</g>
<g >
<title>timekeeping_adjust.constprop.0 (12,068,277 samples, 0.02%)</title><rect x="613.6" y="485" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="616.61" y="495.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 160ul&gt;::operator[] (36,209,689 samples, 0.05%)</title><rect x="1011.5" y="661" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1014.50" y="671.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (9,771,959 samples, 0.01%)</title><rect x="12.9" y="741" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="15.88" y="751.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (13,073,148 samples, 0.02%)</title><rect x="1090.0" y="709" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1092.97" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (13,077,089 samples, 0.02%)</title><rect x="991.9" y="677" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="994.89" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (179,932,921 samples, 0.23%)</title><rect x="467.8" y="677" width="2.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="470.81" y="687.5" ></text>
</g>
<g >
<title>update_wall_time (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="597" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1090.76" y="607.5" ></text>
</g>
<g >
<title>std::locale::~locale (14,083,696 samples, 0.02%)</title><rect x="912.9" y="645" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="915.93" y="655.5" ></text>
</g>
<g >
<title>std::operator&amp;= (22,817,044 samples, 0.03%)</title><rect x="202.4" y="645" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="205.39" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22,706,084 samples, 0.03%)</title><rect x="376.9" y="677" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="379.94" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25,892,412 samples, 0.03%)</title><rect x="357.6" y="677" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="360.64" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (23,117,140 samples, 0.03%)</title><rect x="775.9" y="597" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="778.93" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (25,384,950 samples, 0.03%)</title><rect x="810.8" y="629" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="813.76" y="639.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (12,384,796 samples, 0.02%)</title><rect x="847.4" y="645" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="850.41" y="655.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (408,230,240 samples, 0.51%)</title><rect x="280.0" y="677" width="6.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="282.98" y="687.5" ></text>
</g>
<g >
<title>std::setw (33,040,994 samples, 0.04%)</title><rect x="326.1" y="677" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="329.05" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (13,077,397 samples, 0.02%)</title><rect x="252.5" y="661" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="255.46" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="533" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="543.5" ></text>
</g>
<g >
<title>std::operator&amp; (9,695,486 samples, 0.01%)</title><rect x="165.1" y="613" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="168.06" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (12,061,293 samples, 0.02%)</title><rect x="413.2" y="645" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="416.19" y="655.5" ></text>
</g>
<g >
<title>std::uppercase (22,043,471 samples, 0.03%)</title><rect x="94.5" y="629" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="97.53" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (412,274,507 samples, 0.52%)</title><rect x="559.9" y="661" width="6.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="562.93" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (11,060,036 samples, 0.01%)</title><rect x="376.2" y="661" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="379.16" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,175,991 samples, 0.01%)</title><rect x="970.2" y="645" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="973.17" y="655.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (28,265,752 samples, 0.04%)</title><rect x="15.4" y="309" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="18.43" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (9,984,529 samples, 0.01%)</title><rect x="56.1" y="645" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="59.15" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (9,044,292 samples, 0.01%)</title><rect x="383.7" y="677" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="386.69" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (115,435,423 samples, 0.14%)</title><rect x="347.9" y="645" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="350.86" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (492,715,653 samples, 0.62%)</title><rect x="326.5" y="693" width="7.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="329.54" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,040,279 samples, 0.01%)</title><rect x="1002.0" y="629" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1005.02" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9,777,050 samples, 0.01%)</title><rect x="786.0" y="549" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="789.03" y="559.5" ></text>
</g>
<g >
<title>std::ios_base::setf (113,850,009 samples, 0.14%)</title><rect x="200.7" y="645" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="203.71" y="655.5" ></text>
</g>
<g >
<title>gen9_set_dc_state.part.0 (14,051,657 samples, 0.02%)</title><rect x="1015.6" y="229" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1018.60" y="239.5" ></text>
</g>
<g >
<title>std::hex (11,051,287 samples, 0.01%)</title><rect x="145.6" y="677" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="148.56" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,869,899 samples, 0.01%)</title><rect x="17.1" y="453" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.12" y="463.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="661" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (161,165,562 samples, 0.20%)</title><rect x="175.8" y="645" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="178.84" y="655.5" ></text>
</g>
<g >
<title>std::hex (715,911,447 samples, 0.90%)</title><rect x="687.6" y="661" width="10.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="690.56" y="671.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (72,047,001 samples, 0.09%)</title><rect x="858.2" y="645" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="861.23" y="655.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (8,493,373 samples, 0.01%)</title><rect x="13.2" y="709" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.17" y="719.5" ></text>
</g>
<g >
<title>operator new (154,314,412 samples, 0.19%)</title><rect x="330.3" y="645" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="333.32" y="655.5" ></text>
</g>
<g >
<title>std::locale::locale (31,260,904 samples, 0.04%)</title><rect x="90.2" y="629" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="93.19" y="639.5" ></text>
</g>
<g >
<title>_XimLocalOpenIM (26,391,642 samples, 0.03%)</title><rect x="17.2" y="661" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="20.25" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (13,078,372 samples, 0.02%)</title><rect x="351.1" y="661" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.09" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10,067,009 samples, 0.01%)</title><rect x="109.8" y="629" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="112.78" y="639.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,920,552 samples, 0.01%)</title><rect x="216.1" y="597" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="219.13" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (58,178,002 samples, 0.07%)</title><rect x="788.2" y="613" width="0.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="791.16" y="623.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (11,154,362 samples, 0.01%)</title><rect x="90.5" y="613" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="93.48" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (841,620,522 samples, 1.05%)</title><rect x="174.1" y="677" width="12.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="177.07" y="687.5" ></text>
</g>
<g >
<title>memcpy@plt (21,860,858 samples, 0.03%)</title><rect x="977.5" y="645" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="980.52" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,057,351 samples, 0.01%)</title><rect x="272.4" y="661" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="275.38" y="671.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (9,094,954 samples, 0.01%)</title><rect x="15.2" y="453" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.16" y="463.5" ></text>
</g>
<g >
<title>memcpy@plt (23,157,855 samples, 0.03%)</title><rect x="713.2" y="661" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="716.17" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (74,268,242 samples, 0.09%)</title><rect x="419.2" y="693" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="422.18" y="703.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (43,875,254 samples, 0.05%)</title><rect x="379.7" y="693" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="382.69" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (159,734,082 samples, 0.20%)</title><rect x="1014.7" y="693" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1017.70" y="703.5" ></text>
</g>
<g >
<title>XML_ParseBuffer (8,846,881 samples, 0.01%)</title><rect x="15.3" y="453" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="18.29" y="463.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (125,071,287 samples, 0.16%)</title><rect x="302.5" y="645" width="1.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="305.48" y="655.5" ></text>
</g>
<g >
<title>std::operator| (22,289,691 samples, 0.03%)</title><rect x="168.4" y="613" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="171.39" y="623.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="725" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.73" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9,040,309 samples, 0.01%)</title><rect x="1089.4" y="709" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1092.44" y="719.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (39,519,329 samples, 0.05%)</title><rect x="153.0" y="661" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="155.98" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (26,149,866 samples, 0.03%)</title><rect x="329.1" y="661" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="332.14" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (331,546,198 samples, 0.42%)</title><rect x="13.3" y="693" width="4.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.31" y="703.5" ></text>
</g>
<g >
<title>std::locale::locale (55,339,340 samples, 0.07%)</title><rect x="309.9" y="677" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="312.89" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (52,289,591 samples, 0.07%)</title><rect x="249.4" y="629" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="252.38" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="693" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="703.5" ></text>
</g>
<g >
<title>PPU::isWDEnabled (23,124,200 samples, 0.03%)</title><rect x="1013.0" y="693" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1016.02" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1,140,077,604 samples, 1.43%)</title><rect x="876.8" y="629" width="16.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="879.84" y="639.5" ></text>
</g>
<g >
<title>std::locale::locale (12,067,581 samples, 0.02%)</title><rect x="664.4" y="677" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="667.40" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (17,941,835 samples, 0.02%)</title><rect x="15.2" y="533" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.16" y="543.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (23,124,200 samples, 0.03%)</title><rect x="1013.0" y="661" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1016.02" y="671.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (8,848,411 samples, 0.01%)</title><rect x="325.9" y="677" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="328.92" y="687.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (9,094,954 samples, 0.01%)</title><rect x="15.2" y="501" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.16" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (11,056,655 samples, 0.01%)</title><rect x="277.7" y="645" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="280.69" y="655.5" ></text>
</g>
<g >
<title>irqentry_exit (11,287,461 samples, 0.01%)</title><rect x="687.4" y="629" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="690.39" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (10,031,940 samples, 0.01%)</title><rect x="253.3" y="661" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="256.31" y="671.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (70,771,957 samples, 0.09%)</title><rect x="1073.3" y="709" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1076.32" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,686,358 samples, 0.01%)</title><rect x="309.6" y="661" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="312.57" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11,058,556 samples, 0.01%)</title><rect x="1094.7" y="725" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1097.65" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (299,543,681 samples, 0.38%)</title><rect x="328.2" y="677" width="4.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="331.17" y="687.5" ></text>
</g>
<g >
<title>Log::log (1,356,978,327 samples, 1.70%)</title><rect x="39.2" y="693" width="20.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="42.25" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,254,196,309 samples, 1.57%)</title><rect x="970.7" y="677" width="18.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="973.69" y="687.5" ></text>
</g>
<g >
<title>Memory::fetch8 (43,383,078 samples, 0.05%)</title><rect x="1012.4" y="677" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1015.38" y="687.5" ></text>
</g>
<g >
<title>sched_tick (8,998,180 samples, 0.01%)</title><rect x="17.5" y="485" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="20.50" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (221,289,708 samples, 0.28%)</title><rect x="646.4" y="677" width="3.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="649.36" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (85,892,099 samples, 0.11%)</title><rect x="1014.8" y="533" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1017.84" y="543.5" ></text>
</g>
<g >
<title>mod_timer (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="581" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1020.44" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (939,130,590 samples, 1.18%)</title><rect x="434.0" y="661" width="13.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="437.05" y="671.5" ></text>
</g>
<g >
<title>_XlcCreateLC (7,555,648 samples, 0.01%)</title><rect x="13.3" y="629" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="16.31" y="639.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (28,641,212 samples, 0.04%)</title><rect x="15.4" y="629" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="18.43" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,052,613 samples, 0.01%)</title><rect x="83.7" y="629" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="86.73" y="639.5" ></text>
</g>
<g >
<title>Logger::log (950,071,220 samples, 1.19%)</title><rect x="340.6" y="693" width="14.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="343.58" y="703.5" ></text>
</g>
<g >
<title>__libc_recv (39,249,473 samples, 0.05%)</title><rect x="14.6" y="485" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="17.57" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (10,025,469 samples, 0.01%)</title><rect x="1009.8" y="597" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1012.81" y="607.5" ></text>
</g>
<g >
<title>std::locale::locale (11,058,926 samples, 0.01%)</title><rect x="92.0" y="645" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="94.97" y="655.5" ></text>
</g>
<g >
<title>std::_Setfill&lt;char&gt; std::setfill&lt;char&gt; (9,949,488 samples, 0.01%)</title><rect x="579.9" y="677" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="582.92" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (117,067,625 samples, 0.15%)</title><rect x="181.6" y="613" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="184.63" y="623.5" ></text>
</g>
<g >
<title>Logger::log (11,057,997 samples, 0.01%)</title><rect x="488.6" y="709" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="491.61" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (62,086,907 samples, 0.08%)</title><rect x="410.1" y="645" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="413.06" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (977,016,978 samples, 1.22%)</title><rect x="291.7" y="677" width="14.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="294.69" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (444,028,541 samples, 0.56%)</title><rect x="394.7" y="709" width="6.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="397.71" y="719.5" ></text>
</g>
<g >
<title>PPU::getCurrentLY (13,063,459 samples, 0.02%)</title><rect x="1180.8" y="741" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1183.81" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27,901,775 samples, 0.03%)</title><rect x="328.7" y="661" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="331.73" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (353,456,675 samples, 0.44%)</title><rect x="1066.1" y="693" width="5.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1069.06" y="703.5" ></text>
</g>
<g >
<title>_dlerror_run (85,769,467 samples, 0.11%)</title><rect x="15.8" y="645" width="1.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="18.85" y="655.5" ></text>
</g>
<g >
<title>std::locale::~locale (9,879,761 samples, 0.01%)</title><rect x="995.2" y="677" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="998.18" y="687.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (62,414,714 samples, 0.08%)</title><rect x="1177.2" y="725" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1180.19" y="735.5" ></text>
</g>
<g >
<title>__active_retire (11,744,896 samples, 0.01%)</title><rect x="258.0" y="517" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="260.99" y="527.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (445,793,194 samples, 0.56%)</title><rect x="1017.6" y="725" width="6.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1020.60" y="735.5" ></text>
</g>
<g >
<title>std::locale::operator= (61,315,720 samples, 0.08%)</title><rect x="640.1" y="645" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="643.10" y="655.5" ></text>
</g>
<g >
<title>sched_tick (11,572,782 samples, 0.01%)</title><rect x="653.5" y="549" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="656.49" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (36,162,832 samples, 0.05%)</title><rect x="47.3" y="661" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="50.34" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::setf (313,687,983 samples, 0.39%)</title><rect x="698.9" y="645" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="701.90" y="655.5" ></text>
</g>
<g >
<title>std::operator|= (23,093,536 samples, 0.03%)</title><rect x="285.7" y="645" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="288.67" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (128,490,501 samples, 0.16%)</title><rect x="105.2" y="645" width="1.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="108.22" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (10,052,739 samples, 0.01%)</title><rect x="422.5" y="709" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="425.50" y="719.5" ></text>
</g>
<g >
<title>strlen@plt (40,237,702 samples, 0.05%)</title><rect x="988.6" y="661" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="991.64" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (13,085,526 samples, 0.02%)</title><rect x="59.1" y="677" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="62.11" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (47,947,927 samples, 0.06%)</title><rect x="540.1" y="629" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="543.09" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (10,048,765 samples, 0.01%)</title><rect x="52.2" y="645" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="55.19" y="655.5" ></text>
</g>
<g >
<title>std::setw (13,078,935 samples, 0.02%)</title><rect x="286.0" y="677" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="289.01" y="687.5" ></text>
</g>
<g >
<title>Log::log (1,134,600,267 samples, 1.42%)</title><rect x="236.7" y="677" width="16.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="239.69" y="687.5" ></text>
</g>
<g >
<title>tick_nohz_handler (12,068,277 samples, 0.02%)</title><rect x="613.6" y="549" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="616.61" y="559.5" ></text>
</g>
<g >
<title>std::locale::operator= (171,162,639 samples, 0.21%)</title><rect x="628.8" y="629" width="2.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="631.83" y="639.5" ></text>
</g>
<g >
<title>free@plt (20,247,149 samples, 0.03%)</title><rect x="731.8" y="709" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="734.75" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::setf (19,012,630 samples, 0.02%)</title><rect x="392.4" y="677" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="395.42" y="687.5" ></text>
</g>
<g >
<title>[libLLVM.so.19.1] (9,236,470 samples, 0.01%)</title><rect x="10.9" y="773" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.94" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (217,857,500 samples, 0.27%)</title><rect x="440.6" y="629" width="3.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="443.61" y="639.5" ></text>
</g>
<g >
<title>std::uppercase (184,426,138 samples, 0.23%)</title><rect x="323.2" y="661" width="2.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="326.20" y="671.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="677" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1020.44" y="687.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (338,300,789 samples, 0.42%)</title><rect x="389.2" y="693" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="392.16" y="703.5" ></text>
</g>
<g >
<title>std::locale::operator= (10,375,522 samples, 0.01%)</title><rect x="107.0" y="629" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="109.96" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (64,850,647 samples, 0.08%)</title><rect x="1016.1" y="661" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1019.11" y="671.5" ></text>
</g>
<g >
<title>task_tick_fair (10,639,512 samples, 0.01%)</title><rect x="728.4" y="549" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="731.35" y="559.5" ></text>
</g>
<g >
<title>Memory::fetch8 (23,091,435 samples, 0.03%)</title><rect x="1180.5" y="741" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1183.46" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (12,059,819 samples, 0.02%)</title><rect x="10.0" y="789" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.03" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21,062,319 samples, 0.03%)</title><rect x="287.8" y="661" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="290.82" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (12,069,411 samples, 0.02%)</title><rect x="242.4" y="613" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="245.42" y="623.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (60,366,465 samples, 0.08%)</title><rect x="885.8" y="597" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="888.83" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (13,329,139 samples, 0.02%)</title><rect x="231.6" y="693" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="234.55" y="703.5" ></text>
</g>
<g >
<title>std::locale::operator= (49,250,810 samples, 0.06%)</title><rect x="371.3" y="645" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="374.31" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (9,043,859 samples, 0.01%)</title><rect x="305.3" y="661" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="308.29" y="671.5" ></text>
</g>
<g >
<title>gen8_irq_handler (11,060,742 samples, 0.01%)</title><rect x="673.5" y="549" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="676.49" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,077,830 samples, 0.02%)</title><rect x="137.5" y="581" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="140.49" y="591.5" ></text>
</g>
<g >
<title>create_thread (38,322,734 samples, 0.05%)</title><rect x="17.6" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="20.64" y="431.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (39,040,547 samples, 0.05%)</title><rect x="246.6" y="645" width="0.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="249.59" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (49,219,091 samples, 0.06%)</title><rect x="192.3" y="677" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="195.27" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (33,080,466 samples, 0.04%)</title><rect x="55.5" y="645" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="58.50" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (20,956,718 samples, 0.03%)</title><rect x="343.4" y="629" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.37" y="639.5" ></text>
</g>
<g >
<title>std::hex (138,483,314 samples, 0.17%)</title><rect x="390.4" y="677" width="2.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="393.37" y="687.5" ></text>
</g>
<g >
<title>strlen@plt (12,053,685 samples, 0.02%)</title><rect x="1074.4" y="709" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1077.36" y="719.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="645" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1135.97" y="655.5" ></text>
</g>
<g >
<title>_dl_catch_exception (85,769,467 samples, 0.11%)</title><rect x="15.8" y="533" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.85" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (13,078,188 samples, 0.02%)</title><rect x="1007.1" y="581" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1010.13" y="591.5" ></text>
</g>
<g >
<title>void std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (1,324,621,968 samples, 1.66%)</title><rect x="1155.7" y="677" width="19.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1158.69" y="687.5" ></text>
</g>
<g >
<title>std::ios_base::setf (37,588,621 samples, 0.05%)</title><rect x="93.8" y="613" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="96.82" y="623.5" ></text>
</g>
<g >
<title>malloc (9,020,433 samples, 0.01%)</title><rect x="1056.2" y="677" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1059.21" y="687.5" ></text>
</g>
<g >
<title>Logger::log (13,547,674 samples, 0.02%)</title><rect x="829.7" y="677" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="832.75" y="687.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (90,415,953 samples, 0.11%)</title><rect x="108.6" y="677" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="111.59" y="687.5" ></text>
</g>
<g >
<title>mmap64 (28,265,752 samples, 0.04%)</title><rect x="15.4" y="405" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="18.43" y="415.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 160ul&gt;::operator[] (13,073,079 samples, 0.02%)</title><rect x="1017.2" y="709" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1020.25" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27,983,763 samples, 0.04%)</title><rect x="646.9" y="661" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="649.86" y="671.5" ></text>
</g>
<g >
<title>SDLRenderer::render (262,757,054 samples, 0.33%)</title><rect x="1013.4" y="709" width="3.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1016.36" y="719.5" ></text>
</g>
<g >
<title>std::operator| (11,061,427 samples, 0.01%)</title><rect x="283.2" y="629" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="286.21" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (95,242,292 samples, 0.12%)</title><rect x="399.2" y="677" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="402.21" y="687.5" ></text>
</g>
<g >
<title>[libLLVM.so.19.1] (9,236,470 samples, 0.01%)</title><rect x="10.9" y="741" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.94" y="751.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,070,003 samples, 0.01%)</title><rect x="14.3" y="533" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.31" y="543.5" ></text>
</g>
<g >
<title>__strlen_avx2 (66,786,618 samples, 0.08%)</title><rect x="257.0" y="661" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="260.00" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (32,474,425 samples, 0.04%)</title><rect x="13.4" y="213" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="16.43" y="223.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (8,998,180 samples, 0.01%)</title><rect x="17.5" y="613" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="20.50" y="623.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (33,169,220 samples, 0.04%)</title><rect x="109.4" y="661" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="112.43" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (540,152,378 samples, 0.68%)</title><rect x="793.9" y="613" width="8.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="796.92" y="623.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="485" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1017.70" y="495.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (81,818,131 samples, 0.10%)</title><rect x="87.3" y="613" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="90.27" y="623.5" ></text>
</g>
<g >
<title>update_process_times (8,070,003 samples, 0.01%)</title><rect x="14.3" y="341" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="17.31" y="351.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (10,047,973 samples, 0.01%)</title><rect x="1007.3" y="613" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1010.33" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (2,718,059,494 samples, 3.40%)</title><rect x="286.4" y="693" width="40.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="289.37" y="703.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (107,265,844 samples, 0.13%)</title><rect x="186.5" y="677" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="189.51" y="687.5" ></text>
</g>
<g >
<title>_Xlcmbstowcs (8,998,180 samples, 0.01%)</title><rect x="17.5" y="629" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="20.50" y="639.5" ></text>
</g>
<g >
<title>Logger::log (335,396,418 samples, 0.42%)</title><rect x="77.5" y="645" width="4.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="80.48" y="655.5" ></text>
</g>
<g >
<title>std::operator|= (210,358,524 samples, 0.26%)</title><rect x="693.1" y="629" width="3.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="696.05" y="639.5" ></text>
</g>
<g >
<title>std::locale::locale (22,967,999 samples, 0.03%)</title><rect x="137.7" y="645" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="140.68" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (370,885,864 samples, 0.46%)</title><rect x="680.2" y="645" width="5.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="683.21" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11,558,804 samples, 0.01%)</title><rect x="998.5" y="693" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1001.48" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (11,710,677 samples, 0.01%)</title><rect x="97.8" y="661" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="100.82" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (138,782,381 samples, 0.17%)</title><rect x="68.3" y="629" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.26" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,989,198 samples, 0.01%)</title><rect x="190.1" y="677" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="193.13" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (113,905,573 samples, 0.14%)</title><rect x="470.5" y="677" width="1.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="473.47" y="687.5" ></text>
</g>
<g >
<title>ZSTD_decompress (9,792,003 samples, 0.01%)</title><rect x="18.2" y="501" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="21.24" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (93,230,991 samples, 0.12%)</title><rect x="239.9" y="597" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="242.88" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,920,552 samples, 0.01%)</title><rect x="216.1" y="629" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="219.13" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (43,890,131 samples, 0.05%)</title><rect x="1094.0" y="725" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1097.01" y="735.5" ></text>
</g>
<g >
<title>task_tick_mm_cid (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="405" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1017.70" y="415.5" ></text>
</g>
<g >
<title>operator delete (13,077,071 samples, 0.02%)</title><rect x="732.1" y="709" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="735.05" y="719.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="565" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.77" y="575.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (93,014,343 samples, 0.12%)</title><rect x="14.1" y="597" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.05" y="607.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10,087,423 samples, 0.01%)</title><rect x="10.2" y="789" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="13.20" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (17,956,273 samples, 0.02%)</title><rect x="278.9" y="629" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="281.94" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (24,138,523 samples, 0.03%)</title><rect x="70.8" y="629" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.80" y="639.5" ></text>
</g>
<g >
<title>PPU::step (19,144,328,543 samples, 23.98%)</title><rect x="734.5" y="725" width="282.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="737.49" y="735.5" >PPU::step</text>
</g>
<g >
<title>operator new (319,133,438 samples, 0.40%)</title><rect x="1056.5" y="677" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1059.50" y="687.5" ></text>
</g>
<g >
<title>update_load_avg (8,998,180 samples, 0.01%)</title><rect x="17.5" y="453" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="20.50" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,175,991 samples, 0.01%)</title><rect x="970.2" y="629" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="973.17" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (122,051,535 samples, 0.15%)</title><rect x="14.0" y="661" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="17.04" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (23,080,255 samples, 0.03%)</title><rect x="1012.0" y="677" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1015.04" y="687.5" ></text>
</g>
<g >
<title>std::locale::~locale (44,424,725 samples, 0.06%)</title><rect x="641.0" y="645" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="644.00" y="655.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (8,996,448 samples, 0.01%)</title><rect x="605.7" y="597" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="608.69" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (119,665,176 samples, 0.15%)</title><rect x="1076.5" y="725" width="1.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1079.54" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (74,428,644 samples, 0.09%)</title><rect x="813.2" y="629" width="1.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="816.21" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (13,020,627 samples, 0.02%)</title><rect x="1012.7" y="597" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1015.70" y="607.5" ></text>
</g>
<g >
<title>_int_free (64,270,058 samples, 0.08%)</title><rect x="215.2" y="629" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="218.18" y="639.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (36,281,788 samples, 0.05%)</title><rect x="351.3" y="677" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="354.28" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (12,069,194 samples, 0.02%)</title><rect x="80.8" y="613" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="83.76" y="623.5" ></text>
</g>
<g >
<title>handle_edge_irq (9,720,302 samples, 0.01%)</title><rect x="253.2" y="597" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="256.17" y="607.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (11,744,896 samples, 0.01%)</title><rect x="258.0" y="629" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="260.99" y="639.5" ></text>
</g>
<g >
<title>[libzstd.so.1.5.6] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="485" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.24" y="495.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (9,951,482 samples, 0.01%)</title><rect x="996.8" y="677" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="999.82" y="687.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (14,054,046 samples, 0.02%)</title><rect x="204.9" y="677" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="207.90" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (41,482,669 samples, 0.05%)</title><rect x="72.9" y="629" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="75.94" y="639.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="325" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="335.5" ></text>
</g>
<g >
<title>std::operator|= (9,440,379 samples, 0.01%)</title><rect x="285.5" y="629" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="288.53" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="549" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="559.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (11,044,634 samples, 0.01%)</title><rect x="195.4" y="661" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="198.38" y="671.5" ></text>
</g>
<g >
<title>Logger::log (20,467,087 samples, 0.03%)</title><rect x="1009.7" y="613" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1012.65" y="623.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (763,833,682 samples, 0.96%)</title><rect x="294.0" y="661" width="11.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="297.00" y="671.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="469" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1019.77" y="479.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,322,734 samples, 0.05%)</title><rect x="17.6" y="485" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="495.5" ></text>
</g>
<g >
<title>_IO_fgets (7,555,648 samples, 0.01%)</title><rect x="13.3" y="549" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="16.31" y="559.5" ></text>
</g>
<g >
<title>pthread_create@GLIBC_2.2.5 (38,322,734 samples, 0.05%)</title><rect x="17.6" y="437" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="20.64" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (10,084,719 samples, 0.01%)</title><rect x="268.5" y="661" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="271.47" y="671.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (12,206,378 samples, 0.02%)</title><rect x="89.4" y="581" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="92.44" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (265,240,981 samples, 0.33%)</title><rect x="341.7" y="661" width="4.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="344.75" y="671.5" ></text>
</g>
<g >
<title>main (79,633,786,465 samples, 99.74%)</title><rect x="13.0" y="773" width="1177.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="16.03" y="783.5" >main</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="533" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1017.70" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (122,585,575 samples, 0.15%)</title><rect x="78.0" y="629" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="81.03" y="639.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (13,077,830 samples, 0.02%)</title><rect x="137.5" y="565" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="140.49" y="575.5" ></text>
</g>
<g >
<title>Gameboy::runMcycle (78,509,401,150 samples, 98.34%)</title><rect x="19.6" y="741" width="1160.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="22.59" y="751.5" >Gameboy::runMcycle</text>
</g>
<g >
<title>memcpy@plt (12,063,046 samples, 0.02%)</title><rect x="186.7" y="661" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="189.71" y="671.5" ></text>
</g>
<g >
<title>irq_work_run_list (13,076,852 samples, 0.02%)</title><rect x="586.7" y="549" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="589.71" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (177,717,869 samples, 0.22%)</title><rect x="814.3" y="645" width="2.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="817.31" y="655.5" ></text>
</g>
<g >
<title>std::locale::~locale (45,246,537 samples, 0.06%)</title><rect x="301.8" y="629" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="304.81" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (26,136,984 samples, 0.03%)</title><rect x="63.9" y="597" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="66.87" y="607.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,057,515 samples, 0.01%)</title><rect x="731.2" y="693" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="734.22" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (11,785,788 samples, 0.01%)</title><rect x="345.0" y="613" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="347.99" y="623.5" ></text>
</g>
<g >
<title>_dl_catch_exception (28,265,752 samples, 0.04%)</title><rect x="15.4" y="501" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.43" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (54,447,155 samples, 0.07%)</title><rect x="826.6" y="661" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="829.58" y="671.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="581" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1017.70" y="591.5" ></text>
</g>
<g >
<title>operator delete (23,130,350 samples, 0.03%)</title><rect x="1047.3" y="693" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1050.29" y="703.5" ></text>
</g>
<g >
<title>x64_sys_call (8,869,899 samples, 0.01%)</title><rect x="17.1" y="421" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="20.12" y="431.5" ></text>
</g>
<g >
<title>__strlen_avx2 (40,306,076 samples, 0.05%)</title><rect x="1088.5" y="709" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1091.49" y="719.5" ></text>
</g>
<g >
<title>CPU::getPC (27,212,604 samples, 0.03%)</title><rect x="19.2" y="741" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="22.19" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (174,747,679 samples, 0.22%)</title><rect x="170.4" y="677" width="2.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="173.41" y="687.5" ></text>
</g>
<g >
<title>std::locale::operator= (176,154,893 samples, 0.22%)</title><rect x="889.1" y="613" width="2.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="892.10" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,071,232 samples, 0.02%)</title><rect x="208.0" y="677" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="211.01" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (22,237,225 samples, 0.03%)</title><rect x="725.0" y="693" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="728.05" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (11,920,552 samples, 0.01%)</title><rect x="216.1" y="533" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="219.13" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (25,146,807 samples, 0.03%)</title><rect x="71.9" y="645" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="74.90" y="655.5" ></text>
</g>
<g >
<title>malloc (82,607,194 samples, 0.10%)</title><rect x="216.7" y="629" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="219.69" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (146,567,300 samples, 0.18%)</title><rect x="683.5" y="629" width="2.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="686.52" y="639.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,830,286 samples, 0.01%)</title><rect x="51.4" y="565" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="54.44" y="575.5" ></text>
</g>
<g >
<title>sched_tick (11,830,286 samples, 0.01%)</title><rect x="51.4" y="485" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="54.44" y="495.5" ></text>
</g>
<g >
<title>operator new (11,049,894 samples, 0.01%)</title><rect x="977.8" y="645" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="980.84" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (46,099,103 samples, 0.06%)</title><rect x="95.9" y="629" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="98.89" y="639.5" ></text>
</g>
<g >
<title>Memory::fetch8 (12,499,515 samples, 0.02%)</title><rect x="1003.1" y="677" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1006.08" y="687.5" ></text>
</g>
<g >
<title>Logger::log (1,090,836,159 samples, 1.37%)</title><rect x="406.2" y="709" width="16.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="409.22" y="719.5" ></text>
</g>
<g >
<title>intel_power_well_enable (24,084,952 samples, 0.03%)</title><rect x="1015.6" y="277" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1018.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (86,700,750 samples, 0.11%)</title><rect x="722.4" y="693" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="725.43" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (9,175,991 samples, 0.01%)</title><rect x="970.2" y="581" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="973.17" y="591.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (20,109,619 samples, 0.03%)</title><rect x="1016.6" y="597" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.61" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (25,061,021 samples, 0.03%)</title><rect x="1002.4" y="661" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1005.36" y="671.5" ></text>
</g>
<g >
<title>[unknown] (34,230,408 samples, 0.04%)</title><rect x="10.0" y="805" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="815.5" ></text>
</g>
<g >
<title>std::operator|= (9,016,427 samples, 0.01%)</title><rect x="284.2" y="645" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="287.21" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::setf (182,097,435 samples, 0.23%)</title><rect x="281.5" y="645" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="284.52" y="655.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="469" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.42" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (25,072,099 samples, 0.03%)</title><rect x="72.6" y="629" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="75.57" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,342,174 samples, 0.01%)</title><rect x="186.2" y="645" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="189.19" y="655.5" ></text>
</g>
<g >
<title>_int_free (12,001,961 samples, 0.02%)</title><rect x="1051.2" y="677" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1054.24" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="485" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.29" y="495.5" ></text>
</g>
<g >
<title>update_wall_time (10,690,482 samples, 0.01%)</title><rect x="525.7" y="469" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="528.67" y="479.5" ></text>
</g>
<g >
<title>update_process_times (8,880,509 samples, 0.01%)</title><rect x="692.4" y="517" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="695.39" y="527.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (26,103,106 samples, 0.03%)</title><rect x="360.5" y="677" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="363.49" y="687.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (12,067,780 samples, 0.02%)</title><rect x="704.1" y="677" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="707.14" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (125,511,735 samples, 0.16%)</title><rect x="986.8" y="661" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="989.78" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_handler (11,830,286 samples, 0.01%)</title><rect x="51.4" y="517" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="54.44" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,682,379 samples, 0.01%)</title><rect x="156.6" y="645" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="159.61" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (34,120,461 samples, 0.04%)</title><rect x="306.8" y="661" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="309.82" y="671.5" ></text>
</g>
<g >
<title>__alloc_pages_noprof (9,153,767 samples, 0.01%)</title><rect x="13.9" y="69" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="16.91" y="79.5" ></text>
</g>
<g >
<title>std::operator~ (9,047,948 samples, 0.01%)</title><rect x="323.1" y="645" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="326.06" y="655.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (10,050,654 samples, 0.01%)</title><rect x="172.7" y="661" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="175.66" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (56,401,380 samples, 0.07%)</title><rect x="678.5" y="645" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="681.51" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (25,232,428 samples, 0.03%)</title><rect x="622.8" y="613" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="625.81" y="623.5" ></text>
</g>
<g >
<title>std::locale::locale (78,906,618 samples, 0.10%)</title><rect x="105.8" y="629" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="108.80" y="639.5" ></text>
</g>
<g >
<title>sched_tick (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="581" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1135.97" y="591.5" ></text>
</g>
<g >
<title>std::locale::operator= (13,069,702 samples, 0.02%)</title><rect x="268.1" y="645" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="271.13" y="655.5" ></text>
</g>
<g >
<title>std::operator| (55,047,573 samples, 0.07%)</title><rect x="702.7" y="613" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="705.72" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (17,946,832 samples, 0.02%)</title><rect x="225.6" y="677" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="228.65" y="687.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2,865,329,518 samples, 3.59%)</title><rect x="859.3" y="645" width="42.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="862.29" y="655.5" >std..</text>
</g>
<g >
<title>list_add_event (38,313,800 samples, 0.05%)</title><rect x="17.6" y="213" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="20.64" y="223.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (691,785,443 samples, 0.87%)</title><rect x="365.2" y="677" width="10.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="368.19" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26,108,527 samples, 0.03%)</title><rect x="277.9" y="645" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="280.85" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (100,510,327 samples, 0.13%)</title><rect x="343.7" y="629" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="346.68" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_handler (13,076,852 samples, 0.02%)</title><rect x="586.7" y="581" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="589.71" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (51,266,652 samples, 0.06%)</title><rect x="212.4" y="661" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="215.45" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (13,077,048 samples, 0.02%)</title><rect x="68.7" y="597" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="71.73" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (50,141,064 samples, 0.06%)</title><rect x="789.6" y="645" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="792.61" y="655.5" ></text>
</g>
<g >
<title>std::operator|= (161,087,695 samples, 0.20%)</title><rect x="701.2" y="629" width="2.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="704.15" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (12,069,985 samples, 0.02%)</title><rect x="309.0" y="677" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="312.05" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (12,069,251 samples, 0.02%)</title><rect x="305.9" y="645" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="308.95" y="655.5" ></text>
</g>
<g >
<title>Log::operator&lt;&lt; (1,146,532,089 samples, 1.44%)</title><rect x="236.7" y="693" width="16.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="239.69" y="703.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,070,003 samples, 0.01%)</title><rect x="14.3" y="389" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="17.31" y="399.5" ></text>
</g>
<g >
<title>__calc_delta.constprop.0 (8,070,003 samples, 0.01%)</title><rect x="14.3" y="277" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="17.31" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (14,016,519 samples, 0.02%)</title><rect x="58.8" y="677" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="61.75" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (22,119,332 samples, 0.03%)</title><rect x="75.5" y="661" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="78.49" y="671.5" ></text>
</g>
<g >
<title>std::operator|= (10,051,072 samples, 0.01%)</title><rect x="960.5" y="629" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="963.48" y="639.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (343,092,771 samples, 0.43%)</title><rect x="199.8" y="677" width="5.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.83" y="687.5" ></text>
</g>
<g >
<title>memcpy@plt (12,070,561 samples, 0.02%)</title><rect x="358.9" y="677" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="361.92" y="687.5" ></text>
</g>
<g >
<title>update_process_times (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="597" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1135.97" y="607.5" ></text>
</g>
<g >
<title>std::locale::locale (94,148,911 samples, 0.12%)</title><rect x="139.4" y="661" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="142.39" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,040,288 samples, 0.01%)</title><rect x="306.7" y="661" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="309.67" y="671.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (10,261,407 samples, 0.01%)</title><rect x="311.1" y="677" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="314.05" y="687.5" ></text>
</g>
<g >
<title>_int_free_maybe_consolidate (9,268,626 samples, 0.01%)</title><rect x="13.0" y="565" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="16.03" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (44,811,087 samples, 0.06%)</title><rect x="525.2" y="597" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="528.17" y="607.5" ></text>
</g>
<g >
<title>std::operator| (11,050,755 samples, 0.01%)</title><rect x="94.7" y="581" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.69" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,394,345,939 samples, 1.75%)</title><rect x="205.5" y="693" width="20.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="208.47" y="703.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,057,421 samples, 0.01%)</title><rect x="576.3" y="677" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="579.31" y="687.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (349,174,610 samples, 0.44%)</title><rect x="384.0" y="677" width="5.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="387.00" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (114,334,603 samples, 0.14%)</title><rect x="401.6" y="709" width="1.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="404.55" y="719.5" ></text>
</g>
<g >
<title>clockevents_program_event (11,920,552 samples, 0.01%)</title><rect x="216.1" y="549" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="219.13" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="421" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="16.43" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (9,777,050 samples, 0.01%)</title><rect x="786.0" y="533" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="789.03" y="543.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="597" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1017.70" y="607.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,878,733 samples, 0.01%)</title><rect x="17.1" y="517" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.12" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (14,036,270 samples, 0.02%)</title><rect x="361.7" y="693" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="364.66" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (24,035,452 samples, 0.03%)</title><rect x="723.7" y="693" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="726.71" y="703.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (9,577,859 samples, 0.01%)</title><rect x="103.3" y="597" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="106.25" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,880,509 samples, 0.01%)</title><rect x="692.4" y="549" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="695.39" y="559.5" ></text>
</g>
<g >
<title>irq_work_run (11,744,896 samples, 0.01%)</title><rect x="258.0" y="613" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="260.99" y="623.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (126,957,963 samples, 0.16%)</title><rect x="548.2" y="661" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="551.18" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,690,482 samples, 0.01%)</title><rect x="525.7" y="581" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="528.67" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,070,003 samples, 0.01%)</title><rect x="14.3" y="405" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="17.31" y="415.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (9,175,991 samples, 0.01%)</title><rect x="970.2" y="485" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="973.17" y="495.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="517" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1019.77" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;signed char&gt; (722,897,077 samples, 0.91%)</title><rect x="100.6" y="693" width="10.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="103.61" y="703.5" ></text>
</g>
<g >
<title>std::locale::operator= (30,409,984 samples, 0.04%)</title><rect x="301.4" y="629" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="304.36" y="639.5" ></text>
</g>
<g >
<title>memcpy@plt (37,990,771 samples, 0.05%)</title><rect x="907.4" y="645" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="910.37" y="655.5" ></text>
</g>
<g >
<title>dlopen_doit (85,769,467 samples, 0.11%)</title><rect x="15.8" y="597" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="18.85" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (760,612,262 samples, 0.95%)</title><rect x="580.1" y="677" width="11.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="583.07" y="687.5" ></text>
</g>
<g >
<title>strlen@plt (45,158,239 samples, 0.06%)</title><rect x="847.6" y="645" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="850.59" y="655.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (188,961,233 samples, 0.24%)</title><rect x="277.2" y="661" width="2.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="280.19" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="645" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.03" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (53,225,739 samples, 0.07%)</title><rect x="115.2" y="661" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="118.20" y="671.5" ></text>
</g>
<g >
<title>_dl_map_object (28,265,752 samples, 0.04%)</title><rect x="15.4" y="437" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="18.43" y="447.5" ></text>
</g>
<g >
<title>std::locale::~locale (23,124,211 samples, 0.03%)</title><rect x="310.7" y="677" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="313.71" y="687.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (367,739,789 samples, 0.46%)</title><rect x="571.0" y="693" width="5.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="574.04" y="703.5" ></text>
</g>
<g >
<title>std::operator| (23,589,089 samples, 0.03%)</title><rect x="325.4" y="613" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="328.41" y="623.5" ></text>
</g>
<g >
<title>XCloseDisplay (8,493,373 samples, 0.01%)</title><rect x="13.2" y="677" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="16.17" y="687.5" ></text>
</g>
<g >
<title>_dl_catch_exception (85,769,467 samples, 0.11%)</title><rect x="15.8" y="565" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.85" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (96,714,148 samples, 0.12%)</title><rect x="78.2" y="613" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="81.22" y="623.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (146,647,322 samples, 0.18%)</title><rect x="317.8" y="645" width="2.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="320.75" y="655.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="613" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1017.70" y="623.5" ></text>
</g>
<g >
<title>openaux (122,501,937 samples, 0.15%)</title><rect x="11.1" y="725" width="1.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="14.07" y="735.5" ></text>
</g>
<g >
<title>__sys_recvfrom (39,249,473 samples, 0.05%)</title><rect x="14.6" y="405" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="17.57" y="415.5" ></text>
</g>
<g >
<title>Log::log (4,292,981,748 samples, 5.38%)</title><rect x="425.2" y="709" width="63.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="428.16" y="719.5" >Log::log</text>
</g>
<g >
<title>std::ios_base::~ios_base (21,744,050 samples, 0.03%)</title><rect x="309.6" y="677" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="312.57" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (107,789,218 samples, 0.14%)</title><rect x="882.1" y="613" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="885.12" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (95,394,503 samples, 0.12%)</title><rect x="334.8" y="693" width="1.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="337.81" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (121,819,851 samples, 0.15%)</title><rect x="783.3" y="581" width="1.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="786.30" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (639,895,235 samples, 0.80%)</title><rect x="1061.8" y="709" width="9.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1064.82" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (63,344,907 samples, 0.08%)</title><rect x="848.5" y="661" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="851.52" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (25,143,332 samples, 0.03%)</title><rect x="901.6" y="645" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="904.64" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (13,076,233 samples, 0.02%)</title><rect x="328.0" y="677" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="330.98" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,322,734 samples, 0.05%)</title><rect x="17.6" y="469" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="479.5" ></text>
</g>
<g >
<title>PPU::checkSTATInterrupts (91,424,620 samples, 0.11%)</title><rect x="1001.7" y="709" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1004.73" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (917,807,187 samples, 1.15%)</title><rect x="513.4" y="645" width="13.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="516.44" y="655.5" ></text>
</g>
<g >
<title>llvm::xxh3_64bits (9,236,470 samples, 0.01%)</title><rect x="10.9" y="725" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.94" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (89,583,764 samples, 0.11%)</title><rect x="83.6" y="645" width="1.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="86.58" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (33,668,720 samples, 0.04%)</title><rect x="226.1" y="693" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="229.08" y="703.5" ></text>
</g>
<g >
<title>std::_Setfill&lt;char&gt; std::setfill&lt;char&gt; (36,081,902 samples, 0.05%)</title><rect x="838.6" y="661" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="841.59" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="709" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1020.44" y="719.5" ></text>
</g>
<g >
<title>malloc (35,238,788 samples, 0.04%)</title><rect x="400.1" y="645" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="403.10" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (36,215,672 samples, 0.05%)</title><rect x="314.6" y="661" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="317.65" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (9,043,135 samples, 0.01%)</title><rect x="235.2" y="661" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="238.15" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (68,507,970 samples, 0.09%)</title><rect x="713.7" y="661" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="716.72" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31,209,742 samples, 0.04%)</title><rect x="117.0" y="677" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="119.99" y="687.5" ></text>
</g>
<g >
<title>operator new (20,124,887 samples, 0.03%)</title><rect x="220.0" y="661" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="222.99" y="671.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,070,003 samples, 0.01%)</title><rect x="14.3" y="485" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="17.31" y="495.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (24,137,294 samples, 0.03%)</title><rect x="370.6" y="629" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="373.60" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="693" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1090.76" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (12,742,880 samples, 0.02%)</title><rect x="487.2" y="693" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="490.24" y="703.5" ></text>
</g>
<g >
<title>Logger::log (4,359,808,212 samples, 5.46%)</title><rect x="761.6" y="661" width="64.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="764.61" y="671.5" >Logger:..</text>
</g>
<g >
<title>std::operator~ (51,558,711 samples, 0.06%)</title><rect x="960.6" y="629" width="0.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="963.63" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="405" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="16.43" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (11,057,108 samples, 0.01%)</title><rect x="918.7" y="661" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="921.74" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (11,039,081 samples, 0.01%)</title><rect x="192.8" y="661" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="195.83" y="671.5" ></text>
</g>
<g >
<title>std::uppercase (11,061,362 samples, 0.01%)</title><rect x="286.2" y="677" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="289.20" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (32,086,539 samples, 0.04%)</title><rect x="413.4" y="645" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="416.37" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (8,858,865 samples, 0.01%)</title><rect x="443.8" y="629" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="446.83" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (76,618,271 samples, 0.10%)</title><rect x="377.3" y="677" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="380.28" y="687.5" ></text>
</g>
<g >
<title>_dl_catch_exception (28,265,752 samples, 0.04%)</title><rect x="15.4" y="549" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.43" y="559.5" ></text>
</g>
<g >
<title>std::locale::locale (31,379,595 samples, 0.04%)</title><rect x="186.0" y="661" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="189.04" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (156,539,554 samples, 0.20%)</title><rect x="844.5" y="645" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="847.45" y="655.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="373" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="383.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="565" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (32,120,870 samples, 0.04%)</title><rect x="463.1" y="645" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="466.06" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (49,099,363 samples, 0.06%)</title><rect x="549.3" y="645" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="552.33" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (180,818,290 samples, 0.23%)</title><rect x="592.0" y="677" width="2.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="594.99" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,572,782 samples, 0.01%)</title><rect x="653.5" y="597" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="656.49" y="607.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (8,695,825 samples, 0.01%)</title><rect x="14.3" y="565" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.31" y="575.5" ></text>
</g>
<g >
<title>task_tick_fair (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="597" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.73" y="607.5" ></text>
</g>
<g >
<title>_dl_catch_exception (122,501,937 samples, 0.15%)</title><rect x="11.1" y="741" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.07" y="751.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,690,482 samples, 0.01%)</title><rect x="525.7" y="533" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="528.67" y="543.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (538,865,396 samples, 0.67%)</title><rect x="605.8" y="645" width="8.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="608.82" y="655.5" ></text>
</g>
<g >
<title>__strlen_avx2 (321,013,650 samples, 0.40%)</title><rect x="1035.9" y="709" width="4.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1038.90" y="719.5" ></text>
</g>
<g >
<title>gen9_dc_off_power_well_enable (24,084,952 samples, 0.03%)</title><rect x="1015.6" y="261" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1018.60" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="629" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.07" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (37,175,096 samples, 0.05%)</title><rect x="464.9" y="677" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="467.95" y="687.5" ></text>
</g>
<g >
<title>Log::log (1,117,639,201 samples, 1.40%)</title><rect x="59.3" y="677" width="16.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="62.30" y="687.5" ></text>
</g>
<g >
<title>std::hex (9,079,121 samples, 0.01%)</title><rect x="308.7" y="677" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="311.71" y="687.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (14,052,524 samples, 0.02%)</title><rect x="307.8" y="677" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="310.81" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (11,060,562 samples, 0.01%)</title><rect x="360.3" y="677" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="363.33" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (51,228,730 samples, 0.06%)</title><rect x="485.1" y="693" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="488.15" y="703.5" ></text>
</g>
<g >
<title>std::operator| (22,336,993 samples, 0.03%)</title><rect x="165.2" y="629" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="168.21" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (25,704,141 samples, 0.03%)</title><rect x="195.0" y="661" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="198.00" y="671.5" ></text>
</g>
<g >
<title>__strlen_avx2 (33,148,879 samples, 0.04%)</title><rect x="114.4" y="661" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="117.37" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (12,067,729 samples, 0.02%)</title><rect x="945.5" y="613" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="948.55" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (40,751,677 samples, 0.05%)</title><rect x="1061.2" y="709" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1064.22" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (52,377,553 samples, 0.07%)</title><rect x="279.2" y="629" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="282.20" y="639.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (39,757,757 samples, 0.05%)</title><rect x="14.6" y="533" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="17.57" y="543.5" ></text>
</g>
<g >
<title>std::operator~ (22,427,797 samples, 0.03%)</title><rect x="166.4" y="645" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="169.43" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (25,807,222 samples, 0.03%)</title><rect x="769.2" y="645" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="772.20" y="655.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (13,993,336 samples, 0.02%)</title><rect x="526.8" y="629" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="529.80" y="639.5" ></text>
</g>
<g >
<title>std::locale::operator= (84,091,208 samples, 0.11%)</title><rect x="898.8" y="629" width="1.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="901.75" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (254,162,266 samples, 0.32%)</title><rect x="481.2" y="661" width="3.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="484.18" y="671.5" ></text>
</g>
<g >
<title>fwtable_read32 (14,051,657 samples, 0.02%)</title><rect x="1015.6" y="213" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1018.60" y="223.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (173,646,494 samples, 0.22%)</title><rect x="655.4" y="677" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="658.37" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (10,050,323 samples, 0.01%)</title><rect x="1011.4" y="661" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1014.36" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="597" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="607.5" ></text>
</g>
<g >
<title>irq_work_single (11,744,896 samples, 0.01%)</title><rect x="258.0" y="581" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="260.99" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (11,058,860 samples, 0.01%)</title><rect x="81.1" y="629" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="84.13" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (153,719,503 samples, 0.19%)</title><rect x="132.4" y="613" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="135.44" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (116,069,239 samples, 0.15%)</title><rect x="68.3" y="613" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="71.26" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (61,881,935 samples, 0.08%)</title><rect x="288.8" y="661" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="291.78" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,690,482 samples, 0.01%)</title><rect x="525.7" y="549" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="528.67" y="559.5" ></text>
</g>
<g >
<title>filemap_map_pages (122,501,937 samples, 0.15%)</title><rect x="11.1" y="549" width="1.8" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="14.07" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13,986,804 samples, 0.02%)</title><rect x="1011.1" y="661" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1014.15" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="693" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1191.73" y="703.5" ></text>
</g>
<g >
<title>__mmap (8,869,899 samples, 0.01%)</title><rect x="17.1" y="469" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="20.12" y="479.5" ></text>
</g>
<g >
<title>__get_user_8 (9,577,859 samples, 0.01%)</title><rect x="103.3" y="565" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="106.25" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (103,606,828 samples, 0.13%)</title><rect x="540.8" y="645" width="1.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="543.80" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (259,032,470 samples, 0.32%)</title><rect x="103.6" y="677" width="3.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="106.60" y="687.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (27,152,997 samples, 0.03%)</title><rect x="948.6" y="629" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="951.57" y="639.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (39,249,473 samples, 0.05%)</title><rect x="14.6" y="373" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="17.57" y="383.5" ></text>
</g>
<g >
<title>llvm::cl::Option::addArgument (9,236,470 samples, 0.01%)</title><rect x="10.9" y="757" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.94" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (67,143,187 samples, 0.08%)</title><rect x="1046.1" y="693" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1049.13" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (24,134,703 samples, 0.03%)</title><rect x="411.8" y="661" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="414.82" y="671.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,639,512 samples, 0.01%)</title><rect x="728.4" y="613" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="731.35" y="623.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,880,509 samples, 0.01%)</title><rect x="692.4" y="581" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="695.39" y="591.5" ></text>
</g>
<g >
<title>vm_area_dup (28,265,752 samples, 0.04%)</title><rect x="15.4" y="213" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="18.43" y="223.5" ></text>
</g>
<g >
<title>XSetLocaleModifiers (7,555,648 samples, 0.01%)</title><rect x="13.3" y="677" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="16.31" y="687.5" ></text>
</g>
<g >
<title>std::locale::~locale (8,996,866 samples, 0.01%)</title><rect x="190.0" y="661" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="192.99" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (170,554,047 samples, 0.21%)</title><rect x="932.1" y="645" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="935.08" y="655.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (71,878,710 samples, 0.09%)</title><rect x="184.5" y="645" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="187.48" y="655.5" ></text>
</g>
<g >
<title>dlopen_doit (28,265,752 samples, 0.04%)</title><rect x="15.4" y="533" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="18.43" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (25,148,365 samples, 0.03%)</title><rect x="528.6" y="661" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="531.60" y="671.5" ></text>
</g>
<g >
<title>std::locale::~locale (48,577,134 samples, 0.06%)</title><rect x="664.6" y="677" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="667.58" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (66,256,919 samples, 0.08%)</title><rect x="724.1" y="693" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="727.07" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (19,099,349 samples, 0.02%)</title><rect x="334.4" y="693" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="337.35" y="703.5" ></text>
</g>
<g >
<title>rps_timer (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="597" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1020.44" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_handler (10,690,482 samples, 0.01%)</title><rect x="525.7" y="501" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="528.67" y="511.5" ></text>
</g>
<g >
<title>std::operator&amp; (11,060,127 samples, 0.01%)</title><rect x="110.1" y="629" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="113.07" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (14,054,032 samples, 0.02%)</title><rect x="103.4" y="677" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="106.39" y="687.5" ></text>
</g>
<g >
<title>dma_resv_add_fence (13,080,954 samples, 0.02%)</title><rect x="1015.4" y="341" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1018.41" y="351.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (122,436,365 samples, 0.15%)</title><rect x="214.5" y="645" width="1.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="217.50" y="655.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (34,082,261 samples, 0.04%)</title><rect x="411.0" y="645" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="413.98" y="655.5" ></text>
</g>
<g >
<title>x64_sys_call (9,153,767 samples, 0.01%)</title><rect x="13.9" y="421" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="16.91" y="431.5" ></text>
</g>
<g >
<title>std::operator| (12,069,639 samples, 0.02%)</title><rect x="701.0" y="629" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="703.98" y="639.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="341" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (32,474,425 samples, 0.04%)</title><rect x="13.4" y="229" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="16.43" y="239.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (159,734,082 samples, 0.20%)</title><rect x="1014.7" y="677" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1017.70" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39,249,473 samples, 0.05%)</title><rect x="14.6" y="469" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.57" y="479.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (122,501,937 samples, 0.15%)</title><rect x="11.1" y="693" width="1.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="14.07" y="703.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="613" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1090.76" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (71,593,385 samples, 0.09%)</title><rect x="840.9" y="645" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="843.94" y="655.5" ></text>
</g>
<g >
<title>handle_edge_irq (11,060,742 samples, 0.01%)</title><rect x="673.5" y="597" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="676.49" y="607.5" ></text>
</g>
<g >
<title>std::uppercase (98,477,437 samples, 0.12%)</title><rect x="392.7" y="677" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="395.70" y="687.5" ></text>
</g>
<g >
<title>Log::operator&lt;&lt; (1,117,639,201 samples, 1.40%)</title><rect x="59.3" y="693" width="16.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="62.30" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (23,430,627 samples, 0.03%)</title><rect x="338.5" y="693" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="341.54" y="703.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (21,111,220 samples, 0.03%)</title><rect x="290.4" y="661" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="293.36" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,076,852 samples, 0.02%)</title><rect x="586.7" y="613" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="589.71" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (11,058,204 samples, 0.01%)</title><rect x="1013.0" y="645" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1016.02" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (550,023,541 samples, 0.69%)</title><rect x="978.7" y="645" width="8.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="981.65" y="655.5" ></text>
</g>
<g >
<title>std::operator| (13,077,351 samples, 0.02%)</title><rect x="111.1" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="114.10" y="623.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,068,277 samples, 0.02%)</title><rect x="613.6" y="597" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="616.61" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (52,407,183 samples, 0.07%)</title><rect x="80.0" y="613" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="82.99" y="623.5" ></text>
</g>
<g >
<title>std::ios_base::setf (22,043,471 samples, 0.03%)</title><rect x="94.5" y="613" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="97.53" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (287,586,268 samples, 0.36%)</title><rect x="797.7" y="597" width="4.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="800.65" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (21,116,485 samples, 0.03%)</title><rect x="49.1" y="613" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="52.09" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (70,282,260 samples, 0.09%)</title><rect x="733.1" y="709" width="1.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="736.14" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (45,820,752 samples, 0.06%)</title><rect x="591.3" y="677" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="594.31" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (23,127,129 samples, 0.03%)</title><rect x="251.8" y="661" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="254.77" y="671.5" ></text>
</g>
<g >
<title>std::locale::locale (26,154,341 samples, 0.03%)</title><rect x="148.7" y="677" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="151.74" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (22,083,006 samples, 0.03%)</title><rect x="90.8" y="629" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="93.78" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12,069,510 samples, 0.02%)</title><rect x="230.8" y="693" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="233.83" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (13,155,027 samples, 0.02%)</title><rect x="346.5" y="677" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="349.53" y="687.5" ></text>
</g>
<g >
<title>asm_common_interrupt (9,577,859 samples, 0.01%)</title><rect x="103.3" y="661" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="106.25" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (31,077,623 samples, 0.04%)</title><rect x="385.2" y="661" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="388.18" y="671.5" ></text>
</g>
<g >
<title>malloc_consolidate (9,268,626 samples, 0.01%)</title><rect x="13.0" y="549" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="16.03" y="559.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="709" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (11,975,505 samples, 0.01%)</title><rect x="334.6" y="693" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="337.63" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (122,319,471 samples, 0.15%)</title><rect x="159.6" y="629" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="162.63" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (25,130,838 samples, 0.03%)</title><rect x="185.7" y="661" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="188.67" y="671.5" ></text>
</g>
<g >
<title>update_process_times (10,639,512 samples, 0.01%)</title><rect x="728.4" y="581" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="731.35" y="591.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (8,996,448 samples, 0.01%)</title><rect x="605.7" y="629" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="608.69" y="639.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="309" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1019.77" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (649,991,779 samples, 0.81%)</title><rect x="436.6" y="645" width="9.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="439.57" y="655.5" ></text>
</g>
<g >
<title>std::operator| (47,516,914 samples, 0.06%)</title><rect x="204.0" y="613" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="207.02" y="623.5" ></text>
</g>
<g >
<title>operator delete (23,128,110 samples, 0.03%)</title><rect x="1024.2" y="725" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1027.19" y="735.5" ></text>
</g>
<g >
<title>_XReply (39,757,757 samples, 0.05%)</title><rect x="14.6" y="565" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="17.57" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (53,957,176 samples, 0.07%)</title><rect x="682.7" y="629" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="685.72" y="639.5" ></text>
</g>
<g >
<title>std::operator&amp; (22,118,839 samples, 0.03%)</title><rect x="960.0" y="629" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="963.00" y="639.5" ></text>
</g>
<g >
<title>std::locale::~locale (9,044,480 samples, 0.01%)</title><rect x="184.3" y="629" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="187.34" y="639.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (38,135,152 samples, 0.05%)</title><rect x="968.4" y="661" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="971.37" y="671.5" ></text>
</g>
<g >
<title>Log::log (1,206,160,126 samples, 1.51%)</title><rect x="405.2" y="725" width="17.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="408.16" y="735.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::to_string (74,760,893 samples, 0.09%)</title><rect x="1175.3" y="693" width="1.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="1178.27" y="703.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,087,423 samples, 0.01%)</title><rect x="10.2" y="773" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.20" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (130,393,389 samples, 0.16%)</title><rect x="711.2" y="661" width="2.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="714.24" y="671.5" ></text>
</g>
<g >
<title>std::locale::locale (12,070,208 samples, 0.02%)</title><rect x="304.3" y="645" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="307.33" y="655.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (23,213,159 samples, 0.03%)</title><rect x="338.9" y="693" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="341.89" y="703.5" ></text>
</g>
<g >
<title>x64_sys_call (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="405" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1019.77" y="415.5" ></text>
</g>
<g >
<title>perf_event_init_task (38,313,800 samples, 0.05%)</title><rect x="17.6" y="277" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="20.64" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (304,574,865 samples, 0.38%)</title><rect x="298.0" y="645" width="4.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="300.98" y="655.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="421" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,572,782 samples, 0.01%)</title><rect x="653.5" y="613" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="656.49" y="623.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (93,014,343 samples, 0.12%)</title><rect x="14.1" y="629" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.05" y="639.5" ></text>
</g>
<g >
<title>std::operator|= (23,549,439 samples, 0.03%)</title><rect x="392.1" y="661" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="395.07" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (24,341,790 samples, 0.03%)</title><rect x="345.7" y="661" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="348.67" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (1,106,498,047 samples, 1.39%)</title><rect x="512.2" y="661" width="16.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="515.25" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (13,020,627 samples, 0.02%)</title><rect x="1012.7" y="613" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1015.70" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (274,617,656 samples, 0.34%)</title><rect x="238.5" y="645" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="241.54" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (86,488,698 samples, 0.11%)</title><rect x="378.4" y="693" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="381.41" y="703.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="469" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1017.70" y="479.5" ></text>
</g>
<g >
<title>memcpy@plt (21,940,730 samples, 0.03%)</title><rect x="586.9" y="661" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="589.90" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38,313,800 samples, 0.05%)</title><rect x="17.6" y="389" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.64" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (203,705,905 samples, 0.26%)</title><rect x="48.6" y="645" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.60" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (10,101,562 samples, 0.01%)</title><rect x="658.2" y="677" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="661.23" y="687.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (42,101,776 samples, 0.05%)</title><rect x="13.4" y="645" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="16.42" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (48,234,106 samples, 0.06%)</title><rect x="381.9" y="693" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="384.88" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (218,138,357 samples, 0.27%)</title><rect x="905.9" y="661" width="3.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="908.90" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (423,490,434 samples, 0.53%)</title><rect x="178.2" y="645" width="6.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="181.22" y="655.5" ></text>
</g>
<g >
<title>std::operator&amp;= (37,237,822 samples, 0.05%)</title><rect x="391.2" y="645" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="394.17" y="655.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (324,220,740 samples, 0.41%)</title><rect x="1051.4" y="677" width="4.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1054.42" y="687.5" ></text>
</g>
<g >
<title>gen9_disable_dc_states (14,051,657 samples, 0.02%)</title><rect x="1015.6" y="245" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1018.60" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (259,090,984 samples, 0.32%)</title><rect x="536.3" y="613" width="3.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="539.26" y="623.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (12,127,555 samples, 0.02%)</title><rect x="272.5" y="661" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="275.53" y="671.5" ></text>
</g>
<g >
<title>__GI___ioctl (9,153,767 samples, 0.01%)</title><rect x="13.9" y="469" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="16.91" y="479.5" ></text>
</g>
<g >
<title>__schedule (11,287,461 samples, 0.01%)</title><rect x="687.4" y="581" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="690.39" y="591.5" ></text>
</g>
<g >
<title>_int_free (46,871,507 samples, 0.06%)</title><rect x="255.2" y="677" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="258.19" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="501" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1017.70" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (189,459,841 samples, 0.24%)</title><rect x="95.0" y="661" width="2.8" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="98.02" y="671.5" ></text>
</g>
<g >
<title>std::operator~ (10,605,203 samples, 0.01%)</title><rect x="696.2" y="629" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="699.16" y="639.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (37,190,033 samples, 0.05%)</title><rect x="645.6" y="645" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="648.62" y="655.5" ></text>
</g>
<g >
<title>schedule (8,996,448 samples, 0.01%)</title><rect x="605.7" y="581" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="608.69" y="591.5" ></text>
</g>
<g >
<title>std::locale::operator= (31,825,919 samples, 0.04%)</title><rect x="266.6" y="629" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="269.64" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (10,441,618 samples, 0.01%)</title><rect x="1009.7" y="597" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1012.65" y="607.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (51,200,613 samples, 0.06%)</title><rect x="130.6" y="629" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="133.60" y="639.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (85,892,099 samples, 0.11%)</title><rect x="1014.8" y="597" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1017.84" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (293,870,689 samples, 0.37%)</title><rect x="62.3" y="629" width="4.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="65.27" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,777,050 samples, 0.01%)</title><rect x="786.0" y="581" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="789.03" y="591.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (51,156,494 samples, 0.06%)</title><rect x="729.8" y="693" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="732.84" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (42,458,426 samples, 0.05%)</title><rect x="663.4" y="661" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="666.43" y="671.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (17,959,563 samples, 0.02%)</title><rect x="376.3" y="661" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="379.32" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (61,218,175 samples, 0.08%)</title><rect x="352.5" y="661" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="355.49" y="671.5" ></text>
</g>
<g >
<title>psi_task_switch (11,287,461 samples, 0.01%)</title><rect x="687.4" y="565" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="690.39" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (139,493,712 samples, 0.17%)</title><rect x="420.3" y="693" width="2.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="423.28" y="703.5" ></text>
</g>
<g >
<title>skb_release_data (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="261" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1019.77" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="357" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.43" y="367.5" ></text>
</g>
<g >
<title>_int_free (14,028,123 samples, 0.02%)</title><rect x="355.3" y="693" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="358.29" y="703.5" ></text>
</g>
<g >
<title>std::locale::~locale (44,406,267 samples, 0.06%)</title><rect x="304.6" y="645" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="307.63" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,998,180 samples, 0.01%)</title><rect x="17.5" y="549" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="20.50" y="559.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (9,045,816 samples, 0.01%)</title><rect x="404.5" y="709" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="407.46" y="719.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (1,441,764,874 samples, 1.81%)</title><rect x="77.3" y="677" width="21.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="80.28" y="687.5" >M..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (38,832,833 samples, 0.05%)</title><rect x="156.0" y="645" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="159.03" y="655.5" ></text>
</g>
<g >
<title>_int_free (177,286,980 samples, 0.22%)</title><rect x="831.8" y="661" width="2.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="834.79" y="671.5" ></text>
</g>
<g >
<title>pthread_once@plt (8,991,961 samples, 0.01%)</title><rect x="107.3" y="645" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="110.30" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (31,158,829 samples, 0.04%)</title><rect x="84.1" y="629" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="87.06" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,057,421 samples, 0.01%)</title><rect x="576.3" y="629" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="579.31" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (23,288,062 samples, 0.03%)</title><rect x="543.3" y="661" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="546.33" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10,050,323 samples, 0.01%)</title><rect x="1011.4" y="629" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1014.36" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,639,512 samples, 0.01%)</title><rect x="728.4" y="661" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="731.35" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="517" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="527.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,153,767 samples, 0.01%)</title><rect x="13.9" y="485" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.91" y="495.5" ></text>
</g>
<g >
<title>eb_select_engine (34,133,572 samples, 0.04%)</title><rect x="1015.6" y="373" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1018.60" y="383.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (91,424,620 samples, 0.11%)</title><rect x="1001.7" y="677" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1004.73" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (385,449,651 samples, 0.48%)</title><rect x="1183.2" y="741" width="5.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1186.18" y="751.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (1,207,572,930 samples, 1.51%)</title><rect x="685.7" y="677" width="17.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="688.69" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (35,350,401 samples, 0.04%)</title><rect x="152.3" y="661" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="155.27" y="671.5" ></text>
</g>
<g >
<title>_dl_map_object (122,501,937 samples, 0.15%)</title><rect x="11.1" y="709" width="1.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="14.07" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (583,610,713 samples, 0.73%)</title><rect x="127.7" y="645" width="8.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="130.70" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (73,391,418 samples, 0.09%)</title><rect x="550.9" y="645" width="1.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="553.93" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (34,355,765 samples, 0.04%)</title><rect x="57.9" y="645" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="60.89" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (11,058,204 samples, 0.01%)</title><rect x="1013.0" y="629" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1016.02" y="639.5" ></text>
</g>
<g >
<title>eb_move_to_gpu (13,080,954 samples, 0.02%)</title><rect x="1015.4" y="373" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1018.41" y="383.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="213" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1019.77" y="223.5" ></text>
</g>
<g >
<title>std::locale::operator= (14,015,858 samples, 0.02%)</title><rect x="374.7" y="661" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="377.73" y="671.5" ></text>
</g>
<g >
<title>std::operator|= (57,357,669 samples, 0.07%)</title><rect x="324.9" y="629" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="327.91" y="639.5" ></text>
</g>
<g >
<title>pthread_once@plt (23,988,374 samples, 0.03%)</title><rect x="371.0" y="629" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="373.95" y="639.5" ></text>
</g>
<g >
<title>glXChooseVisual (28,641,212 samples, 0.04%)</title><rect x="15.4" y="645" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="18.43" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (11,059,381 samples, 0.01%)</title><rect x="246.3" y="629" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="249.27" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (65,421,163 samples, 0.08%)</title><rect x="73.6" y="645" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="76.56" y="655.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (7,555,648 samples, 0.01%)</title><rect x="13.3" y="565" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="16.31" y="575.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::__cxx11::to_string (23,124,327 samples, 0.03%)</title><rect x="1118.1" y="709" width="0.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="1121.11" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (35,250,199 samples, 0.04%)</title><rect x="272.2" y="677" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="275.19" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (21,903,184 samples, 0.03%)</title><rect x="52.3" y="661" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="55.34" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11,060,742 samples, 0.01%)</title><rect x="673.5" y="485" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="676.49" y="495.5" ></text>
</g>
<g >
<title>std::operator&amp;= (10,602,635 samples, 0.01%)</title><rect x="960.3" y="629" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="963.33" y="639.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (277,865,445 samples, 0.35%)</title><rect x="830.3" y="677" width="4.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="833.30" y="687.5" ></text>
</g>
<g >
<title>notifier_call_chain (9,175,991 samples, 0.01%)</title><rect x="970.2" y="469" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="973.17" y="479.5" ></text>
</g>
<g >
<title>Log::operator&lt;&lt; (35,198,080 samples, 0.04%)</title><rect x="1179.9" y="741" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1182.94" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,998,180 samples, 0.01%)</title><rect x="17.5" y="533" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="20.50" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (808,094,339 samples, 1.01%)</title><rect x="83.1" y="661" width="11.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="86.08" y="671.5" ></text>
</g>
<g >
<title>std::locale::locale (263,162,968 samples, 0.33%)</title><rect x="902.0" y="645" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="905.01" y="655.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (39,249,473 samples, 0.05%)</title><rect x="14.6" y="517" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="17.57" y="527.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (690,489,713 samples, 0.86%)</title><rect x="175.5" y="661" width="10.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="178.47" y="671.5" ></text>
</g>
<g >
<title>__run_timers (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="629" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1020.44" y="639.5" ></text>
</g>
<g >
<title>__remove_hrtimer (9,777,050 samples, 0.01%)</title><rect x="786.0" y="517" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="789.03" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (9,488,386 samples, 0.01%)</title><rect x="1177.1" y="725" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1180.05" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (71,057,125 samples, 0.09%)</title><rect x="68.9" y="597" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="71.93" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (38,398,383 samples, 0.05%)</title><rect x="785.1" y="613" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="788.10" y="623.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="533" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (32,948,473 samples, 0.04%)</title><rect x="523.0" y="613" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="526.01" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::__resize_and_overwrite&lt;std::__cxx11::to_string (180,331,610 samples, 0.23%)</title><rect x="1145.7" y="693" width="2.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1148.75" y="703.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="645" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="20.64" y="655.5" ></text>
</g>
<g >
<title>xcb_poll_for_special_event (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="565" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1017.70" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,690,482 samples, 0.01%)</title><rect x="525.7" y="517" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="528.67" y="527.5" ></text>
</g>
<g >
<title>task_tick_fair (11,830,286 samples, 0.01%)</title><rect x="51.4" y="469" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="54.44" y="479.5" ></text>
</g>
<g >
<title>std::locale::~locale (101,294,970 samples, 0.13%)</title><rect x="631.4" y="629" width="1.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="634.36" y="639.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (157,527,758 samples, 0.20%)</title><rect x="523.5" y="613" width="2.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="526.50" y="623.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (17,941,835 samples, 0.02%)</title><rect x="15.2" y="565" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.16" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (56,183,405 samples, 0.07%)</title><rect x="801.9" y="613" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="804.90" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (61,282,104 samples, 0.08%)</title><rect x="53.7" y="661" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="56.73" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (107,678,890 samples, 0.13%)</title><rect x="600.3" y="661" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="603.31" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (32,168,149 samples, 0.04%)</title><rect x="242.1" y="629" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="245.12" y="639.5" ></text>
</g>
<g >
<title>std::operator&amp; (13,069,340 samples, 0.02%)</title><rect x="166.2" y="645" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="169.24" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,871,941 samples, 0.02%)</title><rect x="186.5" y="661" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="189.51" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (13,076,055 samples, 0.02%)</title><rect x="692.5" y="613" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="695.52" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (43,217,836 samples, 0.05%)</title><rect x="247.8" y="629" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="250.78" y="639.5" ></text>
</g>
<g >
<title>intel_display_power_get (24,084,952 samples, 0.03%)</title><rect x="1015.6" y="325" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1018.60" y="335.5" ></text>
</g>
<g >
<title>update_process_times (11,572,782 samples, 0.01%)</title><rect x="653.5" y="565" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="656.49" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (13,078,367 samples, 0.02%)</title><rect x="252.6" y="661" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="255.65" y="671.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (34,327,619 samples, 0.04%)</title><rect x="193.4" y="677" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="196.39" y="687.5" ></text>
</g>
<g >
<title>std::locale::locale (283,789,110 samples, 0.36%)</title><rect x="642.2" y="661" width="4.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="645.16" y="671.5" ></text>
</g>
<g >
<title>operator new (35,238,788 samples, 0.04%)</title><rect x="400.1" y="661" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="403.10" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,998,180 samples, 0.01%)</title><rect x="17.5" y="565" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="20.50" y="575.5" ></text>
</g>
<g >
<title>__slab_free (39,249,473 samples, 0.05%)</title><rect x="14.6" y="293" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="17.57" y="303.5" ></text>
</g>
<g >
<title>malloc (11,057,296 samples, 0.01%)</title><rect x="1002.9" y="597" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1005.91" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9,153,767 samples, 0.01%)</title><rect x="13.9" y="53" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="16.91" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (14,087,014 samples, 0.02%)</title><rect x="484.9" y="693" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="487.94" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (229,372,191 samples, 0.29%)</title><rect x="238.7" y="629" width="3.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="241.73" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37,208,551 samples, 0.05%)</title><rect x="940.9" y="629" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="943.95" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (14,066,274 samples, 0.02%)</title><rect x="10.6" y="805" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.57" y="815.5" ></text>
</g>
<g >
<title>strlen@plt (11,061,653 samples, 0.01%)</title><rect x="721.6" y="677" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="724.63" y="687.5" ></text>
</g>
<g >
<title>_dlerror_run (28,265,752 samples, 0.04%)</title><rect x="15.4" y="581" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="18.43" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="421" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1019.77" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (704,092,824 samples, 0.88%)</title><rect x="530.4" y="645" width="10.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="533.40" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin (214,659,791 samples, 0.27%)</title><rect x="811.1" y="645" width="3.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="814.14" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (63,282,627 samples, 0.08%)</title><rect x="463.7" y="677" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="466.70" y="687.5" ></text>
</g>
<g >
<title>drm_handle_vblank (11,060,742 samples, 0.01%)</title><rect x="673.5" y="501" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="676.49" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (10,036,283 samples, 0.01%)</title><rect x="92.3" y="629" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="95.30" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9,175,991 samples, 0.01%)</title><rect x="970.2" y="597" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="973.17" y="607.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (44,017,340 samples, 0.06%)</title><rect x="44.8" y="613" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="47.84" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_handler (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="645" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1191.73" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (12,069,896 samples, 0.02%)</title><rect x="413.8" y="677" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="416.84" y="687.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (23,599,881 samples, 0.03%)</title><rect x="664.1" y="661" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="667.05" y="671.5" ></text>
</g>
<g >
<title>operator new (14,085,853 samples, 0.02%)</title><rect x="1001.5" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1004.52" y="623.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (598,985,560 samples, 0.75%)</title><rect x="311.2" y="677" width="8.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="314.20" y="687.5" ></text>
</g>
<g >
<title>operator new (13,080,083 samples, 0.02%)</title><rect x="213.4" y="661" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="216.38" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (21,136,294 samples, 0.03%)</title><rect x="81.8" y="629" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="84.78" y="639.5" ></text>
</g>
<g >
<title>[unknown] (14,066,274 samples, 0.02%)</title><rect x="10.6" y="773" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.57" y="783.5" ></text>
</g>
<g >
<title>CPU::CP (43,780,781 samples, 0.05%)</title><rect x="38.4" y="693" width="0.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="41.43" y="703.5" ></text>
</g>
<g >
<title>std::locale::locale (80,473,825 samples, 0.10%)</title><rect x="370.1" y="645" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="373.12" y="655.5" ></text>
</g>
<g >
<title>irq_work_run_list (11,744,896 samples, 0.01%)</title><rect x="258.0" y="597" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="260.99" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (12,940,601 samples, 0.02%)</title><rect x="217.9" y="677" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="220.91" y="687.5" ></text>
</g>
<g >
<title>std::locale::~locale (134,437,669 samples, 0.17%)</title><rect x="891.7" y="613" width="2.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="894.71" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (265,090,081 samples, 0.33%)</title><rect x="226.8" y="693" width="3.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="229.75" y="703.5" ></text>
</g>
<g >
<title>std::operator| (12,070,373 samples, 0.02%)</title><rect x="284.0" y="613" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="287.03" y="623.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,977,826 samples, 0.03%)</title><rect x="195.5" y="661" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="198.54" y="671.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (19,286,277 samples, 0.02%)</title><rect x="827.4" y="661" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="830.39" y="671.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (45,100,149 samples, 0.06%)</title><rect x="66.0" y="597" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="68.95" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (423,509,008 samples, 0.53%)</title><rect x="552.0" y="661" width="6.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="555.02" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (82,236,061 samples, 0.10%)</title><rect x="1116.9" y="709" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1119.90" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (45,654,786 samples, 0.06%)</title><rect x="1114.9" y="709" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1117.95" y="719.5" ></text>
</g>
<g >
<title>std::locale::locale (134,063,275 samples, 0.17%)</title><rect x="299.4" y="629" width="2.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="302.38" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,991,336 samples, 0.01%)</title><rect x="1014.7" y="453" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1017.70" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (200,282,461 samples, 0.25%)</title><rect x="555.3" y="645" width="3.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="558.31" y="655.5" ></text>
</g>
<g >
<title>mmap_region (28,265,752 samples, 0.04%)</title><rect x="15.4" y="277" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="18.43" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (36,216,555 samples, 0.05%)</title><rect x="107.8" y="677" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="110.85" y="687.5" ></text>
</g>
<g >
<title>sched_tick (8,880,509 samples, 0.01%)</title><rect x="692.4" y="501" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="695.39" y="511.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="293" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1019.77" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;char const&gt; (13,060,840 samples, 0.02%)</title><rect x="79.6" y="613" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="82.64" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (11,061,995 samples, 0.01%)</title><rect x="1010.8" y="613" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1013.78" y="623.5" ></text>
</g>
<g >
<title>Logger::log (63,629,537 samples, 0.08%)</title><rect x="1006.9" y="629" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1009.94" y="639.5" ></text>
</g>
<g >
<title>std::operator|= (11,059,356 samples, 0.01%)</title><rect x="325.8" y="645" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="328.76" y="655.5" ></text>
</g>
<g >
<title>__i915_vma_retire (11,744,896 samples, 0.01%)</title><rect x="258.0" y="501" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="260.99" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (629,657,043 samples, 0.79%)</title><rect x="259.8" y="677" width="9.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="262.79" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (19,088,197 samples, 0.02%)</title><rect x="65.7" y="597" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="68.67" y="607.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (12,002,249 samples, 0.02%)</title><rect x="196.9" y="645" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="199.89" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="533" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="543.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (13,078,579 samples, 0.02%)</title><rect x="1015.0" y="501" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1018.02" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_handler (22,105,530 samples, 0.03%)</title><rect x="1133.0" y="613" width="0.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1135.97" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (37,012,257 samples, 0.05%)</title><rect x="419.7" y="677" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="422.73" y="687.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (171,235,987 samples, 0.21%)</title><rect x="661.9" y="677" width="2.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="664.87" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (11,938,253 samples, 0.01%)</title><rect x="53.6" y="645" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="56.55" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (38,797,397 samples, 0.05%)</title><rect x="17.6" y="581" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.64" y="591.5" ></text>
</g>
<g >
<title>std::operator| (21,030,665 samples, 0.03%)</title><rect x="165.9" y="613" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="168.93" y="623.5" ></text>
</g>
<g >
<title>_dl_open (28,265,752 samples, 0.04%)</title><rect x="15.4" y="517" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="18.43" y="527.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (73,357,523 samples, 0.09%)</title><rect x="601.9" y="661" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="604.90" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (236,285,108 samples, 0.30%)</title><rect x="658.4" y="677" width="3.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="661.38" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (70,225,290 samples, 0.09%)</title><rect x="976.5" y="645" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="979.48" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (13,078,579 samples, 0.02%)</title><rect x="1015.0" y="485" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1018.02" y="495.5" ></text>
</g>
<g >
<title>do_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="581" width="1.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.07" y="591.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (28,265,752 samples, 0.04%)</title><rect x="15.4" y="325" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="18.43" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (252,999,791 samples, 0.32%)</title><rect x="408.0" y="677" width="3.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="410.95" y="687.5" ></text>
</g>
<g >
<title>std::operator&amp;= (32,520,160 samples, 0.04%)</title><rect x="201.9" y="629" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="204.91" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (344,341,486 samples, 0.43%)</title><rect x="13.3" y="725" width="5.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.29" y="735.5" ></text>
</g>
<g >
<title>std::locale::~locale (11,059,571 samples, 0.01%)</title><rect x="136.2" y="629" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="139.16" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (152,509,262 samples, 0.19%)</title><rect x="256.5" y="677" width="2.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="259.53" y="687.5" ></text>
</g>
<g >
<title>std::locale::locale (20,968,570 samples, 0.03%)</title><rect x="267.8" y="645" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="270.82" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (11,262,401 samples, 0.01%)</title><rect x="463.5" y="661" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="466.53" y="671.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,268,626 samples, 0.01%)</title><rect x="13.0" y="661" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.03" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (48,064,731 samples, 0.06%)</title><rect x="197.1" y="645" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="200.07" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (98,533,146 samples, 0.12%)</title><rect x="477.8" y="661" width="1.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="480.84" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (101,061,291 samples, 0.13%)</title><rect x="815.4" y="629" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="818.44" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (55,343,270 samples, 0.07%)</title><rect x="469.7" y="661" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="472.65" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (72,265,536 samples, 0.09%)</title><rect x="318.9" y="629" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="321.85" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (34,583,992 samples, 0.04%)</title><rect x="1010.3" y="597" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1013.27" y="607.5" ></text>
</g>
<g >
<title>sock_recvmsg (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="325" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1019.77" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,550,726 samples, 0.04%)</title><rect x="300.7" y="613" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="303.74" y="623.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1,104,784,809 samples, 1.38%)</title><rect x="122.9" y="661" width="16.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="125.90" y="671.5" ></text>
</g>
<g >
<title>do_read_fault (122,501,937 samples, 0.15%)</title><rect x="11.1" y="565" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.07" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (10,051,423 samples, 0.01%)</title><rect x="403.4" y="709" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="406.44" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (74,525,476 samples, 0.09%)</title><rect x="79.8" y="629" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="82.84" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (9,188,880 samples, 0.01%)</title><rect x="417.1" y="677" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="420.10" y="687.5" ></text>
</g>
<g >
<title>copy_process (38,313,800 samples, 0.05%)</title><rect x="17.6" y="293" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="20.64" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (96,432,038 samples, 0.12%)</title><rect x="101.5" y="677" width="1.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="104.47" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (34,088,594 samples, 0.04%)</title><rect x="450.7" y="677" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="453.75" y="687.5" ></text>
</g>
<g >
<title>std::locale::operator= (66,515,467 samples, 0.08%)</title><rect x="183.4" y="629" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="186.36" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (23,125,120 samples, 0.03%)</title><rect x="455.9" y="629" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="458.89" y="639.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (62,357,379 samples, 0.08%)</title><rect x="672.7" y="661" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="675.73" y="671.5" ></text>
</g>
<g >
<title>__common_interrupt (11,060,742 samples, 0.01%)</title><rect x="673.5" y="613" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="676.49" y="623.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (139,062,617 samples, 0.17%)</title><rect x="197.8" y="645" width="2.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="200.78" y="655.5" ></text>
</g>
<g >
<title>_dl_relocate_object (9,771,959 samples, 0.01%)</title><rect x="12.9" y="757" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="15.88" y="767.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (24,120,768 samples, 0.03%)</title><rect x="109.6" y="645" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="112.57" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (27,151,872 samples, 0.03%)</title><rect x="1089.6" y="709" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1092.57" y="719.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (311,888,418 samples, 0.39%)</title><rect x="623.2" y="613" width="4.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="626.18" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (432,278,333 samples, 0.54%)</title><rect x="61.5" y="645" width="6.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="64.55" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (14,085,853 samples, 0.02%)</title><rect x="1001.5" y="629" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1004.52" y="639.5" ></text>
</g>
<g >
<title>free@plt (12,066,511 samples, 0.02%)</title><rect x="213.2" y="661" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="216.20" y="671.5" ></text>
</g>
<g >
<title>std::locale::~locale (26,919,389 samples, 0.03%)</title><rect x="193.0" y="677" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="195.99" y="687.5" ></text>
</g>
<g >
<title>std::hex (68,292,293 samples, 0.09%)</title><rect x="109.9" y="661" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="112.93" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (80,888,357 samples, 0.10%)</title><rect x="907.9" y="645" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="910.93" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (12,060,022 samples, 0.02%)</title><rect x="102.9" y="677" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="105.90" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,190,619 samples, 0.01%)</title><rect x="90.6" y="629" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="93.65" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (25,067,398 samples, 0.03%)</title><rect x="829.4" y="661" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="832.38" y="671.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (492,285,840 samples, 0.62%)</title><rect x="161.4" y="677" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="164.44" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (2,433,037,083 samples, 3.05%)</title><rect x="169.5" y="693" width="36.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="172.51" y="703.5" >std..</text>
</g>
<g >
<title>std::setw (25,718,098 samples, 0.03%)</title><rect x="997.0" y="677" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="999.97" y="687.5" ></text>
</g>
<g >
<title>shmem_get_folio_gfp (9,153,767 samples, 0.01%)</title><rect x="13.9" y="149" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="16.91" y="159.5" ></text>
</g>
<g >
<title>std::setw (23,130,240 samples, 0.03%)</title><rect x="169.0" y="677" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="172.00" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="501" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="18.29" y="511.5" ></text>
</g>
<g >
<title>__intel_display_power_get_domain.part.0 (24,084,952 samples, 0.03%)</title><rect x="1015.6" y="309" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1018.60" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (617,799,854 samples, 0.77%)</title><rect x="839.1" y="661" width="9.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="842.13" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (13,069,301 samples, 0.02%)</title><rect x="569.9" y="677" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="572.94" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (14,066,531 samples, 0.02%)</title><rect x="299.2" y="629" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="302.17" y="639.5" ></text>
</g>
<g >
<title>_int_free (234,846,476 samples, 0.29%)</title><rect x="572.8" y="677" width="3.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="575.84" y="687.5" ></text>
</g>
<g >
<title>pthread_once@plt (13,871,593 samples, 0.02%)</title><rect x="376.6" y="661" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="379.59" y="671.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (11,060,742 samples, 0.01%)</title><rect x="673.5" y="565" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="676.49" y="575.5" ></text>
</g>
<g >
<title>CPU::decodeAndExecute (13,588,797,698 samples, 17.02%)</title><rect x="34.3" y="709" width="200.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="37.31" y="719.5" >CPU::decodeAndExecute</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (91,189,616 samples, 0.11%)</title><rect x="85.2" y="645" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.25" y="655.5" ></text>
</g>
<g >
<title>std::_Setfill&lt;char&gt; std::setfill&lt;char&gt; (10,820,635 samples, 0.01%)</title><rect x="357.3" y="693" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="360.27" y="703.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (22,113,918 samples, 0.03%)</title><rect x="106.6" y="613" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="109.64" y="623.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,792,003 samples, 0.01%)</title><rect x="18.2" y="549" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="21.24" y="559.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (27,081,684 samples, 0.03%)</title><rect x="91.6" y="645" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="94.57" y="655.5" ></text>
</g>
<g >
<title>SDLRenderer::cleanup (17,761,999 samples, 0.02%)</title><rect x="13.0" y="757" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="16.03" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (79,804,106 samples, 0.10%)</title><rect x="487.4" y="693" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="490.43" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (13,960,902 samples, 0.02%)</title><rect x="1007.7" y="613" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1010.67" y="623.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (9,094,954 samples, 0.01%)</title><rect x="15.2" y="437" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.16" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (12,069,298 samples, 0.02%)</title><rect x="278.2" y="645" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="281.24" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (27,145,924 samples, 0.03%)</title><rect x="105.4" y="629" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="108.40" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (9,153,767 samples, 0.01%)</title><rect x="13.9" y="405" width="0.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="16.91" y="415.5" ></text>
</g>
<g >
<title>do_fault (32,474,425 samples, 0.04%)</title><rect x="13.4" y="325" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="16.43" y="335.5" ></text>
</g>
<g >
<title>PPU::renderScanline (695,961,090 samples, 0.87%)</title><rect x="1003.1" y="709" width="10.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1006.08" y="719.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::operator (149,828,289 samples, 0.19%)</title><rect x="444.0" y="629" width="2.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="446.97" y="639.5" ></text>
</g>
<g >
<title>__i915_ggtt_pin (9,153,767 samples, 0.01%)</title><rect x="13.9" y="277" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="16.91" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (44,933,804 samples, 0.06%)</title><rect x="289.7" y="661" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="292.70" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (28,265,752 samples, 0.04%)</title><rect x="15.4" y="341" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="18.43" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (8,880,509 samples, 0.01%)</title><rect x="692.4" y="485" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="695.39" y="495.5" ></text>
</g>
<g >
<title>__gt_unpark (24,084,952 samples, 0.03%)</title><rect x="1015.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1018.60" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (9,158,251 samples, 0.01%)</title><rect x="370.5" y="629" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="373.46" y="639.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (86,854,554 samples, 0.11%)</title><rect x="935.0" y="645" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="937.96" y="655.5" ></text>
</g>
<g >
<title>dl_open_worker (85,769,467 samples, 0.11%)</title><rect x="15.8" y="549" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="18.85" y="559.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (814,419,739 samples, 1.02%)</title><rect x="673.7" y="661" width="12.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="676.65" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (76,548,012 samples, 0.10%)</title><rect x="471.0" y="661" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="474.02" y="671.5" ></text>
</g>
<g >
<title>i915_gem_execbuffer2_ioctl (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="405" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1018.41" y="415.5" ></text>
</g>
<g >
<title>std::locale::~locale (59,714,036 samples, 0.07%)</title><rect x="149.1" y="677" width="0.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="152.13" y="687.5" ></text>
</g>
<g >
<title>irqentry_exit (8,996,448 samples, 0.01%)</title><rect x="605.7" y="613" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="608.69" y="623.5" ></text>
</g>
<g >
<title>memcpy@plt (13,077,531 samples, 0.02%)</title><rect x="844.3" y="645" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="847.26" y="655.5" ></text>
</g>
<g >
<title>strlen@plt (14,085,420 samples, 0.02%)</title><rect x="84.7" y="629" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="87.70" y="639.5" ></text>
</g>
<g >
<title>update_process_times (13,076,852 samples, 0.02%)</title><rect x="586.7" y="565" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="589.71" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (35,162,085 samples, 0.04%)</title><rect x="725.4" y="693" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="728.38" y="703.5" ></text>
</g>
<g >
<title>update_cfs_group (11,830,286 samples, 0.01%)</title><rect x="51.4" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="54.44" y="463.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (94,883,435 samples, 0.12%)</title><rect x="1014.7" y="645" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1017.70" y="655.5" ></text>
</g>
<g >
<title>std::locale::~locale (14,052,557 samples, 0.02%)</title><rect x="273.0" y="677" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="276.04" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (34,095,021 samples, 0.04%)</title><rect x="522.5" y="597" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="525.51" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (45,576,857 samples, 0.06%)</title><rect x="171.9" y="661" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="174.85" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (14,084,294 samples, 0.02%)</title><rect x="271.8" y="677" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="274.82" y="687.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (532,929,840 samples, 0.67%)</title><rect x="153.6" y="661" width="7.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="156.57" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; intToHex&lt;unsigned short&gt; (8,733,626,849 samples, 10.94%)</title><rect x="576.5" y="693" width="129.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="579.48" y="703.5" >std::__cxx11::ba..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (14,081,930 samples, 0.02%)</title><rect x="250.7" y="629" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="253.67" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="677" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1191.73" y="687.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (25,064,088 samples, 0.03%)</title><rect x="731.4" y="709" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="734.38" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (274,134,637 samples, 0.34%)</title><rect x="86.6" y="645" width="4.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="89.60" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (27,190,997 samples, 0.03%)</title><rect x="74.1" y="629" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="77.12" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (11,744,896 samples, 0.01%)</title><rect x="258.0" y="661" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="260.99" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end (46,283,792 samples, 0.06%)</title><rect x="486.6" y="693" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="489.56" y="703.5" ></text>
</g>
<g >
<title>std::operator&amp;= (123,076,635 samples, 0.15%)</title><rect x="955.1" y="613" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="958.08" y="623.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,639,512 samples, 0.01%)</title><rect x="728.4" y="677" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="731.35" y="687.5" ></text>
</g>
<g >
<title>CPU::decodeAndExecutePrefixed (9,043,135 samples, 0.01%)</title><rect x="235.2" y="709" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="238.15" y="719.5" ></text>
</g>
<g >
<title>Logger::log (11,931,822 samples, 0.01%)</title><rect x="253.5" y="677" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="256.46" y="687.5" ></text>
</g>
<g >
<title>XML_ParseBuffer (8,070,003 samples, 0.01%)</title><rect x="14.3" y="517" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="17.31" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (75,655,352 samples, 0.09%)</title><rect x="198.7" y="629" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="201.71" y="639.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (18,971,668 samples, 0.02%)</title><rect x="997.3" y="693" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1000.35" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (12,036,682 samples, 0.02%)</title><rect x="404.3" y="709" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="407.29" y="719.5" ></text>
</g>
<g >
<title>std::setw (10,003,671 samples, 0.01%)</title><rect x="731.1" y="693" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="734.07" y="703.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (9,094,954 samples, 0.01%)</title><rect x="15.2" y="485" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.16" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,048,452 samples, 0.01%)</title><rect x="109.4" y="645" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="112.43" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (726,773,528 samples, 0.91%)</title><rect x="792.0" y="629" width="10.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="794.99" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt;::_Iter_equals_val (46,839,352 samples, 0.06%)</title><rect x="527.9" y="629" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="530.91" y="639.5" ></text>
</g>
<g >
<title>std::operator|= (172,815,405 samples, 0.22%)</title><rect x="956.9" y="613" width="2.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="959.90" y="623.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (446,593,264 samples, 0.56%)</title><rect x="261.9" y="661" width="6.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="264.87" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (14,071,399 samples, 0.02%)</title><rect x="102.5" y="661" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="105.51" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (355,174,128 samples, 0.44%)</title><rect x="456.2" y="629" width="5.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="459.24" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (42,241,835 samples, 0.05%)</title><rect x="708.9" y="677" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="711.95" y="687.5" ></text>
</g>
<g >
<title>malloc (146,329,254 samples, 0.18%)</title><rect x="223.4" y="629" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="226.35" y="639.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (269,285,531 samples, 0.34%)</title><rect x="195.9" y="661" width="3.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="198.85" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (32,474,425 samples, 0.04%)</title><rect x="13.4" y="245" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="16.43" y="255.5" ></text>
</g>
<g >
<title>XML_ParseBuffer (9,094,954 samples, 0.01%)</title><rect x="15.2" y="517" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="18.16" y="527.5" ></text>
</g>
<g >
<title>std::locale::~locale (94,627,827 samples, 0.12%)</title><rect x="925.2" y="661" width="1.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="928.24" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (127,904,660 samples, 0.16%)</title><rect x="461.6" y="661" width="1.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="464.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (13,077,359 samples, 0.02%)</title><rect x="332.6" y="677" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="335.60" y="687.5" ></text>
</g>
<g >
<title>std::operator| (22,130,017 samples, 0.03%)</title><rect x="322.6" y="613" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="325.56" y="623.5" ></text>
</g>
<g >
<title>Logger::log (9,037,135 samples, 0.01%)</title><rect x="355.0" y="709" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="357.99" y="719.5" ></text>
</g>
<g >
<title>__strlen_avx2 (12,065,996 samples, 0.02%)</title><rect x="1013.2" y="629" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1016.18" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (32,148,779 samples, 0.04%)</title><rect x="270.7" y="677" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="273.71" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (9,046,314 samples, 0.01%)</title><rect x="225.5" y="677" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="228.51" y="687.5" ></text>
</g>
<g >
<title>x64_sys_call (39,249,473 samples, 0.05%)</title><rect x="14.6" y="437" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="17.57" y="447.5" ></text>
</g>
<g >
<title>tick_program_event (11,920,552 samples, 0.01%)</title><rect x="216.1" y="565" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="219.13" y="575.5" ></text>
</g>
<g >
<title>update_process_times (8,998,180 samples, 0.01%)</title><rect x="17.5" y="501" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="20.50" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::__resize_and_overwrite&lt;std::__cxx11::to_string (65,192,909 samples, 0.08%)</title><rect x="1115.6" y="709" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1118.62" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,073,867 samples, 0.02%)</title><rect x="1015.2" y="501" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1018.21" y="511.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (332,884,230 samples, 0.42%)</title><rect x="13.3" y="709" width="4.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.29" y="719.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (47,219,753 samples, 0.06%)</title><rect x="903.7" y="629" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="906.73" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;char const&gt; &gt; (1,025,034,014 samples, 1.28%)</title><rect x="771.0" y="629" width="15.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="774.03" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (17,761,999 samples, 0.02%)</title><rect x="13.0" y="725" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.03" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (336,315,091 samples, 0.42%)</title><rect x="407.2" y="693" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="410.21" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (124,542,212 samples, 0.16%)</title><rect x="412.2" y="693" width="1.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="415.18" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (11,134,195 samples, 0.01%)</title><rect x="1181.1" y="677" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1184.15" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (28,022,862 samples, 0.04%)</title><rect x="242.6" y="645" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="245.60" y="655.5" ></text>
</g>
<g >
<title>pthread_once@plt (85,693,162 samples, 0.11%)</title><rect x="887.8" y="597" width="1.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="890.84" y="607.5" ></text>
</g>
<g >
<title>std::locale::locale (595,818,380 samples, 0.75%)</title><rect x="620.0" y="629" width="8.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="623.02" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (147,849,527 samples, 0.19%)</title><rect x="244.1" y="613" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="247.08" y="623.5" ></text>
</g>
<g >
<title>shmem_read_folio_gfp (9,153,767 samples, 0.01%)</title><rect x="13.9" y="165" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.91" y="175.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8,954,393 samples, 0.01%)</title><rect x="95.6" y="645" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="98.60" y="655.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (20,109,619 samples, 0.03%)</title><rect x="1016.6" y="613" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.61" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (25,146,807 samples, 0.03%)</title><rect x="71.9" y="629" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="74.90" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="533" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1020.44" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (294,793,482 samples, 0.37%)</title><rect x="649.6" y="677" width="4.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="652.63" y="687.5" ></text>
</g>
<g >
<title>drm_crtc_handle_vblank (11,060,742 samples, 0.01%)</title><rect x="673.5" y="517" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="676.49" y="527.5" ></text>
</g>
<g >
<title>_int_free (159,539,320 samples, 0.20%)</title><rect x="1053.9" y="661" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1056.85" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (49,344,594 samples, 0.06%)</title><rect x="804.3" y="613" width="0.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="807.31" y="623.5" ></text>
</g>
<g >
<title>Memory::fetchIOs (101,105,444 samples, 0.13%)</title><rect x="1009.7" y="645" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1012.65" y="655.5" ></text>
</g>
<g >
<title>operator delete (36,386,881 samples, 0.05%)</title><rect x="997.6" y="693" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1000.63" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (23,128,356 samples, 0.03%)</title><rect x="106.3" y="613" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="109.30" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (23,134,450 samples, 0.03%)</title><rect x="84.9" y="645" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="87.91" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (13,075,647 samples, 0.02%)</title><rect x="354.6" y="693" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="357.62" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::operator* (77,734,616 samples, 0.10%)</title><rect x="445.0" y="613" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="448.03" y="623.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (12,068,450 samples, 0.02%)</title><rect x="150.0" y="677" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="153.01" y="687.5" ></text>
</g>
<g >
<title>_XimOpenIM (26,391,642 samples, 0.03%)</title><rect x="17.2" y="677" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="20.25" y="687.5" ></text>
</g>
<g >
<title>malloc (284,546,226 samples, 0.36%)</title><rect x="982.6" y="613" width="4.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="985.58" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_clone3 (38,313,800 samples, 0.05%)</title><rect x="17.6" y="341" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="20.64" y="351.5" ></text>
</g>
<g >
<title>[libexpat.so.1.9.2] (8,846,881 samples, 0.01%)</title><rect x="15.3" y="389" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="18.29" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,214,526 samples, 0.06%)</title><rect x="1015.4" y="501" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1018.41" y="511.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (10,047,644 samples, 0.01%)</title><rect x="81.3" y="629" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="84.30" y="639.5" ></text>
</g>
<g >
<title>pthread_once@plt (69,952,648 samples, 0.09%)</title><rect x="627.8" y="613" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="630.79" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11,057,296 samples, 0.01%)</title><rect x="1002.9" y="629" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1005.91" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base (8,925,894 samples, 0.01%)</title><rect x="67.9" y="645" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.94" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_handler (8,070,003 samples, 0.01%)</title><rect x="14.3" y="357" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="17.31" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (35,437,941 samples, 0.04%)</title><rect x="143.8" y="677" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="146.84" y="687.5" ></text>
</g>
<g >
<title>xshmfence_trigger (32,474,425 samples, 0.04%)</title><rect x="13.4" y="437" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="16.43" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (1,169,906,996 samples, 1.47%)</title><rect x="433.5" y="677" width="17.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="436.46" y="687.5" ></text>
</g>
<g >
<title>std::operator~ (11,059,524 samples, 0.01%)</title><rect x="391.9" y="645" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="394.91" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10,680,993 samples, 0.01%)</title><rect x="93.1" y="613" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="96.10" y="623.5" ></text>
</g>
<g >
<title>update_process_times (10,044,588 samples, 0.01%)</title><rect x="1188.7" y="629" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.73" y="639.5" ></text>
</g>
<g >
<title>[unknown] (50,843,593 samples, 0.06%)</title><rect x="10.0" y="821" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="831.5" ></text>
</g>
<g >
<title>std::uppercase (24,134,679 samples, 0.03%)</title><rect x="110.9" y="661" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="113.93" y="671.5" ></text>
</g>
<g >
<title>std::uppercase (11,065,134 samples, 0.01%)</title><rect x="169.3" y="677" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="172.34" y="687.5" ></text>
</g>
<g >
<title>handle_softirqs (10,980,358 samples, 0.01%)</title><rect x="1017.4" y="661" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1020.44" y="671.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (9,268,626 samples, 0.01%)</title><rect x="13.0" y="533" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="16.03" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (93,214,855 samples, 0.12%)</title><rect x="1144.4" y="693" width="1.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1147.37" y="703.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (54,918,293 samples, 0.07%)</title><rect x="92.4" y="629" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="95.45" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.3000.6] (258,801,511 samples, 0.32%)</title><rect x="13.4" y="677" width="3.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="16.42" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (649,293,179 samples, 0.81%)</title><rect x="1078.3" y="725" width="9.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1081.31" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (31,273,625 samples, 0.04%)</title><rect x="90.6" y="645" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="93.65" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (37,633,447 samples, 0.05%)</title><rect x="147.8" y="661" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="150.83" y="671.5" ></text>
</g>
<g >
<title>std::locale::locale (32,666,557 samples, 0.04%)</title><rect x="268.6" y="661" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="271.62" y="671.5" ></text>
</g>
<g >
<title>drm_ioctl (9,153,767 samples, 0.01%)</title><rect x="13.9" y="389" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="16.91" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_handler (10,043,356 samples, 0.01%)</title><rect x="1087.8" y="629" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1090.76" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::_Iter_equals_val (18,037,882 samples, 0.02%)</title><rect x="542.1" y="629" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="545.07" y="639.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (10,286,970 samples, 0.01%)</title><rect x="1012.5" y="613" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1015.54" y="623.5" ></text>
</g>
<g >
<title>__strlen_avx2 (170,170,901 samples, 0.21%)</title><rect x="208.2" y="677" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="211.20" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (235,785,687 samples, 0.30%)</title><rect x="1148.4" y="693" width="3.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1151.42" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,869,899 samples, 0.01%)</title><rect x="17.1" y="437" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.12" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (579,645,686 samples, 0.73%)</title><rect x="453.1" y="661" width="8.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="456.08" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (58,780,357 samples, 0.07%)</title><rect x="720.4" y="677" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="723.43" y="687.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="549" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1019.77" y="559.5" ></text>
</g>
<g >
<title>memmove@plt (12,249,062 samples, 0.02%)</title><rect x="115.0" y="661" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="118.02" y="671.5" ></text>
</g>
<g >
<title>do_vmi_munmap (28,265,752 samples, 0.04%)</title><rect x="15.4" y="261" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.43" y="271.5" ></text>
</g>
<g >
<title>[libgallium-24.2.8-1ubuntu1~24.10.1.so] (32,948,009 samples, 0.04%)</title><rect x="13.4" y="565" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.42" y="575.5" ></text>
</g>
<g >
<title>Log::log (20,467,087 samples, 0.03%)</title><rect x="1009.7" y="629" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1012.65" y="639.5" ></text>
</g>
<g >
<title>operator new (11,938,968 samples, 0.01%)</title><rect x="1089.1" y="709" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1092.08" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (68,229,294 samples, 0.09%)</title><rect x="141.5" y="661" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="144.48" y="671.5" ></text>
</g>
<g >
<title>eb_pin_engine (9,153,767 samples, 0.01%)</title><rect x="13.9" y="325" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="16.91" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;char*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; (63,928,794 samples, 0.08%)</title><rect x="43.9" y="613" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="46.89" y="623.5" ></text>
</g>
<g >
<title>malloc (212,469,733 samples, 0.27%)</title><rect x="717.3" y="629" width="3.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="720.29" y="639.5" ></text>
</g>
<g >
<title>consume_skb (9,047,592 samples, 0.01%)</title><rect x="1016.8" y="277" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1019.77" y="287.5" ></text>
</g>
</g>
</svg>
